The reward is substantial (e.g. 12.5 BTC in Bitcoin, or 30, 000 USD at present), incentivizing participation.Nakamoto-based cryptocurrencies, such as Bitcoin and Ethereum, utilize massive computational resources for their mining. Finding a valid solution to a PoW puzzle is a probabilistic process, which follows a Poisson distribution, with a miner's probability of finding a solution within an epoch determined by the fraction of computation power it possesses in the network. Finally, although being decentralized, SMARTPOOL still offers the advantage of low variance payouts like centralized pools.As a final remark, SMARTPOOL does not make centralized pooled mining in cryptocurrencies impossible, nor does it incentivize against centralized mining or alter the underlying proof-of-work protocol (as done in work by Miller et al. [13]). Typically, Bitcoin miners competitively search for a nonce value satisfyingH(BlockHeader || nonce) ≤ D (1)where H is some preimage-resistant cryptographic hash function (e.g. SHA-256), BlockHeader includes new set of transactions that the miner wants to append to the ledger and D is a global parameter which determines the puzzle hardness. of messages Figure 1: The effect of share's difficulty on i) the probability of a miner with 1 GHs finding a share within a day as per [2]; ii) resource (i.e. number of messages) consumed by a miner; in a decentralized mining pool for Bitcoin (e.g. P2POOL). On the other hand, reducing the number of shares per block by increasing the share difficulty will increase the variance in reward for miners, thus negating the sole advantage of pooled mining (see [2] for more analysis on the effects of share difficulty). Our mechanism, aided by a new and efficient Merkle-tree based commitment scheme, guarantees the same average outcome as running a full verification for each submission by enforcing a penalty function to disincentivize cheating. • For the case of running an external SMARTPOOLbased Bitcoin mining pool on top of Ethereum, SMARTPOOL leverages the Bitcoin coinbase transaction to guarantee that miners can mine directly in their target currency (i.e. Bitcoin) without trusting a third party to proxy the payment (e.g. between Ethereum and Bitcoin). Thus, miners receive payouts for their shares one or more blocks after SMARTPOOL receives reward from the target network; and, the mechanism ensures that the cryptographic commitment strictly preceeds the verification step (the cryptographic reveal phase). The Merkle root of this data structure is a single cryptographic hash representing all the shares claimed and is included in the Claim as a field called ShareAugMT.After a miner claims several shares in a batch, SMART-POOL requires the miner to submit proofs to demonstrate that the shares included in the claim are valid. Specifically, when a miner claims shares S = {s 1 , s 2 , . . . , s n }, SMARTPOOL extracts a unique counter from each share, e.g., taking the first k (say 20) bits, and requires that the counters of all s i ∈ S to be strictly increasing. The description here takes an Ethereum pool as a target, but the same data structure works for other PoW-based cryptocurrency such as Bitcoin as we discuss in Section 5. An augmented Merkle tree for a set of objects S = {s 1 , s 2 , . . . , s n } is a tree whose nodes x have the form (min(x), hash(x), max(x)) where:(I) min(x) is the minimum of the children's min (or ctr(s i ), if x is a leaf corresponding to the object s i ), (II) hash(x) is the cryptographic hash of the concatenation of the children nodes (or hash(s i ) if x is a leaf corresponding to the object s i ), and (III) max(x) is the maximum of the children's max (or ctr(s i ), if x is a leaf corresponding to the object s i ). Thus, by sampling the tree in a constant number of leaves and checking their corresponding paths, with high probability we will detect a sorting error in the augmented Merkle tree if there is one.Prevent over-claiming shares across claims. In SMARTPOOL, the penalty scheme for a claim of n shares is as follow:Pay all n shares if invalid share was not detected; Pay 0 otherwise.In Section 4, we prove that our penalty scheme disincentivizes rational miners from submitting wrong or duplicated shares. It suffices for the SMARTPOOL contract to check a single, randomly chosen path through a submitted augmented Merkle tree in order to pay fairly for shares, on average (Corollary 9). For any node x in a augmented Merkle tree, (I) min(x) is the minimum of all nodes below x, and (II) max(x) is the maximum of all nodes below x.Proof. By the inductive hypothesis, the max of x's left child is less than the min of the next right child down, which is less than the min of the next right child down and so on, all the way down to some leaf y. By a symmetrical argument, the min of x's left child is greater than some leaf z which happens to be to the right of y. Let x be the lowest node (farthest from the root) which is an ancestor of both y and z. By Lemma 3, y is less than or equal to the max of x's left child, and z is is greater than or equal to the min of x's right child. A path which is not valid is invalid.The adversary can submit any arbitrary tree with the syntactic structure of an augmented Merkle tree, but not satisfying the constraint outlined in Definition 1. An element x in an array is out of order if there exists a corresponding witness, namely an element to the left of x which is greater than or equal to x, or an element to the right of x which is less than or equal to x. Since we randomly pick a path, by Corollary 8, we sample an invalid share with probability k/n and a valid share with probability (n − k)/n. Hence the expected profit from the payment scheme in Definition 2 isk n · 0 + n − k n · n = n − k.One expects to obtain this same profit by submitting only the n − k valid shares. We next consider the scenario in which the the adversary is able to drop Ethereum blocks to bias the random seed.Thus, the sample blocks in our probabilistic verification are not randomly selected, i.e. the adversary can drop the blocks which sample invalid shares from his claim. We show that, even in the extreme case where the adversary controls up to 50% of Ethereum mining power (i.e. can drop 50% of the blocks), it suffices to check only two randomly chosen paths through a submitted augmented Merkle tree in order to discourage the adversary from cheating.Theorem 10. A miner submits a batch of shares by calling submitClaim() with the parameters: (i) the root of the corresponding augmented Merkle tree for the shares; (ii) number of shares in the tree; (iii) counter interval of the shares. Storing the Merkle roots of one year dataset requires storing 122 Merkle hashes, and would cost only 0.122 Ether.We note that technically, our approach does not provide a mathematical guarantee for the correct computation of Ethash. SMARTPOOL solves these problems in P2POOL by i) relying on the smart contracts which are executed in a decentralized manner; ii) using probabilistic verification and a novel data structure to reduce verification costs significantly; iii) applying simple penalty scheme to discourage cheating miners. In the widely adopted centralized pooled mining protocol, there is a pool operator who asks pool miners to solve pool sub-puzzles by finding nonce so that the hash satisfies some smaller difficulty d (d D). This is tricky because Bitcoin miners expect to receive rewards in Bitcoin, but Ethereum contracts can operate only on balances in Ether. (iii) the share correctly satisfies the proof-of-work (PoW) solution constraints (e.g. the use of predetermined 1GB dataset mandated by the Ethereum PoW scheme) The checks for (i) and (ii) are straightforward. Summing over all possible game lengths k, we find that the chance that the attacker wins is exactly∞ ∑ k=1 f (k) = (1 − γ) 2 · ∞ ∑ k=0 1 − (1 − γ) 2 · p k . The pool successfully mined over 20 blocks [27] (85 blocks [28]) in corresponding periods. If SMARTPOOL were able to randomly sample one share from the miner's committed set, and verify its validity, then the odds of having detected the cheating is 500/1000 (or 1/2). Now suppose A is not sorted, and consider the highest node x in the tree (farthest from the root) which is is an ancestor of two distinct leaves y and z where y is left of z but z ≤ y. Furthermore, if SMARTPOOL were to be deployed natively in a cryptocurrency as the only mining pool (see Appendix 10.1), these attacks no longer work.In [13], Miller et al. study different puzzles and protocols which either make pooled mining impossible and/ or disincentivize it. Hence, it is the miner's responsibility (and best interest) to verify the stored values on the contract before joining the pool. We first analyze the scenario where the adversary cannot drop Ethereum blocks to introduce bias on sampling random seed, so the sample blocks in our probabilistic scheme are randomly selected. During the first step of mining the shares, if a miner finds a valid block in the target cryptocurrency, it can directly submit the found block to the target cyrptocurrency network with the SMARTPOOL address as the beneficiary. In an Ethereum block, there is a special field called "coinbase address" which specifies the address that receives the block reward. This also reduces the amount of persistent storage required in the contract since we do not need to store all verified claims in SMARTPOOL.There are other technical subtleties in block submission and constructing coinbase transactions. Thus, in Ethereum, the condition (1) becomesH(BlockHeader || nonce || dataset) ≤ Din which the dataset includes 64 elements of the 1GB dataset that are randomly sampled with the nonce and the BlockHeader as the random seed. For (a) and (b), one can think of using a standard Merkle tree on all the claimed share set to generate the cryptographic commitment. If the range is made smaller so as to exclude the value of a leaf above that doesn't have a sorting error, then a new invalid path was introduced by cheating. The probability that the adversary's claim is still valid after two samples is the probability that two consecutive blocks in Ethereum are good blocks. As discussed in [2], high variance in the reward (i.e. the supply of money) decreases miners' utility by making it harder for them to predict their income and verify that their systems are working correctly. It is not straightforward to efficiently check (iii) inside a smart contract. In [2] Rosenfeld et al. discussed (i) "pool hopping" in which miners hop across different pools to exploit a weakness of an old payoff scheme, and (ii) "lie in wait" attacks that allows miner to strategically calculate the time to submit his blocks. Thus, on average, it is not profitable to submit invalid shares to SMARTPOOL if we employ the payment scheme in Definition 2 and check one random path from the augmented Merkle tree.In summary, SMARTPOOL can efficiently probabilistically check that an augmented Merkle tree is sorted. Although miners benefit from low payout variance in pooled mining , centralized mining pools require members to trust that pool operators will remunerate them fairly. SMARTPOOL's design can be used to implement a decentralized mining pool on Ethereum for many existing target cryptocurrencies, but for ease of explanation we fix Ethereum as the target. To invoke a contract (i.e. execute its code) at address addr, users send a transaction to addr with an appropriate payload, i.e. payment for the execution (in Ether) and/or input data for the invocation. If one knows only the root of a Merkle tree and wants to confirm that some data x sits at one of the leaves, then holder of the original data can provide a "Merkle path" from the root to the leaf containing x together with the children of each node traversed in the Merkle tree. Nearly 95% of Bit-coin's and 80% of Ethereum's mining power resides with less than ten and six mining pools respectively. As a result, the size of the coinbase transaction could be in the order of 10KB (e.g., P2POOL's coinbase transactions is of size 10KB [24]). We illustrate them by considering a straw-man solution (called StrawmanPool) in Figure 2 which implements a decentralized pool as a Ethereum smart contract. Second, the ShareProof contains an indication of the verClaimList based on which the payouts to miners were determined by the claimant. We consider the problem of building a decentralized protocol which allows a large open network to collectively solve a computational PoW puzzle, and distribute the earned reward between the participants proportional to their computational contributions. Since the right-hand side is a geometric series in which the magnitude of the common ratio is less than 1, we obtain∞ ∑ k=1 f (k) = 1 1 − (1 − (1 − γ) 2 ) · p = 1 1 + (γ 2 − 2γ)p . First, we aim to provide an efficient and practical decentralized pooled mining protocol so miners have an option to move away from centralized mining pools. However, in a standard Merkle tree, verifying the inclusion of a share is efficient, but checking the ordering of the set elements is not efficient. For example, we can use the the pair (block-timestamp, nonce) as a counter in an Ethereum block. Each claim specifies the number of shares the miner claims to have found, and it has a particular structure that aids verification in a subsequent step. For efficiency, SMARTPOOL uses a simple but powerful observation: if we probabilistically verify the claims of a miner, and pay only if no cheating is detected, then expected payoffs of cheating miners are the same or less than those of honest miners. While some Bitcoin pools currently offer limited control to miners of transaction selection via the getblocktemplate protocol [7], this protocol only permits a choice between mining with a transaction set chosen by the pool or mining an empty block. If the miner fails to submit any of these determined shares, they will not be able to claim the reward.Putting everything together, we summarize the entire SMARTPOOL protocol in Figure 4 of the Appendix. Assume (I), and further assume than (II) holds restricted to the first n levels above the leaves (the leaves are at the ground, i.e. zero level). If the verification fails, then the claim is discarded, and the miner will not be able to submit all the shares (or a subset of them) again (forced by validating the counter in submitClaim()). Thus, to explicitly compute Ethash, one would have to store 1 GB data in a contract, which costs roughly 33,554 Ether (storing 32 bytes of data costs 50,000 gas). Like any smart contract, SMARTPOOL is operated by all miners in the Ethereum network, yet it can secure other cryptocurrency networks including Bitcoin as well as the underlying Ethereum network itself. The most widely used protocol for agreement is Nakamoto consensus, which rewards one miner every epoch (lasting, say, 10 minutes as in Bitcoin) who exhibits a solution to a probabilistic computation puzzle called a "proof-of-work" (or PoW) puzzle [1]. If our test procedure is correct, the probability that our test on k independently chosen random samples fails to catch the cheating is at most (1 − m n+m ) k . Perhaps as a result, P2POOL has to date attracted only a few miners who comprise a negligible fraction of Bitcoin mining power (as of June 23, 2017, the last block mined by P2POOL was 22 days ago [8]). Our protocol shows how one can leverage smart contracts, autonomous blockchain programs, to decentralize cryp-tocurrency mining.