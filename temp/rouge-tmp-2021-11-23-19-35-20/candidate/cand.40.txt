If an adversarial network is on the path of the circuit between source and entry, and between exit and destination, then it can introduce small, detectable jitter between packets to correlate the two connections and therefore uncover the source and destination [19]. Users can specify arbitrary geographic regions (our techniques do not rely on any notion of network topology or ownership), and we return per-packet proofs of avoidance, when available.We construct avoidance in Tor in two applications:Never-once proves that packets forwarded along a circuit never traversed a given geographic region, even once. We show that provable, never-once avoidance is possible even when avoiding routing-central countries like the US, and that provable never-twice avoidance works for 98.6% of source-destination pairs not in the same country.Collectively, our results show that, with client-side techniques alone, it is possible to achieve greater control over where Tor data does not go. Tor's default circuit selection algorithm chooses nodes almost uniformly at random to be in a circuit, with three notable exceptions: (1) nodes with greater bandwidth are chosen more frequently, (2) no two nodes from the same subnet are chosen to be in the same circuit, and (3) no nodes are chosen from a user-specified list of countries to ignore.Circuit construction is done in such a way that the only host who knows all hops on the circuit is the source: each other host knows only the hop immediately preceding and succeeding it. When sending a packet p to the destination, the source encrypts p with the symmetric key it shares with the exit node; it then encrypts this ciphertext with the key shared with the middle node; and in turn encrypts this doubly-encrypted ciphertext with the key shared with the entry node. As we will demonstrate, because our techniques apply to noncontiguous geographic regions, they are not restricted to single nation-states, and can be applied to arbitrary sets of countries.The attacker can also run its own Tor routers or collude with some Tor routers, but, as per the previous assumption, only within its own (or its fellow colluders') borders.Finally, we make several assumptions about what an attacker cannot do. Traffic deanonymization Consider an attacker who is able to observe the traffic on a circuit between the source and the entry node and between the exit node and the destination. In particular, if the destination's traffic patterns (e.g., the number of bytes transferred in response to apparent requests) are well-known and unique, then an attacker may be able to infer the destination by observing the traffic on any leg of the circuit [23]. As an additional departure from this line of work, we focus predominately on nation-state adversaries, which are easier to locate and geographically reason about than networks (which may have points of presence throughout the world). "Avoidance routing Recent work has proposed not to sneak through attackers' networks, but to avoid them altogether. Edmundson et al. [11] propose to use maps of the Internet's routing topology to infer through which countries packets traverse, and to proxy traffic through those who appear to avoid potential attackers. In this paper, we seek techniques that yield provable security, even in the presence of such adversaries.Alibi Routing [24] uses round-trip time measurements and speed of light constraints to provably avoid userspecified, "forbidden" geographic regions. In this section, we briefly review how Alibi Routing achieves its proofs of avoidance, and we outline the challenges we address in translating it to Tor. Let R(x, y) denote the round-trip time (RTT) between hosts x and y, and let R e2e denote the end-to-end RTT that s observes; then for a user-configurable δ ≥ 0:(1 + δ ) · R e2e < min min f ∈F [R(s, f ) + R( f , a)] + R(a,t) R(s, a) + min f ∈F [R(a, f ) + R( f ,t)](1)When this inequality holds, it means that the RTT for s forwarding packets through a to t is significantly less than the smallest round-trip time that would also include a host in the forbidden region. DeTor makes use of δ in the same manner.One technical detail in Alibi Routing's proof that we will make use of is the process of computingmin f ∈F [R(s, f ) + R( f , a)] and min f ∈F [R(a, f ) + R( f ,t)]. In particular, if D(x, y) denotes the great-circle distance between hosts at locations x and y, then we have the following bound:min f ∈F [R(s, f ) + R( f , a)] + R(a,t) ≥ 3 c · min f ∈F [D(s, f ) + D( f , a)] + D(a,t)(2)where c denotes the speed of light. Critically, computing this does not require any participation from F (e.g., sending responses to pings)-it only depends on knowing the geographic coordinates of those trusted to forward the packets: s, t, and a.As mentioned above, Alibi Routing assumes that node s trusts all nodes that are provably outside of its specified forbidden region F. To determine if a node n is definitively outside of F, s directly measures the RTT to n by asking it to echo a random nonce. As we will demonstrate, we are able to extend Alibi Routing's approach to Tor, and that it is surprisingly effective at finding "alibi circuits. Fortunately, Tor already includes end-to-end integrity checks in all of its relay cells [8], which successfully validate so long as the packets followed the circuit and were unaltered by those outside or inside the circuit. To this end, we measure the end-to-end round-trip time R e2e through the entire circuit, and we compute the shortest possible time necessary to go through each circuit and the forbidden region:R min = 3 c · min          D min (s, F, e, m, x,t) D min (s, e, F, m, x,t) D min (s, e, m, F, x,t) D min (s, e, m, x, F,t)(3)Here, D min (x 1 , . . . , x n ) denotes the shortest possible great-circle distance to traverse nodes x 1 → · · · → x n in order. For example, in Figure 1, the top circuit has its shortest detour through F between the middle and exit nodes; the bottom circuit's shortest trajectory that includes F does so between source and entry.Last, we compare this theoretical minimum RTT including F (R min ) with the end-to-end measured RTT (R e2e ), and ensure that(1 + δ ) · R e2e < R min . Recall that an ellipse with focal points a and b and radius r represents all points p such that d(a, p) Thus, we can view this problem as two ellipses-one with focal points s and e and radius r e and the other with focal points x and t and radius r x , such that r e + r x = c 3 · (R e2e − R m ). Trivially, any circuit with a Tor router in some region F cannot be used to avoid F. Subtler issues can also arise, such as when two consecutive hops on a circuit are in direct line-of-sight of a forbidden region.In this section, we describe how DeTor identifies which circuits could possibly provide a proof by alibi, and how we choose from among them to maximize both anonymity and likelihood of success. If we have the latitude and longitude of each Tor router as well as the source and destination, then we can determine if a circuit has the potential to offer proof of avoidance by replacing R e2e in Eqs. In this section, we present the evaluation of DeTor in terms of both never-once and never-twice avoidance.Our evaluation is driven by several fundamental questions: who can avoid whom, does provable avoidance harm anonymity, what is the performance of the circuits that DeTor provides, and what are the primary indicators of DeTor's success (or failure)? Overall, DeTor is successful at avoiding all countries, even those prevalent on many paths, like the US.tion of all source-destination pairs who (from bottom to top): (1) terminate in the forbidden region and therefore cannot possibly achieve avoidance, (2) do not have any trusted nodes, typically because they are too close to the forbidden region to ensure that anyone they are communicating with is not in it, (3) have trusted nodes but no circuits that could possibly provide provable avoidance, (4) have circuits that could theoretically avoid the forbidden region, but none that do with real RTTs, and (5) successfully avoid the forbidden region over at least one DeTor circuit.The key takeaway from this figure is that DeTor is generally successful at finding at least one DeTor circuit for all countries and all values of δ . Figure 5 shows the distribution, across all sourcedestination pairs in our dataset, of the number of circuits that (1) offered successful never-once avoidance, (2) were estimated to be possible (but may not have achieved avoidance with real RTTs), and (3) were trusted, but not necessarily estimated to be possible. It is in this sense that we say that Tor offers its users merely the illusion of control.All together, these results demonstrate the power of DeTor-simply relying on random chance is highly unlikely to result in a circuit with provable avoidance.Given that there are source-destination pairs that have only a handful of DeTor circuits, we ask the converse: are there some circuits that offer avoidance for only a small set of source-destination pairs? popular Tor routers may become overloaded, and it becomes easier to predict which Tor routers will be on a circuit, thereby potentially opening up avenues for attack. (b) China is the forbidden region Figure 10: Success rates for never-once circuits as a function of the ratio between the maximum acceptable distance (through the circuit but not through F) and the minimum distance (directly through the circuit). In a deployed setting, a client would ideally be able to identify which circuits are more likely to work before actually going through the trouble of setting up the connection and attaching a transport stream to it.As a predictor for a circuit's success for never-once avoidance, we take the ratio of the maximum acceptable distance (how far the packet could travel without traversing the circuit and the forbidden region) to the minimum possible distance (the direct great-circle distance through the circuit). In the remainder of this section, we investigate the quality of the circuits that our nevertwice avoidance scheme finds.Turning once again to the number of circuits, Fig- ure 11 compares the number of circuits that DeTor identified as possibly resulting in a proof of avoidance (as computed using Eq. This demonstrates how fundamentally different these problems are, and that our novel approach of computing "forbidden" countries on the fly (as opposed to some a priori selection of countries to avoid with neveronce) results in greater success rates. This probability of intersection decreases when the circuits no longer come from such tightly packed groups.When the middle legs dominate the circuit's distance (the ratio in the figure approaches one), we again enter a particular regime in our dataset: These very high ratio values correspond to circuits with source and entry node both in North America (or in Europe), and with middle legs that traverse the Atlantic (and then return). Our system, DeTor, builds upon prior work on provable avoidance routing [24], and extends it (1) to work over Tor's multiple hops, and (2) to achieve "never-twice" avoidance. Through extensive simulations using real Tor latency data [6], we have demonstrated that DeTor achieves provable avoidance for most sourcedestination pairs, even when avoiding large, routingcentral countries like the United States.Although the dataset we use in evaluating DeTor comes from live Tor measurements [6], the scale and geographic positions do not reflect the Tor network in its entirety; our results indicate that having more Tor routers would lead to more potential DeTor circuits and greater overall success rates.