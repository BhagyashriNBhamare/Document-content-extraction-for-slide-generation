In this paper, we show that reusing a key pair across different versions and modes of IKE can lead to cross-protocol authentication bypasses, enabling the impersonation of a victim host or network by attackers. Examples for large industrial VPNs are the ANX (Automotive Network Exchange), ENX (European Network Exchange), and JNX (Japanese Network Exchange) associations, which connect vehicle manufacturers with their suppliers [1][2][3] Figure 1: The relationship between IKEv1 Phase 1, Phase 2, and IPsec ESP. When transmitting payload data, IPsec uses two different data formats to protect IP packets: AH (Authentication Header) for integrityonly setups and ESP (Encapsulating Security Payload) for confidentiality with optional integrity.IKE. In IKEv1, four authentication methods are available for Phase 1 (cf. subsection 2.2): Two RSA encryption based methods, one signature based method, and a PSK (Pre-Shared Key) based method. All Phase 1 modes/methods contain a DHKE (DiffieHellman Key Exchange), which guarantees PFS (Perfect Forward Secrecy) for every connection. Each SA can either be used to protect the integrity of IP packets with the data format AH (Authentication Header) or to protect confidentiality with optional integrity using the data format ESP (Encapsulating Security Payload). For Phase 1 of the protocol, two modes -main mode and aggressive mode -and four authentication methods are available. IKE uses random values called cookies (and denoted by c I and c R ) for this purpose; these cookies are present in each IKE header.The first two messages (m 1 and m 2 ) are used to negotiate on a proposal -a combination of different cryp- tographic algorithms, comparable to TLS ciphersuites. Inputs to this function are k, the most recent generated key, the shared DH secret g xy , the cookies (c I , c R ), and an index.The last two messages (m 5 and m 6 ) are used for key confirmation. Signature PKE & RPKE PSK k PRF n I ,n R (g xy ) PRF h(n I ,n R ) (c I , c R ) PRF PSK (n I , n R ) k d PRF k (g xy , c I , c R , 0) k a PRF k (k d , g xy , c I , c R , 1) k e PRF k (k a , g xy , c I , c R , 2) In Phase 1 of IKEv1, four different modes of authentication are available: (a) Digital signatures, (b) PKE (Public Key Encryption), (c) RPKE (Revised Public Key Encryption), and (d) PSKs (Pre-Shared Keys). RFC 2409 advertises this mode of authentication with a plausibly deniable exchange to raise the privacy level.In this mode, messages three and four exchange nonces and identities as ancillary information (see Fig- ure 4). This allows the attackers to reduce the range of possible solutions to:2B + rN s ≤ m 0 < 3B + rN sThe attackers proceed by refining guesses for s-and rvalues and successively decreasing the size of the interval containing m 0 . In Clavister's cOS and ZyXEL's ZyWALL USGs (Unified Security Gateways), PKE is not officially avail-Initiator (IDI , skI , pkI ) Responder (IDR, skR, pkR) m1 := (proposals) − cI , 0, m1 −−−−−−−−−− − → m2 := (proposal) ← − cI , cR, m2 −−−−−−−−−− − cn I := Encpk R (nI ) cid I := Encpk R (IDI ) m3 := (g x , cid I , cn I ) − cI , cR, m3 −−−−−−−−−− − → cn R := Encpk I (nR) cid R := Encpk I (IDR) m4 := (g y , cid R , cn R ) ← − cI , cR, m4 −−−−−−−−−− − k := PRF h(nI ,nR) (cI , cR)Derive kd, ka, ke from kk := PRF h(nI ,nR) (cI , cR) Derive kd, ka, ke from k Compute MACI using k m5 := Enck e (MACI ) − cI , cR, m5 −−−−−−−−−− − → Compute MACR using k m6 := Enck e (MACR) ← − cI , cR, m6 −−−−−−−−−− − Compute MACR andcompare to m6Compute MACI and compare to m5 able. For IKEv1, the situation is more difficult: Even if there is a strong Bleichenbacher oracle in PKE and RPKE mode, our attack must succeed within the lifetime of the IKEv1 Phase 1 session, since a DHKE during the handshake provides an additional layer of security that is not present in TLS-RSA. For example, for Cisco this time limit is currently fixed to 60 seconds for IKEv1 and 240 seconds for IKEv2.To phrase it differently: In TLS-RSA, a Bleichenbacher oracle allows to perform an ex post attack to break the confidentiality of the TLS session later on, whereas in IKEv1 a Bleichenbacher oracle only can be used to perform an online attack to impersonate one of the two parties in real time. They thus can impersonate Responder B to Responder A.It is important to note that this attack also can be used to execute a man-in-the-middle attack against two parties. For that, the connection is interrupted by the attackers and on the following attempt to restart the IKEv1 session with a handshake, the attackers execute a Bleichenbacher decryption attack against each party. As a result, cross-ciphersuite [26] and cross-version [20] attacks have been shown, despite security proofs for single ciphersuite families.For IKE, there is a similar situation: Maintaining individual key pairs for all "ciphersuite families" and versions of IKE is practically impossible and oftentimes not supported. From these keys they need k pI to compute) (kd, kaI , kaR, keI , keR, kpI , kpR) ← PRFs(nI , nR, cI , cR) IKE AUTH Messages Encrypted-then-MACed with (keI , kaI ), (keR, kaR)MACI ← PRFk pI (IDI ) σI ← Sign skI (cI , 0, m1, nR, MACi) m3 := (IDI , σI , proposalR) − cI , cR, m3 −−−−−−−−−− − → MACR ← PRFk pR (IDR) σR ← Sign skR (cI , cR, m2, nI , MACR) m4 := (IDR, σR, proposalR) ← − cI , cR, m4 −−−−−−−−−− − (k eI , k aI , k eR , k aR ) ← PRFk d (nI , nR)MAC I = PRF k pI (ID B ), which is part of the data to be signed with the private key of Responder B. 2. The attackers encode the hash h of (c I , 0, m 1 , n R , MAC I ) with PKCS #1 v1.5 for digital signatures. Since m = c d = (H · r e ) d = H d · r ed = H d · r (mod N), It is common knowledge that the aggressive mode of IKEv1 using PSKs is susceptible to offline dictionary attacks, against passive attackers who only eavesdrop on the IP connection. S with IOS version 15.5(3)S2.Based on the default configuration, we first generated an RSA key pair on the device using the default options (i. e., we created general-keys; cf. Appendix C). With it, we can create any IKE message and fully control all fields like cookies, proposals, nonces, ciphertexts, etc.Ciphertext c n I in Figure 4 is the target of our attack. For testing PKCS #1 v1.5 compliance, after decrypting c n I , the responder should check if the first two bytes of the plaintext are indeed 0x00 0x02, if the following eight bytes are non-zero, and then search for the first zero byte. One can easily overload the device's CPU for several seconds with a standard PC bursting handshake messages, even with the default limit for concurrent handshakes. If the quick mode handshake (i. e. phase 2 of the IKE handshake) is not completed after 75 seconds, this timer cancels the handshake deleting all ephemeral values like the cookie c R , the nonce n R , and the DH secret y.Furthermore, the state machine maintains an error counter with a fixed limit of five. For these, we used a virtual Clavister cOS Core in version 12.00.06 and a ZyXEL ZyWALL USG 100 running firmware version 3.30 (AQQ.7). If all PKCS #1 v1.5 checks were successful, the ephemeral key ke I is derived and used to decrypt the identity payload c ID I in order to determine the public key to use for its response. If ID I is more than 256 bytes long, the Huawei device also crashes and reboots.This complicates a Bleichenbacher attack scenario: Even if the attackers hit a PKCS #1 v1.5 compliant message, the decrypted value (i. e. what the device treats as the nonce n I ) is unknown to them. the SA was not recently used for a request and message m 2 was a retransmission after ten seconds.When preparing a Bleichenbacher request, an SA is taken from the unused SA pool and put into the used SA pool to ensure that SAs are not mixed up. The analyzer only needs the length of a received message and the values of two bytes at specific positions in order to distinguish Bleichenbacher responses from timeout packets.For sending and receiving packets with multiple threads, we use Java NIO DatagramChannels and NIO Selectors.Bleichenbacher Producer and Consumer. The main obstacle is the SA management: Once the attackers negotiate several thousand SAs with the router, its SA handling becomes very slow.We managed to perform a successful decryption attack against our ASR 1001-X router with approximately Cisco Bleichenbacher attack statistic Figure 11: Statistics of 990 standard decryption, 439 optimized decryption, and 542 signature-forgery attacks against our Cisco Bleichenbacher oracle simulator.19,000 Bleichenbacher requests. We will show in the following section how to mount offline dictionary attacks against IKEv1 and IKEv2. It is well known that the PSK based mode of authentication is vulnerable to an offline dictionary attack when used together with the aggressive mode of IKEv1 Phase 1. Thus, they can learn the PSK and can thus impersonate any party or act as a Man in the Middle.On the network, the attackers wait for the victim to initiate a handshake with a responder. Offline dictionary attacks are possible against all three different variants, with two different adversaries: IKEv1 PSK in aggressive mode can be broken by a passive adversary, and both IKEv1 PSK in main mode and IKEv2 PSK can be broken by an active adversary who acts as a responder.The second entry point is Bleichenbacher oracles in the IKEv1 PKE and RPKE variants. However, if network devices reuse RSA key pairs for other services like SSH, TLS, etc., further attack surfaces could arise.To counter these attacks, both entry points must be closed: Only high entropy PSKs should be used, and both PKE and RPKE modes should be deactivated in all IKE devices. This paper is based in part upon work in the research projects SyncEnc and VERTRAG, which are funded by the German Federal Ministry of Education and Research (BMBF, FKZ: 16KIS0412K and 13N13097), as well as the FutureTrust project funded by the European Commission (grant 700542-Future-Trust-H2020-DS-2015-1). However, in practice IKEv2 is usually used without EAP.Instead of using IKEv2 together with some EAP-TLS variant (like EAP-TTLS with EAP-MD5), one could also switch to OpenVPN and thus reduce the overhead from tunneling TLS in IKEv2. Moreover, the advice from RFC 5996 is misleading since some EAP modes like EAP-MD5 or EAP-MSCHAPv2 also do not prevent offline dictionary attacks, they just require the attackers to shift from IKE to attacking EAP. Thus, the security of ESP is well understood today, thanks to major contributions from Pa- terson et al. in 2006Pa- terson et al. in -2007. Another contribution by Checkoway et al. shows that the random number generator used by VPN devices from Juniper Networks was manipulated leading to a passive decryption vulnerability [11]. Figure 13 shows the message flow for this mode.First, the initiator creates a set of proposals consisting of algorithms, key lengths, and additional parameters and sends it with his initiator cookie to the responder. Another contribution by Checkoway et al. shows that the random number generator used by VPN devices from Juniper Networks was manipulated leading to a passive decryption vulnerability [11]. The message with padding before encryption is m = 0x00 || 0x02 || P || 0x00 || n. To decrypt such a ciphertext, the na¨ıvena¨ıve decrypter performs the following steps: However, if the attackers learn whether the decrypter rejects messages due to the checks performed in steps 2-4, the decrypter is susceptible to Bleichenbacher's attack. When generating RSA key pairs, Cisco IOS gives the administrator a choice: The default is to create general-keys, which generates a single key pair for all authentication methods that is vulnerable to our attacks.