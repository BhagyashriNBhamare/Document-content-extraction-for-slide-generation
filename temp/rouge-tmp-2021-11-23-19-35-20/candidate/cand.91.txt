The Public Key Infrastructure (PKI) protects users from malicious man-in-the-middle attacks by having trusted Certificate Authorities (CAs) vouch for the domain names of servers on the Internet through digitally signed certificates. Finally, we propose and evaluate two countermeasures to secure the PKI: 1) CAs verifying domains from multiple vantage points to make it harder to launch a successful attack , and 2) a BGP monitoring system for CAs to detect suspicious BGP routes and delay certificate issuance to give network operators time to react to BGP attacks. Such adversaries can launch active BGP hijack and interception attacks to steal traffic away from victims or CAs, and spoof the domain control verification process to obtain bogus certificates.In this paper, we first analyze and compare BGP attacks on the domain verification process to develop a taxonomy and present a highly effective use of the "AS-path poisoning" attack originally performed in [39]. Our main contributions are as follows:Active BGP Attacks on Domain Verification Pro-cess: We performed five types of real-world BGP attacks (against a domain we owned running on an IP prefix we controlled) during the domain verification process: 1) a traditional BGP sub-prefix attack, 2) a traditional BGP equally-specific-prefix attack (like the attack theorized in [22]), 3) a prepended BGP sub-prefix attack, 4) a prepended BGP equally-specific-prefix attack, and 5) a BGP AS-path poisoning attack (see section 2.2 for details about these attacks). Thus, the slower a defense system detects a BGP attack, the more effective the manin-the-middle attack is.Because intercepting a TLS stream can cause significant damage in a couple of hours [24], detection systems that require manual investigation to confirm that an attack has occurred or systems that have a significant delay before detection is possible are not effective at preventing these attacks . Even a strictly filtered adversary can spoof packets by gaining control of a client in one of these networks that allow spoofing and use it to spoof packets on behalf of the adversary.Another variable the adversary can control is which IP address to attack. The adversary can intercept the response of the victim (or a DNS server used to resolve the victim's IP) to the CA, modify it to contain the document specified by the CA (or an incorrect DNS response), and forward it to the CA. The majority of domains use IP prefixes shorter than the maximum /24 (shown in Section 4.2), which allows an attacker to announce IP sub-prefixes without being filtered (many ASes filter announcements longer than /24 [9]). Thus, although an adversary could easily get a certificate before the attack is detected (as we will show in Section 3, several CAs will sign a certificate seconds after domain control verification and these attacks can last for several hours), the rapid detection of this announcement would reduce the damage the bogus certificate could do. Attack Methodology: An adversary can increase the stealthiness of a sub-prefix hijack attack by prepending the victim's Autonomous System Number (ASN) in the malicious announcement's AS path. Attack Viability: The viability of this attack is identical to that of the traditional sub-prefix hijack attack because routers always prefer a more specific BGP announcement over a less-specific one regardless of the AS-path field. Thus, all victims that have an IP prefix shorter than /24 are vulnerable.Attack Stealthiness: This attack is significantly more stealthy than a traditional sub-prefix hijack, particularly in the control plane. Thus, this attack can still be viable even with the reduced area of effect.Attack Stealthiness: This attack has similar control plane properties to the prepended sub-prefix hijack. Attack Methodology: While all previous attacks have involved breaking data-plane connectivity to a victim's domain (either global or partial), we here present an attack that uses AS-path poisoning to maintain a valid route to the victim's domain. Thus, the entire Internet (with the exception of the ASes on route R) routes traffic destined to the victim's domain to the adversary, and the adversary can still forward all the traffic through to the victim via a valid route without breaking data-plane connectivity.Attack Viability: This attack can be performed by any multi-homed AS against a domain on a prefix shorter than /24. It is crucial that the adversary's AS be multihomed (have more than one provider) so at least one provider can deliver the victim's traffic to the adversary while another provider forwards the traffic to the victim.Attack Stealthiness: This attack is completely stealthy in the data plane in terms of connectivity. In this experiement, we will consider a victim server in Ohio that is connected to a mux in the Los Nettos Regional Network in Los Angeles over a VPN tunnel, and an adversarial server sited in London that is connected to a mux at the Amsterdam Internet Exchange over another VPN tunnel (shown in Figure 3). We left the victim's network configuration untouched, and then used the adversarial server in London to make malicious BGP announcements for a more specific /24 prefix containing the victim's domain through the mux at the Amsterdam Internet Exchange. The traffic from the CA's server was not forwarded to the victim and was instead answered by the adversary's server, allowing us to obtain a trusted TLS certificate with no impact on the victim's connectivity. Finally, we removed the routing rule for traffic forwarding to the victim and answered HTTPS requests using the adversary's web server Let We observed that with no interruption in connectivity, the AJAX calls went from being securely sent to the victim's server to being read by the adversary. While performing these experiments, we made sure to not harm or interfere with the operations of real users or real web sites by following three important guidelines: 1) We only requested certificates for domains we registered strictly for the purpose of this experiment. By following these guidelines, our experiments used real Internet infrastructure but did not affect any real users.In this section, we demonstrate real-world BGP attacks that successfully obtain bogus certificates from the five largest CAs. 4 We then map the IP address to the IP prefix and origin AS using Level3's routing table from the time the certificate was issued (see Section 5.2.1 for an explanation of our use of historical BGP data). 4 Wildcard certificates were ignored because some CAs require DNS verification for wildcard certificates [5] and thus do not contact the server running at the domain's A record.5 To ensure our sample was representative, we obtained another sample of certificates directly from Let's Encrypt's logs (the CA most affected by the rate limiting) and compared the distribution of prefix lengths and originating ASes. Remark: While works on BGP attacks in other applications have recommended that ASes announce /24s to prevent sub-prefix attacks [44,45] CAs are also a target for attacks. We can see that 50% of the domains have resilience values lower than 57%, meaning that if an adversary selects a random CA to issue a certificate for these victim domains, there would be at least 43% probability that the adversary would be able to launch an equally-specific-prefix hijack and obtain the bogus certificate from that CA. In this section, we present two countermeasures that can be deployed by CAs to mitigate these attacks: multiple vantage point verification and BGP monitoring system.To test the effectiveness of these countermeasures, we developed our own implementation of both countermeasures in the Let's Encrypt code base and relaunched the attacks in an attempt to fool our modified CA. We provide an adapted proposal on the Email verification method in Appendix B. Given limited resources available for deploying vantage points, we need to strategically select the vantage points to maximize the security. To defend against attacks that have a global effect (e.g., traditional sub-prefix attacks), we propose a BGP monitoring system in Section 5.2. The algorithm requires a set of customer domains (in our case, domains from our dataset of certificates), and a list of candidate vantage points (e.g., data centers where the CA can potentially deploy vantage points). Then, for each vantage point in the set, the algorithm substitutes that vantage point with the potential vantage point (chosen from the list of candidate vantage points) that causes the set of vantage points to have the greatest resilience increase. To increase the likelihood of finding a global maximum, our algorithm repeats the above steps with random initial vantage points to find as many local maximum as possible.We found that there is a roughly 18% chance that a local maximum found by the script will be the global maximum we eventually found (when considering a set of five vantage points chosen from 1,000 candidate vantage points). To compute additional vantage points given a set of already deployed vantage points, we simply consider certain vantage points in the candidate set to be fixed (e.g., CA's existing vantage points such as its own data center) and we do not consider alternatives to these vantage points. The baseline is 1 Vantage Point, where the CA only performs domain control verification from its own existing AS/data center without any additional vantage points (in Let's Encrypt's case, the ViaWest data center AS 13649 is the fixed vantage point). Furthermore, strategic attackers can target vantage points that may be able to observe the attack, and launch DoS attacks against the target to make it time out.Given the tradeoff between a strong security guarantee and false positives in the event of a network failure, we propose that (1) there be a limit on the total number of vantage points allowed to time out, and (2) at least one vantage point in each AS where vantage points are deployed be required to send a response. To compute the age of each hop, we constructed an SQL database containing, for each prefix, the last seen AS path and a list of timestamps indicating when each AS was added to that path. To compute the hop ages of a prefix, the algorithm looks up a prefix in the database and computes for each hop the current timestamp subtracted by the stored timestamp for that hop. If a BGP update had a timestamp greater than the timestamp of the oldest unprocessed certificate, we would look up the resolved IP address from the certificate in our database and find the longest prefix match. However, no previous work has applied these BGP attacks to target encrypted communications.BGP defenses have been studied in both general and application-specific forms. We adapt this idea to the PKI by developing a more complex measurement of age and recommending CAs not use new routes during domain control verification.Sun et al. developed an application-specific BGP monitoring system to protect the Tor network that includes a similar analytic using route age [43]. Proposals like DANE [25] and RAINS [46] offer alternatives to the current PKI by including server public key information directly in the name server infrastructure, which is cryptographically verified. However, these attacks are effective at capturing traffic in a localized portion of the Internet topology, and if an adversary is very topologically close to a CA (or happens to have favorable business relations) the attack is viable.The viability of this attack increases significantly if we assume an adversary has complete administrative control of an AS (as opposed to only the technical ability to make announcements). While only 24 ASes are currently seen peering with ViaWest (peering links are also the hardest BGP relations to detect so 24 may be an underestimate), ViaWest has a Point Of Presence (POP) at the Seattle Internet Exchange (SIX) and is colocated with 283 other ASes. We believe this creation of peering links to change the Internet topology in an adversary's favor merits further study that uses both network analysis and studies of business practices to understand and counter this vulnerability.We were not able to launch an intentional route leak because of guidelines imposed by the peering framework on the number ASes that can be prepended to an announcement. Thus, this announcement to Microsoft has such limited propagation that a vantage point within Microsoft's network is needed for the attack to be detected.While we used a non-trusted CA for this experiment, it would still be reasonable for an adversary to launch this attack against a trusted CA given: 1) a broader selection of CAs than we explored and 2) the ability of an adversary to construct peering connections with potential target ASes. Thus, methods for limiting propagation are more likely to be applicable in such situations.Similar to the intentional route leak, an adversary could reasonably perform a limited propagation attack given the ability to establish peering links with target ASes. Thus, methods for limiting propagation are more likely to be applicable in such situations.Similar to the intentional route leak, an adversary could reasonably perform a limited propagation attack given the ability to establish peering links with target ASes. Upon receiving the TCP ACKs via the first vantage point, the CA repeats the above step using the next vantage point, etc., until all the pieces of secret have been sent.In this way, the domain owner has the impression of only receiving one email from the CA, but in fact an arbitrarily large number of vantage points were used to send the email.