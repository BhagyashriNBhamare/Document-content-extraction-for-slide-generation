The chain can either start statically from Basic Input and Output System (BIOS)/Unified Extensible Firmware Interface (UEFI) code modules when the system is booted or dynamically from a specialized instruction set during runtime.Regardless of how the chain starts, the measurements are "extended" to platform configuration registers (PCRs) inside the TPM. The US Department of Defense also considers the TPM to be a key element for dealing with security challenges in device identification and authentication, encryption, and similar tasks.The TPM chip is designed to cooperate with other parts of the system, e.g., the firmware and the operating system. How the power management works is quite complicated because each peripheral device can have its own power state independently from the system-wide power state.A recent Linux kernel supports the Advanced Config-uration and Power Interface (ACPI), which is an open industry specification that enables operating systemcentric intelligent and dynamic management coordination with power management-aware devices such as CPUs, networks, storage, and graphics processing units. Then, we introduce their vulnerabilities 1 The commit hash is 521c58e51eb5be105a29983742850e72c44ed80e Figure 1: Examples of static and dynamic RTM (SRTM and DRTM, respectively) processes and exploits against them. A trusted computing base (TCB) [37] is a collection of software and hardware on a host platform that enforces a security policy. As the DRTM process starts, the special code module (the DCE), is executed as a dynamic CRTM (D-CRTM), validates whether the platform is trustworthy, and transfers the control to the initial part of the operating system, called the dynamically launched measured environment (DLME). It was released in 1996 after being co-developed by Intel, Hewlett-Packard (HP), and other companies.The ACPI specification defines power states and the hardware register sets that represent the power states. The sleeping state is divided into four sleeping states:â€¢ S1: Power on Suspend. When the platform exits from the sleeping states, the BIOS/UEFI firmware requests the TPM to restore the state and then it starts the operating system.The TCG specification describes the role of power management over the operating system and the BIOS/UEFI firmware. When their TPM support option is enabled in the BIOS/UEFI menu, the BIOS/UEFI firmware starts the "trusted boot" [25] process, which means that it measures the firmware itself and the bootloader and stores the measurements in the TPM chip.Second, we assume that our system employs TCG's DRTM architecture [43]. We consider an attacker who has already acquired the Ring-0 privilege with which the attack can have the administrative access to the software stack of a machine including the firmware, bootloader, kernel, and applications. Vulnerabilities of the System Management Mode (SMM) [13] may allow the attacker to remotely and pragmatically alter firmware binary or change the BIOS/UEFI options [6], but we do not consider such vul- Bootstrapping a system utilizing TPM and SRTM/-DRTM technologies involves many entities, and Figure 3 shows their relationships. In version 2.0, TPM2 Shutdown() and TPM2 Startup() correspond to TPM SaveState() and TPM Startup(), respectively.Version 2.0 [39] tells TPM to return TPM RC VALUE when TPM2 Startup(STATE) even if it does not have a saved state to restore. First, before resetting and replaying the TPM, we need [5] Trusted-GRUB1 [40] Trusted-GRUB2 [41] GRUB-IMA [24] Table 2: List of bootloaders with BIOS/UEFI support and TPM version When the field is not there, there is another option for obtaining the logs. Our exploit in the kernel resets TPM by making the system enters the S3 sleeping state, and finally extends the measurements, one after another, in the normal order as presented in the logs.We take the GRUB implementation from the open source Container Linux [4] to implement our exploit. The event size is the size of the raw data.The parsed digest values, except for the nor- /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ /* Skip tpm_savestate and tpm2_shutdown */ /* in drivers / char / tpm / tpm -interface . c */ /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ int tpm_pm_suspend ( struct device * dev ) { ... omitted ... + printk ( KERN_INFO " tpm : tpm_savestate () " + " and tpm2_shutdown () are skipped \ n " ) ; The log entry for the bootloader hash can be identified by event type EV EFI BOOT SERVICES APPLICATION (0x80000003) and the one for the kernel (including the kernel file and the initial RAM disk file) hash is identified by event type EV IPL (0x0D). It is used to record power-on self test (POST) code, embedded SMM code, ACPI flash data, boot integrity services (BIS) code, or manufacturer-controlled embedded option ROMs. In the latest version of the tboot source code (1.9.6, at the time of this writing), the start and the end of an MLE ( mle start and mle end) are defined in the link script (as shown in Figure 12) including from the start of the code section (. By hooking those pointers, we can hook the control flow and eventually forge the dynamic PCRs, bypassing the protections provided by the SINIT ACM.Similarly to the attack explained in Section 4.2, the normal measurements extended by tboot are recorded in the event logs that reside in the kernel's memory area. The txt-stat tool provided by tboot dumps the kernel memory via /dev/mem and prints out the summary status of TXT and event logs, as shown in Figure A.1 in Appendix.After obtaining the normal digests, we can forge extended values after tboot takes control by hooking the ex- The last step of the attack, likewise, is to reset the TPM state and replay the normal digests. Although the reported vulnerabilities do not depend on a specific hash algorithm, we used SHA-1 in all evaluations only because the algorithm is supported in both versions of the TPM.The DRTM exploit requires devices to support Intel TXT and tboot. It seems that all of the manufacturers considered in this study failed to deal with the exception mentioned in Section 4.2 because of the incomplete specification.On the contrary, all TPM 1.2 devices, except for the Dell Optiplex 7040 mini PC (PC #9), appropriately handle the exception by entering failure mode, in which re- 2 The EV S CRTM VERSION event is not extended to PCR #0 and the EV EFI PLATFORM FIRMWARE BLOB event is not extended to PCR #2, which are wrong probably because the software does not comply with the TCG Specification 3 Entering failure mode 4 The static PCR values are kept 5 Only the first eight hexadigits are shown here for the brevity 6 ... omitted ... Figure 14: Event log summary relate to PCR #0 and PCR #2 in the GIGABYTE Q170-MK setting and replaying are not possible. It seems the machine neither cuts the power to the TPM chip off nor restores the TPM state.It is interesting that the Dell Optiplex 7040 machine with TPM 2.0 (PC #3) is exploitable while the same machine with TPM 1.2 is not, even when the same BIOS/UEFI firmware is used throughout the experiments. Some BIOS/UEFI firmware provides a menu option to disuse the S3 sleeping state.A better way to address this vulnerability starts with revising the specification. Note that updating the specification has to be followed by updating the TPM firmware.We have contacted and reported our findings to Intel [16], Dell [7], GIGABYTE [8], and ASUS [1], which are the vendors of the devices we have tested and confirmed to be vulnerable. Concealed information such as keys can then be acquired using simple wiretapping attack.Kauer [17] demonstrated an attack that resets a version 1.1 TPM chip by physically connecting a reset pin to ground. The author implemented a bootloader that uses AMD's DRTM supporting instruction and proposed this bootloader as an alternative to the existing weak SRTM implementations.Sparks [30] pointed out several vulnerabilities and limitations of the TPM. Sparks also summarized the countermeasures against those threats: loaded programs can be protected by hypervisors, the Low Pin Count bus can be protected from attacks by employing tamper-resistant circuits, and the timing attack on the RSA calculation can be prevented by employing the techniques that better hide the statistics of the calculation.Butterworth et al. [2] exploited a vulnerable BIOS update process to re-flash a BIOS chip with an arbitrary firmware that contains rootkits. VT-d technology [15] is a hardware support for isolating device access and is considered to be a countermeasure against direct memory access attacks, which can bypass the memory protection of a CPU and access system memory.Sharkey introduced a hypervisor rootkit that emulates the SENTER instruction and TPM using a thin hypervisor [28]. Consequently, logical conflicts and incompleteness in the specifications are obscured and the specification may provide poor guidance to vendors as to its implementation.In this paper, we addressed the vulnerabilities that allow an adversary to enable a TPM reset and forge PCRs.One vulnerability comes from a flawed specification, and many commodity devices seem to be affected. 2 d 67 dd d7 5 e f9 33 92 66 a5 6 f 27 18 95 55 ae 77 a2 b0 de 77 42 22 e5 de 24 8 d be b8 e3 3 d d7 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * TXT measured launch : TRUE secrets flag set : TRUE * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ... omitted ... We would like to express our sincere gratitude to Jonathan M. McCune.