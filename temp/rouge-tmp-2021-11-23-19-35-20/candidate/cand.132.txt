Specifically, on-path devices could spoof the IP addresses of user-specified DNS servers and intercept the DNS queries surreptitiously , introducing privacy and security issues. Previous studies have shown that rogue DNS resolvers [38,42], DNS transparent proxies [41,55] and unauthorized DNS root servers [27] can damage integrity and availability of Internet communication.In this work, we study an emerging issue around DNS, the hidden interception of the DNS resolution path (DNSIntercept) by on-path devices, which is not yet thoroughly studied and well understood by previous works. The on-path devices spoof the IP addresses of the users' specified recursive nameservers in the DNS responses (e.g., replacing the resolver IP address with 8.8.8.8 of Google Public DNS), so users will not be able to notice that the DNS resolution path has been manipulated.The purposes of DNS interception include displaying advertisements (e.g., through manipulation of NXDOMAIN responses [56]), collecting statistics, and blocking malware connections, to name a few. However, such practices can raise multiple concerns: (1) The interception is not authorized by users and is difficult to detect on the users' side, which leads to ethical concerns; (2) Users have higher risks to put the resolution trust to alternative recursive DNS servers, which often lack proper maintenance (e.g., equipped with outdated DNS software), compared to well-known public DNS servers; (3) Certain security-related functionalities are affected or even broken, e.g., some alternative DNS resolvers do not provide DNSSEC.In this paper, we conduct a large-scale analysis of DNSIntercept. For Global analysis, we use a residential proxy network based on TCP SOCKS (not HTTP) which provides 36,173 unique residential IP addresses across 173 countries. In addition, we build a public DNS server by ourselves, named EDU DNS, and use it for comparison. • DNS servers used by interceptors may use outdated software, e.g., all 97 DNS servers that we identify install old BIND software which should be deprecated after 2009, and are vulnerable to attacks like DoS [6]. • Understanding: We systematically measure DNSIntercept, which spoofs the IP addresses of users' specified DNS servers to intercept DNS traffic surreptitiously. As a example, www.example.com is an FQDN, and its corresponding TLD and SLD are com and example.com.When a client requests resolution of a domain, the resolution is typically executed by a recursive DNS resolver at first, which can be either assigned by ISP or specified by Internet users. Therefore, from a client's perspective, DNS responses appear to come from the original DNS resolvers according to their source addresses, making the actual interception behaviors difficult to be discerned.By default, in order to handle DNS requests, Internet users are assigned with local DNS resolvers by ISPs. Other types of network traffic manipulation mechanisms, such as BGP prefix hijacking [51] and unauthorized manipulation of DNS root servers [27], which have been systematically studied before, are not considered in our study. In this study, we classify the mechanisms of DNS resolution into four categories, based on how the resolution path is constructed during the stage of the request. A DNS query sent by client only reaches the specified resolver, without being modified by any on-path device. The original DNS query sent to user-specified resolver is dropped. However, the request is replicated by on-path devices, and handled by an alternative resolver at the same time.Consequently, the authoritative nameserver receives two identical requests from the user-specified resolver (i.e., in-band request) and the alternative resolver (i.e., out-of-band request [46]). To block the access to certain websites (e.g., political and pornographic websites), censors and firewalls can manipulate DNS queries on their path and return fake responses. Similar to the AV setting, users are required to point their DNS resolvers to the proxy's resolver.Since the mapping between the IP addresses of resolvers and their owners is unknown to us, alternative resolvers owned by parties other than ISPs, like AV and enterprise resolvers, can be included by our study. We (1) instruct a client to send a DNS request about one of our controlled domains to a public resolver A; (2) record its corresponding request at our authoritative nameservers, which originates from recursive resolver B; and (3) compare A with B. The measurement infrastructure used by previous works, including advertising networks [33], HTTP proxy networks [19,36,37,52] and Internet scanners [42,48], do not meet the requirements. Investigating all public resolvers would take a tremendous amount of time and resources, so we narrow down to three representative and widely-used public DNS services according to Alexa traffic ranking [57], including Google Public DNS [12], OpenDNS [22] and Dynamic DNS [9]. The prefix includes a distinct UUID generated for each client (representing SrcIP) and a label of public DNS service which is supposed to handle the resolution (representing DstIP). By considering RR Type at the same time, we are able to identify DNS packets in the same resolution. In particular, our authoritative nameservers hash the timestamp, source address and requested domain name together, and derive a unique response from the hash string fitting to the record type. Our next task is to identify whether a source IP contacting our authoritative nameservers belongs to a public DNS service, i.e., is an egress IP. As such, we need to infer the ownership.Previous studies leveraged IP WHOIS data and information from public forums [37,49] to identify egress IPs, which are not sufficiently accurate when examined on our data. To this end, we first leverage a residential proxy network based on TCP SOCKS which allows us to directly send DNS packets from globally-distributed clients, to depict a global landscape of DNSIntercept (this phase is named Global analysis). When the change is delivered to the client, a consent is displayed and the script is not executed until the client acknowledges the change. Proxy networks have been used by previous studies as measurement vantage points [37,52]. The software has been granted the permission to send arbitrary network requests when installed, so we are able to collect finegrained DNS data.The major concerns of this experiment are around ethics and privacy, and we carefully address these concerns as briefly described below (more details are covered in Section 3.5). According to our inception model described earlier, to generate as diverse DNS packets as possible, we should launch DNS requests from a client under all four different SLDs, of all five RR types, over both TCP and UDP, and to all four public DNS services. Through launching DNS requests from clients, monitoring DNS queries on authoritative nameservers and capturing DNS responses, we are able to "connect the dots" for each DNS resolution. More importantly, owners of exit nodes (i.e., our vantage points) have an agreement with ProxyRack that permits ProxyRack traffic to exit from their hosts. Therefore, launching DNS requests from ProxyRack adheres to the granted permission from owners of exit nodes.In China-wide analysis, we implement our measurement script in a network debugger module of security software with millions of users. Meanwhile, we only launch DNS lookups of domain names exclusively registered and used for this study on each client, without connecting to any host except for DNS resolvers.Through said approaches, we believe we have minimized the threat to user's privacy and security in the experiments, as all operations are under granted permission from users, and we do not collect any data except for DNS resolutions under the limited scope. Here we regard a response of an FQDN accepted by the client to be correct, only when its RR value is identical to the RR of the same FQDN which is responded by our authoritative nameserver; otherwise, the response is incorrect, which is tampered on its way back. Thirdly, specifically for Request replication scenario, interceptors may hope to use out-of-band DNS packets [46] (i.e., responses of replicated lookups) to replace in-band ones (i.e., responses of original lookups). Traffic ranking of problematic ASes. Among our 13,466 DNS requests sent from this AS to Google DNS, 72 (0.53%) are redirected, with alternative resolvers outside Google actually contacting our authoritative nameservers. • As for interception scenarios, Request redirection and Request replication are both found in top 20 ASes with most intercepted requests to Google DNS. Moreover, we also discuss issues regarding DNS lookup performance and response manipulation introduced byDNSIntercept. On the whole, by comparing the interception ratio of packets of different field values, we first investigate what kinds of packets are more likely to be intercepted. For instance, 27.9% DNS requests sent to Google Public DNS over UDP are redirected or replicated, the ratio being only 7.3% when it is through TCP.In fact, most of DNS requests in the real world are over UDP, and intercepting UDP traffic is technically easier. Meanwhile, we notice in Table 5 that for Request replication, clients receive no in-band responses of CNAME, NS or MX-type requests. How-(a) TCP (b) UDP Figure 9: ECDF of RTT of DNS requests ever, over TCP, due to the cost of establishing connections, the improvement is less obvious. While recalling that redirected requests are mostly handled by local resolvers (previously illustrated in Table 4, that alternative resolvers locate in the same AS as clients), it also shows that little extra time overhead is introduced by the onpath devices to redirect requests. By scattering each request onto Figure 11(b), we find that there are preferred values for modified TTL, such as 1800, 3600 and 7200. In the end, we find that three wellknown router manufacturers (Cisco [4], Panabit [23], and Shenxingzhe [8]), three companies (ZDNS [26], Haomiao [7], Ericsson [21]) and one software platform (DNS traffic redirecting system of Xinfeng [24]) support DNSIntercept. However, in practice, for top 5 ASes shown in Table 7, the ratio of Request redirection, which brings uncertain rather than probable improvement of performance, is significantly higher. • We speculate the motivations of DNSIntercept include reducing financial settlement and improving performance of DNS lookups, instead of improving DNS security. While popular public DNS servers are often deployed with full DNSSEC support and up-to-date DNS software, a number of nameservers and resolvers in the wild are still using outdated or even deprecated DNS software, which may be vulnerable to known attacks [42,54], and DNSSEC deployment on resolvers is still poor. Firstly, network operators could monetize from through redirecting DNS-lookup error traffic to advertisements [55,56]. Similarly, Chung et al. leveraged the residential proxy network to study violations of end-to-end transparency on local DNS servers, their results showing 4.8% NXDOMAIN responses are rewritten with ad server addresses [36]. Furthermore, previous studies presented that 18% DNS sessions of cellular network go through transparent DNS proxies [53] and time-to-live values (TTL) are treated differently [49]. Moreover, researches have discovered other ways to manipulate DNS traffic, including abusing the DNS namespace (i.e., "Name Collision" [34,35]), exploiting configuration errors and hardware issues (typosquatting [47] and bitsquatting [54]), and "Ghost domains" [40]. Our study serves as a complement to these existing works in understanding the security issues in DNS ecosystem.Compared to previous researches, our work gives a systematic and large-scale research on DNSIntercept, a class of DNS behavior that has not yet been well-studied, and highlights issues around security, privacy, and performance.