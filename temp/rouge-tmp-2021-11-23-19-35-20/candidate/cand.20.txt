The Domain Name System's Security Extensions (DNSSEC) allow clients and resolvers to verify that DNS responses have not been forged or modified in-flight. However, DNSSEC can operate only if each of the principals in its PKI properly performs its management tasks: authoritative name servers must generate and publish their keys and signatures correctly, child zones that support DNSSEC must be correctly signed with their parent's keys, and resolvers must actually validate the chain of signatures. For example, we found that 31% of domains that support DNSSEC fail to publish all relevant records required for validation; 39% of the domains use insufficiently strong key-signing keys; and although 82% of resolvers in our study request DNSSEC records, only 12% of them actually attempt to validate them. Widely-used DNS resolvers now attempt DNSSEC validation by default, e.g., as of January 2012 Comcast (one of the largest ISPs in the US) requests and validates DNSSEC records for all queries [32], and Google (which operates the largest public DNS resolver) did the same in March 2013 [22]. To study client-side behavior, we leverage the Luminati HTTP/S proxy service [35], which allows us to perform repeated, controlled tests from 403,355 end hosts-thereby studying 59,513 distinct DNS resolvers-around the world.Our analysis reveals troubling, persistent mismanagement in the DNSSEC PKI:â€¢ First, we find that nearly one-third of DNSSECenabled domains produce records that cannot be validated due to missing or incorrect records. In summary, our results paint a distressing picture of widespread mismanagement of keys and DNSSEC records that violate best practices in some cases, and completely defeat the security guarantees of DNSSEC in others. Should the resolver also need DNSKEYs to validate the record, it may need to request them separately.DNSSEC keys Unlike other common PKIs (e.g., the SSL/TLS PKI [34]), each zone in DNSSEC typically has two public/private key pairs: one called a Key Signing Key (KSK) and another called a Zone Signing Key (ZSK). In contrast, the ZSK is used to produce the RRSIGs for all other record types.There is no key revocation (apart from root authorities) in the DNSSEC PKI 4 ; rather, to mitigate potential effects of key compromise, ZSKs are intended to be rolled over (i.e., replaced) daily or weekly, and the KSKs monthly or yearly (the intention is that the KSK can be stored separately from, and in a safer location than, the ZSK). In this section, we discuss related studies of the DNSSEC ecosystem, covering both server-(DNSSEC domain) and client-side (DNS resolver) studies.DNSSEC domain deployment As the DNSSEC deployment has grown, researchers and industrial practitioners have examined the DNSSEC ecosystem. For example, Deccio et al. [12,13] studied the misconfiguration of DNSSEC domains by surveying approximately 2,000 domains for five months, finding that 20% of zones where RRSIGs had expired at least once would experience another expi-ration three or more times. As we show later in this paper, many resolvers do not bother to validate responses.Active techniques Other approaches issue DNS queries from clients deployed in large numbers of networks, e.g., using dedicated hardware (e.g., RIPE Atlas devices [45]) or software running on web clients (e.g., Java applets [27]). Similarly, APNIC Labs recently reported that the DNSSEC validation rate is increasing, particularly in Africa (16.58%) and Asia (10.17%), due to users' reliance on Google's public DNS service [7]. We begin our analysis of the DNSSEC PKI by focusing on the deployment and management of DNSSEC records by domains, and how this has changed over time.We perform a longitudinal analysis of nearly 150M domains to answer questions that include: 1) how widely is DNSSEC deployed; 2) when deployed, how often are DNSSEC records correctly published and managed; and 3) how are DNSSEC cryptographic keys managed and maintained, and what is their impact on security? While this does not cover all domains, the approximately 150M domains that we study cover 64% of the Alexa Top-1M and 75% of the Alexa Top-1K websites. Taken together, our dataset represents the largest and most comprehensive known set of DNSSEC observations of authoritative DNS servers.Daily scans Our dataset includes measurements from OpenINTEL [43,52], a project that conducts daily crawls of DNS records for a large number of domains listed in TLD zone files. For each of these, OpenINTEL also collects responses from the authoritative name server for SOA, DNSKEY records, and the corresponding RRSIG records. The daily snapshots span 21 months (between March 1st, 2015 and December 31st, 2016); we refer to this as the Daily dataset.Hourly scans The Daily dataset is sufficient for studying DNSSEC behavior at coarse granularity, but cannot capture dynamics at timescales shorter than one day. se ccTLDs incentivize secondlevel domains to deploy DNSSEC by offering lower registration costs; these second-level domains are tested every day by the registry to ensure they have correct DNSKEYs, RRSIGs, and DS records [37]. Both TLDs show significantly higher levels of DNSSEC deployment than the TLDs we study (47% [39] and 14% [2], respectively). Recall that properly deploying DNSSEC for a domain means that it must have a DS record in the parent zone, DNSKEY records, and RRSIG records for every published record type. Recall from Section 2 that the Delegation Signer (DS) record, which contains a hash of the domain's KSK, is essential to establish a chain of trust from a parent to a child zone. 7 Domains 7 CDNSKEY and CDS can partially reduce the burden of doing manual secure delegation [31] by allowing a domain owner to directly provide the DS record to the registry; unfortunately, we know of no TLDs that fail to upload a correct DS record are not signed by the parent and therefore cannot be validated, even if they provide correct RRSIGs for all of their records.We begin by examining the percentage of signed domains that fail to upload a DS record using the Daily dataset ( Figure 5). This observation is in line with previous studies [49,51]; however, prior work has not explored why such a large fraction of domains are missing DS records.To shed light on why, we focus on domains' authoritative name servers. Specifically, we identify the name servers that are authoritative for the largest number of signed domains from our latest snapshot (December 31st, 2016), and calculate the fraction of their domains that are missing a DS record (a name server can be authoritative for multiple domains if they are managed by the same organization). However, the spike in all three TLDs in December 2016 was caused by one hosting provider, Domain Monster, bulk-signing over 37,000 new domains without placing the proper DS records. Domain Monster finally started publishing 8 Interestingly, three of these hosting providers (loopia.se, citynetwork.se, and domainmonster.com) do not even upload a DS record for their own (signed) domains. This indicates the need for better automation and auditing of processes for refreshing RRSIG records in DNSSEC.As one example of this problem, consider the rise in expired signatures in May 2016 for . For example, in September 2015 a total of 1,493 domains with the authoritative name server transip.net published incorrect RRSIGs, a problem that was corrected the following day. We thus conducted a study to determine if similar practices occur with DNSSEC keys.To do so, we extract each domain's DNSKEY record from our latest snapshot (December 31, 2016 tail, we investigate whether key sharing is mostly explained by a policy from a small set of hosting providers for the affected domains. However, key sharing across domains belonging to different companies for efficiency can substantially increase security risks, e.g., when a single shared key is compromised or cracked this affects all domains that share that key.Weak keys Next, we examine how often weak keys are used in DNSSEC. This process, called key rollover, is a recommended best practice in the DNSSEC RFCs [29,30], and the use of two-key pairs (KSKs and ZSKs) is designed to facilitate frequent rollover.KSK rollover Rolling over a KSK involves publishing a new DNSKEY and updating the DS in the parent zone.Unlike many other PKIs, DNSSEC must address issues raised by DNS record caching when considering key rollovers. However, conducting an Abrupt rollover can still lead to validation failures, so the DNSSEC RFC defines two schemes for domains to safely roll over their ZSK: Pre-Publish Under the Pre-Publish scheme, a domain publishes a new ZSK DNSKEY, but still uses the old key to sign the RRSIGs (e.g., for A records). Figure 12 shows the cumulative distribution of estimated DNSKEY packet size per domain when using 1024-bit and 2048-bit keys, and when using only KSK signatures or using both KSK and the unnecessary ZSK signatures in the DNSKEY record.The figure shows that records today rarely incur IPv4 fragmentation; only 403 (0.01%) of the domains that sign their DNSKEY with just the KSK, and 5,568 (0.8%) of the domains that use both the KSK and ZSK cause fragmentation. The Hola software is available on multiple platforms (e.g., as a stand-alone application on Windows, as cross-platform web browser extensions, and on Android) and has been installed more than 91 million times. For these experiments, we built an authoritative DNS server and web server for a testbed domain under our control. These misconfigurations include missing, incorrect, and expired RRSIGs, missing DNSKEYs, incorrect DS records, etc.For each exit node we test, we generate a unique identifier for that node's DNS requests (e.g., http://id 1 . Experimental configuration At first glance, measuring whether a resolver supports DNSSEC seems trivial. We record the identifier, the zID in the super proxy's response, the IP address of the exit node's resolver (from the incoming DNS request), and the IP address of the exit node (from the incoming web request receive a response from the super proxy with the same zID, the exit node's resolver did not validate the DNSSEC record. If the measurement client receives an error (or a response from the super proxy with a different zID), it means that the exit node's resolver may successfully validate DNSSEC responses (but the error could have been for other reasons). To do so, we need to filter the data to (a) focus only on exit nodes that are configured with a single resolver (exit nodes that use multiple resolvers make it difficult to identify how the different resolvers behave) and (b) only consider resolvers that we were able to measure 10 times or more.After filtering, we arrive at 4,427 resolvers whose DNSSEC validation policies we can test.