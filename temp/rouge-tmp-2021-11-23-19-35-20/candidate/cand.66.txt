Demonstrating the attack's low costs and ease of con-cealment, we modify a novelty USB lamp to implement an off-path attack which captures and exfiltrates USB traffic when connected to a vulnerable internal or a external USB hub. Rather than using common techniques, such as encryption and authentication, these buses seem to rely on a unicast network model, where messages are physically routed along the path from the sender to the receiver instead of being broadcasted to all of the components connected to the bus. Compared with legacy interfaces such as serial port (RS-232) [17], parallel port (IEEE 1284) [19] or keyboard jack (DIN 41524/IEC 60130-9) [29], USB has wide range of advantages: it is hot pluggable, extensible (via USB hubs) and capable of supporting many types of equipment. A final feature of the USB interface is the ability to provide both data communication and power to peripheral devices.In this paper we demonstrate that in many cases, datadependent voltage fluctuations of the USB port's data lines can be monitored from adjacent ports on the USB hub. In our experiments, 94% of the internal hubs in computers and in docking stations and 90% of the external USB hubs we evaluated displayed some form of exploitable leakage.In the context of communication channels, this phenomena is often referred to as channel-to-channel crosstalk [38]. We believe that in the forseeable future, slow speed-devices will continue to use the USB 1.x interface.While our proof-of-concept probe (Section 6) was designed to attack USB 1.x devices (connected to any USB hub, including 3.0 hubs), we do show that attacks on devices using the faster USB 2.0 standard are feasible (Section 3.3). The attack of the USB bus was also explored by Bratus et al. [12] both at the hardware level and at the device driver level.To protect the host from malicious devices, Tian et al. [46,45] and Angel et al. [7] suggest filtering the USB traffic and implementing a permission mechanisms for USB ports. Angel et al. [7] also suggests applying endto-end encryption between devices and the host to protect the confidentiality and the integrity of USB data in transit.A common method for protecting hosts from malicious devices and vice versa is to cut the data lines between the two, connecting only the USB power lines. USB Killer [18] is a device designed to collect energy from the USB power line and inject a high voltage pulse back into the computer, to destroy sensitive electronic components.Vuagnoux and Pasini [48] as well as Wang and Yu [49] show that the electromagnetic (EM) emanations from PS/2 keyboards can be used to spy on key presses. Hubs also function as protocol translators: for example in case a USB 1.0 ticket printer is plugged in a USB 3.0 hub, the hub translates the latest USB 3.0 downstream signal back to the legacy USB 1.0 language and forwards to the printer. However, because upstream traffic is only transmitted along the path to the host, much of the "interesting" data, such as keyboard inputs and disk reads, seems to remain inaccessible to a corrupted peripheral device outside that path. If no key presses are available for delivery, the keyboard responds to the initial Token packet with a Handshake packet that terminates the transfer.To protect data from corruption, packets include several checksum mechanisms. Token packets transmitted from the host to the device use a 5 bits CRC (Cyclic Redundancy Check) to verify the Address (ADDR) and Endpoint (ENDP) fields and Data packets use a 16 bits CRC in order to verify the payload. Hence, we can measure the crosstalk leakage present on the data lines of an adjacent port and additionally, or alternatively, we can measure it on power lines of the adjacent port.In a typical scenario both data line and power line leakage should be available on the same USB port, thus allowing the attacker to choose the channel containing the best signal. These include USB hubs with dedicated switches, which power devices down by cutting the power supply to them and power-only cables, a.k.a. USB condoms [3], which disconnect the data lines in order to prevent interaction between the device and the USB host. As can be seen in Figure 6, while there is a clear correlation between data line crosstalk leakage (purple, middle) and the real USB traffic (yellow, top), the hub's electromagnetic radiation (green, bottom) does not contain any observable information. Indeed, power-only USB cables and USB condoms guarantee to isolate corrupted devices from the USB bus while still allowing the use of the USB port as a source of power, e.g. for plugging a mobile phone into an untrusted charging station. We have also examined the crosstalk leakage present on the USB power lines measured through a PortaPow USB condom [4] which promises to "block data transfer to / from a computer, preventing data security breaches and viruses / hacking when charging from a public USB socket". We then connected a USB drive to one of the hub's downstream ports and used an Agilent N2795A active probe in order to monitor the communication be- Figure 10: USB 2.0 data line crosstalk leakage from a hub of the same make as the one used in Figure 6. One bit is transmitted in each clock cycles, with zeroes represented at the physical layer as transitions between the low and the high voltage levels whereas ones are represented as a lack of transition, i.e. keeping the voltage constant across the clock cycle. Figure 11 presents Note that the two halves of the PID field (1001 0110) complement each other, signifying that the PID check is correct and making it an incoming (IN) packet from the PC to an attached peripheral with address ADDR at endpoint ENDP. As can be seen in Figure 12(top, black), the data line crosstalk leakage trace contains high frequency noise, making detecting the bus transitions difficult. Simplifying this operation, we approximated the derivative by subtracting from each sample at some location t in V the sample present at location t âˆ’ 10 in V . However this approach is unreliable as it might be distracted by any noise, such as the glitches between samples 200 and 250 in Figure 12(black, bottom). We used an Agilent MSO6104A oscilloscope (1GHz, 4Gsps) with Agilent 10073C 500MHz passive probes to monitor the communication between the attacked peripheral and USB host while at the same time monitoring either the data line or power line crosstalk leakage.Attacking USB Keyboards. In addition to USB keyboards, we have successfully extracted creditcard data from a USB magnetic card reader (MagTek 21040140) using data line crosstalk leakage from an internal USB hub of a Lenovo Ideapad 100s laptop. Indeed, we have successfully recovered the communication during a file transfer from a USB 1.1 drive to the PC host using data line crosstalk leakage with both external and internal USB 2.0 hubs. The spy probe is constructed from an Alinx AX309 FPGA development board (30 USD) connected to an AN108 analog to digital conversion (ADC) board (15 USD) designed by heijin.org. The clamp is a protective element consisting of two germanium diodes, to ensure that the voltage of the signal feed into the ADC never goes above 5 Volts or below GND. In order to decode the data line crosstalk leakage recorded by the probe's ADC board, we have implemented a highly optimized version of the signal processing approach described in Section 4.2 on the probe's FPGA board, in Verilog HDL. We typed "USB CROSSTALK" on the keyboard while the spy probe was monitoring the data line crosstalk leakage, exfiltrating the key presses via bluetooth to the attacker's computer. As can be seen in Figure 26, our improved USB condom is able to significantly reduce the data line crosstalk leakage, thus requiring far more sensitive measurement equipment to exploit the small remaining leakage.Frequency filtering cannot be used to protect the data lines against crosstalk leakage.