Leading e-commerce providers (e.g., PayPal, Amazon, Google, Alibaba) and smartphone manufacturers (e.g., Samsung, Apple) all come up with their own solutions and competing with each other for market shares. More importantly, both NFC and Bluetooth allow convenient bidirectional interactions between the payer (smartphone) and the payee (POS), which helps strengthen the protection: a typical approach is for the POS device to challenge the phone with an "unpredictable number"; the number is then used by the phone to generate a payment token with a short validity period. This thwarts the attempt to use the token in a different transaction.In practice, however, the POS systems armed with NFC or Bluetooth are expensive and less deployed, and cheaper and more backwardly compatible alternatives are widely adopted. Our study reveals surprising security vulnerabilities within these high-profile schemes, affecting hundreds of millions of users around the world: we found that both approaches are subject to a new type of over-the-counter payment frauds, called Synchronized Token Lifting and Spending (STLS), in which an adversary sniffs the payment token, manages to halt the ongoing transaction and transmits the token to a colluder to spend it in a different transaction while the token is still valid. More specifically, in Samsung Pay, we show that the attacker can pick up the magnetic signals 3 meters away using a sensor, and then automatically jam the wireless signals produced by a mobile POS (mPOS) using a jammer (a commercial device), causing a disruption between its communication with the payment provider. Our study shows that a malicious payer device or the one infected with an attack app can not only steal the token from the payee's screen, which can later be used for over-the-counter payment (through POS), but also stealthily force the payee device to refresh its screen, causing it to generate a new token, therefore preserving the original one for an unauthorized purchase (Section 3). Our findings highlight the fundamental weaknesses of today's mobile off-line payment schemes: onetime token is insufficient for defending against an active adversary capable of stealthily disrupting a payment transaction (which is found to be completely realistic); also given the error-prone nature of the channels (magnetic field, sound, QR scan) those schemes use, the validity period of their payment tokens needs to be sufficiently long to allow multiple retries, which leaves the door open for the STLS attack. The rest of the paper is organized as follows: Section 2 provides background information for our study; Section 3 elaborates the STLS threats on Samsung pay and Alipay; Section 4 presents our protection mechanism; Section 5 discusses the limitations of our study and potential future research; Section 6 compares our work with related prior studies and Section 7 concludes the paper. Such a token is generated using a secret in the payer's mobile digital wallet, the current time and the challenge from the payee when it is available, and other credential data.Upon receiving the token, the POS terminal forwards the token as well as other transaction information to the payment service provider for verification. In our study on the payment through electromagnetic field (Samsung Pay) and audio signals, we consider an adversary who is either physically present at the payment scene or capable of placing her attack devices (including sniffer and jammer) there. In this section, we report our security analysis on Samsung Pay as well as the Audio Pay and QR Pay techniques utilized by other popular mobile off-line payment services such as Alipay and Wechat. In this paper we focus on the security protection of MST, even though Samsung Pay also supports NFC.Samsung Pay features a high compatibility to existing POS terminals which work with magnetic-stripe card. MST is a patented technique (US8814046 [20]) that first appears in LoopPay Fob and LoopPay CardCase and it is compatible with any existing POS terminal.The security protection of MST pretty much depends on the property of electromagnetic field, which is considered to be a near-field communication channel. Our study shows that instead of 3 inches (< 0.08 meters) as claimed by the MST document, a small loop antenna at the size of a small bag (as illustrated in Fig tured at this distance still carry enough information for decoding, in a realistic noise environment. For example, Figure 5 a) and b) compare the signal received by our loop antenna (2 meters away from the source) with the theoretically received ones, as discovered in a real-world grocery store. Although our antenna cannot directly sense the magnetic field, it is able to capture the polarity flips, because the current generated by the antenna is the derivative of the magnetic filed (a flip's derivative is an impulse, as compared in the Figure 5 b) and c)). The symbols generated by the symbol judgment can be easily translated to a text string in accordance with the ANSI/ISO ALPHA data format (designed for magnetic card track 1) or the ANSI/ISO BCD data format (for track 2 and 3) [2], as shown in Figure 6. Specifically, the payer is supposed to encode her payment information into an audio clip using a modulation scheme like audio frequency-shift keying (AFSK). Again, this payment scheme is vulnerable to an STLS attack involving audio recording and WiFi or cellular signal jamming with the device shown in Fig- ure 7(a). In this attack, the attacker uses a free iOS app called SpectrumView [35] to record the payment audio signal at a distance of 30cm from the payer's phone. A plenty of retailers (like Walmart and Starbucks), financial organizations (like Chase, Paypal and Alibaba) and social network apps (like WeChat) have developed or adopted QR payment. A QR code representing the payment token is generated by the payer's mobile payment app (like WeChat, ChasePay and AliPay) and then picked up by payee's POS scanner and transferred to service provider (see Figure 11). Different from the native payment apps, like Samsung Pay and Apple Pay, which protect the payment token through hardware means (e.g., Secure Enclave for Apple Pay and KNOX for Samsung Pay), the third-party payment apps, like WeChat and Alipay, cannot shield the payment token against the OS-level attack (e.g., malicious app with root privilege). Though the OS-level attacks can cause devastating consequences, their victim base is usually small.As a result, the defense employed by the third-party apps is largely targeting malicious apps with non-root permissions. For instance, AliPay claims that it can prevent another app from taking screenshot to steal the QR code 5 ; its payment token is one-time and short-lived; it is capable of detecting mobile trojan app and phishing QR code. The key stage of this attack is stealing the payment token while halting the ongoing transaction, and we elaborate two approaches for this step, one attacking the QR scanner of the POS machine and another attacking the payment app during P2P transactions. The token (stored in photos captured by the front camera of payer's phone ) is exfiltrated to attacker through network and spent at another store after unmasking, like MST and audio attack. Whether QR code can be successfully captured by the phone's front camera depends on several factors, including the horizontal distance between the QR code and the front camera (d cq ), the side length of the QR code (l q ), the vertical distance between the glass and the phone screen (d gs ), and the front camera's angle of view (AOV ). For Alipay on the tested scanners (Symbol DS-6708SR [50] and NLS-FR40 [10]), their glass side lengths are 2.3cm and 4.3cm respectively, which are much larger than the minimum requirement l q /2 (1.6cm). So, we choose a different approach by commanding the attack app to create an activity which is transparent except the PM region (filled with white pixels) and overlay it on top of the payment app. As long as the targeted payment app is activated , TCP sockets to the servers will be established and the IP addresses expose the app's running status. We use the brightness of the screen to determine if the payment app is displaying QR code.Our key observation is that mobile payment apps always increase the screen brightness (say B QR ) to the maximum level when showing the QR code. We use onboard sensors, including accelerometer, gyroscope, and magnetometer, to infer whether the payer is showing her QR code to the merchant. And we are able to carry out STLS attack as shown in the demo [1]. We further examined the success rate of our attack by asking 14 users to show the masked QR code (the QR code is masked for 60s) to a desktop QR scanner (NLS-FR40). This time is sufficient for the attacker to launch the attack and spend the QR code in a different transaction.Since the attack app does not require any system permissions or any unique system features, the attack is applicable to all Android versions. Then the attacker can spend the sniffed QR code in the B2L transaction in another place.In particular, the malicious app on payer's phone brings itself to the foreground and takes picture when it discovers that the payment app on the same phone is in the QR code scanning mode. If the API returns an error code, the back camera is highly likely occupied by the payment app and the scanning mode is identified (only this mode uses camera). We successfully launched the attack on a Samsung GT-S7562 (as payee) and a Galaxy Nexus (as payer). The total attacking time is 8s, including activity starting, QR code capturing (5s), bluetooth pairing requesting (3s), and activity exiting. The fundamental problem behind today's mobile off-line payment schemes is: one-time token is insufficient to protect against an active attacker who is not only able to sniff payment tokens but also capable of disrupting an ongoing legitimate transaction. To prevent an attacker from replacing the encoded PID in the sniffed payment token, we encode the PID by integrating it within the one-way HMAC computation.When the POS terminal receives the payment token, it sends the payment token as well as its PID to the payment service provider. More specifically, in Alipay QR Pay, the payment token is a string of 18 decimal numbers, consisting of a constant prefix of 2 digits, a suffix of 6-digit Time-based Onetime Password (TOTP) computed from a pre-configured seed and the current timestamp, and a middle-10-digit encrypted identity (EID), which is generated by encrypting the payer's unique identity (or account number) in a customized symmetric encryption algorithm with the TOTP as its encryption key. We scanned 10 times and the average time is 3.8 seconds for a Galaxy Nexus.For a mobile transaction, this time overhead is small, comparing to the time the cashier spends on manipulating the POS terminal, which usually costs 10 or even more seconds. These studies showed that sniffing payment token from the MST channel by a passive attacker is feasible, but the proposed techniques did not lead to the successful attack under the real-world settings, as the payment token is onetime and the payer could spend it ahead of the attacker. Instead, our STLS attack employs a jamming device to disrupt the normal transaction to prevent the payment token from being spent by the payer, which ensures that an active attacker is able to spend the victim's payment token in a different transaction. Our study is the first to investigate the usage of the audio communication channel in mobile payment settings and proposed a realistic attack against such channel. Such techniques can not prevent our attacks since the modified QR code has no malicious content.Similar to POSAUTH, QR code has also been employed to transfer information for authentication schemes [48,30,29], given its high usability and low deployment cost. To mitigate STLS threats, we propose POSAUTH which forces a payment token to include the unique ID of current POS terminal and, when combined with short valid period, is able to confine a token to be used in legitimate transactions only.