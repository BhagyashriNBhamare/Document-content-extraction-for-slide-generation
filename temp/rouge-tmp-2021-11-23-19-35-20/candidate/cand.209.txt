We uncover several security and privacy vulnerabilities ranging from design flaws to implementation bugs leading to a man-in-the-middle (MitM) attack enabling stealthy modification of files transmitted via AirDrop, denial-of-service (DoS) attacks preventing communication, privacy leaks that enable user identification and long-term tracking undermining MAC address randomization, and DoS attacks enabling targeted or simultaneous crashing of all neighboring devices. With deployments on over one billion devices, spanning several Apple operating systems (iOS, macOS, tvOS, and watchOS) and an increasing variety of devices (Mac, iPhone, iPad, Apple Watch, Apple TV, and HomePod), Apple Wireless Direct Link (AWDL) is ubiquitous and plays a key role in enabling device-to-device communications in the Apple ecosystem. It is also noteworthy that the design of AWDL and integration with Bluetooth Low Energy (BLE) are (1) driven by optimizing energy and bandwidth and (2) the devices do not require an existing Wi-Fi access point (AP) with secure connections but are open to communicating with arbitrary devices, thus, potentially exposing various attack vectors.We conduct the first, to the best of our knowledge, security analysis of AWDL and its integration with BLE, starting with the reverse engineering of protocols and code supported by analyzing patents. Our analysis reveals several security and privacy vulnerabilities ranging from design flaws to implementation bugs enabling different kinds of attacks: we present a man-in-the-middle (MitM) attack enabling stealthy modification of files transmitted via AirDrop, a denial-of-service (DoS) attack preventing communication between devices, privacy leaks allowing user identification and long-term tracking undermining MAC address randomization, and targeted DoS and blackout DoS attacks (i. e., enabling simultaneous crashing of all neighboring devices). Each master node transmits synchronization parameters which consist of the current AW sequence number i (0 to 2 16 − 1) and the time until the next AW starts based on its local clock t AW . Formally, we define the overlap O as the integral over the overlap function o of two sequences s 1 and s 2 taking into account the phase where s(t) is the τ-periodic continuation of a sequence, i. e.,s(t + nτ) = s(t), ∀n ∈ N. Then, o(s 1 , s 2 , φ,t) = 1 if s 1 (t) = s 2 (t − φ) = 0 0 otherwise (2) and O(s 1 , s 2 , φ) = τ t=0 o(s 1 , s 2 , φ,t) . (3) AirDrop is an application that allows iOS and macOS users to exchange files between devices using AWDL as transport.We reverse-engineered the AirDrop protocol by employing a MitM HTTPS proxy [20] and using a popular disassembler on macOS' sharingd daemon and Sharing framework where AirDrop is implemented. The sender initiates the discovery procedure and transfers the data while the receiver responds to requests: (1a) The sender emits BLE advertisements including its hashed contact identifiers (see Section 4.1 for details), while the prospective AirDrop receiver regularly scans for BLE advertisements. In order to authenticate, a device needs to prove that it "owns" a certain contact identifier c i such as email address or phone number associated with its Apple ID, while the verifying device checks whether it has c i in its address book. The UUID is not tied to any contact identifiers, so AirDrop uses an Apple-signed record data "blob" RD containing the UUID and all contact identifiers c 1 , . . . , c n that are registered with the user's Apple ID in a hashed form. While AirDrop's authentication mechanism appears to be crypto- Length (2) Type (0x01) Flags (0x1b) Length (23) Type (0xff) Apple (0x4c00) Subtype (0x05)Length (18) Zero bytes (0x00). . . Contact Identifier 1Contact Identifier 2 Contact Identifier 3Contact Identifier 4 0x00 graphically well-designed, we show in Section 7 how to downgrade an authenticated connection to an unauthenticated one and launch a MitM attack on the data transfer. Finally, we build a PoC leveraging a low-cost ($20) BBC micro:bit device and experimentally confirm that the attack is feasible in practice with a target response time of about one second for devices that have 100 contact identifiers in their address book. (8)In particular, the attacker only requires one hit to activate the target's AWDL interface whose probability we call p:p = P(X ≥ 1) = 1 − P(X = 0) = 1 − n 0 S−n C−0 S C = 1 − S−n C S C . Then, we leverage the attack presented in Section 4 to perform an experimental vulnerability assessment at different locations and compare the results with a user study spanning 500 participants. In particular, AWDL includes the following sensitive fields in the AFs which devices broadcast in the clear multiple times per second when the AWDL interface is active:• The hostname may include parts of the user's name, e. g., "Janes-iPhone," which is the default when setting up a new device. The attacker could exploit the OS information during reconnaissance to mount attacks on vulnerable driver implementations.Targets need to broadcast AFs to make these vulnerabilities exploitable, which an attacker can practically enforce by mounting the attack presented in Section 4. Our survey complements our experimental results by indicating that 20 % of Apple device users have AirDrop turned off and, thus, are not trackable via AWDL. This can happen if a device (not controlled by us) sends out advertisements itself, for example, when a user opens the AirDrop sharing pane which apparently occurred regularly at the university location. However, given that we can receive unique identifiers of Apple devices (Wi-Fi MAC address and hostname), mounting a large-scale tracking attack should be trivial for an adversary that can deploy multiple low-cost Wi-Fi and BLE nodes throughout an area. We present a short-term solution and then propose two mitigation techniques that remove stable device identifiers to prevent user tracking via AWDL.Disable AirDrop. Some common attack vectors include using the GPS sensor [35,48,55,83,95], cellular [5,44,50,67], Wi-Fi [15,40,69,96,97], radio interface fingerprinting [90], and motion sensors [25,39,59,61,62]. Another work [56] demonstrated that MAC randomization could be defeated through timing attacks, where a signature based on inter-frame arrival times of probe requests can be used to group frames coming from the same device with distinct MAC addresses. Thus, while end-to-end confidentiality and integrity can be achieved using a secure transport protocol such as TLS, AWDL frames are vulnerable to forgery which renders any upper layer using AWDL susceptible to attacks on availability.In this section, we present a novel DoS attack that targets AWDL's synchronization mechanism (Section 2) to prevent two nodes from communication with each other. In order to succeed, the attacker needs to (1) get recognized as the master by both targets, (2) communicate with each target separately to (3) send different sets of synchronization parameters that result in zero (or minimal) channel overlap. Given the metric and counter values of two nodes A and B as (m A , c A ) and (m B , c B ), respectively, then, A wins the master election ifc A > c B ∨ (c A = c B ∧ m A > m B )(15)and loses otherwise. The other results indicate that the desynchronization attack significantly degrades communication between the targets, peaking at phase shifts where the targets are off by a quarter (φ = 4) and three-quarter period (φ = 12) which is where the channel overlap has its minima (and the inverse overlap its maxima). While this does not prevent an attacker from winning the master election and, thus, sending invalid synchronization parameters, as all nodes process the same frames, it becomes much harder to create a deterministic offset between two targets. First, if no contact photo is available (users augment only 27 % of their contacts with a photo according to our survey), the icon contains the receiver's initials in a grey circle which is similar to that of an unauthenticated receiver (a grey circle with a head's silhouette). Based on our results in Section 5, a device name contains the user's given name in the majority of the cases (more than 70 % according to our experimental evaluation in Section 5), which the attacker can exploit to create a trustworthy-looking device name. This is due to the fact that AirDrop senders increase the channel allocation when starting the discovery process, thus, increasing the overlap with the receiver even when desynchronized.As an alternative, we used the well-known TCP reset attack which sends TCP segments including an RST flag to the targets which, in turn, immediately drops the connection. Once the receiver becomes discoverable (we can check when a receiver is discoverable by everyone by periodically sending Discovery requests), we advertise our own AirDrop identity via mDNS and wait until the sender tries to perform the authentication handshake via HTTPS for discovery which we let succeed. By committing to the one-time cookie in the TLS handshake, a MitM attack on the OOB channel would be fruitless because the attacker could not establish a TLS connection with the same key. Finally, [10] proposes a conflict detection mechanism for Multicast DNS (mDNS) to prevent their attack, which is based on the assumption that "disrupting two parties' communication through a Wi-Fi direct link or a local network is difficult for the adversary without access to the routing infrastructure of the network." The video demonstrates how an attacker mounts a targeted DoS attack that crashes a single device and a blackout DoS attack that crashes all devices in range of the attacker at the same time. While not critical by themselves, the mere existence of these vulnerabilities creates a new class of threats to Wi-Fi devices as an attacker can exploit them without any authentication towards the target, i. e., they do not have to be on the same network. To build PoCs for these attacks, we have reverse-engineered AirDrop, a system service that runs on top of AWDL, and have implemented open versions of both AWDL and AirDrop which we make available as open source software. Finally, our findings have implications for the nonApple world: NAN, commonly known as Wi-Fi Aware, is a new standard supported by Android which draws on AWDL's design and, thus, might be vulnerable to the similar attacks as presented in this work. (3) DATA TRANSFERHTTPS POST /Ask with device name "Jane's iPhone" Attacker receives original file and forwards a modified copy to John Jane selects "John" as the receiver.