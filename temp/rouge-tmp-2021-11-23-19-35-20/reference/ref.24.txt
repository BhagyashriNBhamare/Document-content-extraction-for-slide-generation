This is because many new wireless devices lack the necessary interfaces (keyboard, screen, etc.) to manually enter passwords, or are often preloaded with default keys that are easily leaked. We then use HELP to build a device pairing protocol, which securely introduces new devices to the network without requiring them to share any secret keys with the existing devices beforehand. In recent years, we have experienced a proliferation of advanced personal wireless devices (APDs) such as smartwatches, wearable sensors, RFID devices, home monitoring sensors for Internet-of-Things applications, etc. [38]. The process of establishing trust between the APD and the hub is known as secure bootstrapping and is achieved via a two-party mutual authentication and key-agreement mechanism.The prevailing methods for secure device bootstrapping are either by manually loading the hub's secret to the device or to preload the APDs with some unique secret. Several device pairing protocols have been proposed for device pairing without pre-shared secrets [1,8,11,18, 26, 29, 32, 37, 40-42, 44, 54]. Recently, in-band pairing protocols [10,17,23] have been proposed as an alternative to OOB pairing. Since the wireless channel is known to be insecure in general, the security of these protocols relies on the assumption that wireless signal cancellation is infeasible, so that message integrity and authentication properties can be derived by encoding the messages in a special way. Thus, it remains an open problem as to whether secure in-band device pairing protocols can still be designed under a strong Dolev-Yao attacker which can annihilate wireless signals.In this paper, for the first time, we seek an answer to the above question. Trust between the hub and the helper is established using traditional means (e.g., input a shared random password on the smartphone when it is first paired with the hub), which is a one-time cost. • We utilize the proposed message integrity verification primitive to construct a secure in-band device pairing protocol named HELP based on the Diffie-Hellman (DH) key agreement [14]. • We theoretically analyze the security of the proposed integrity verification primitive and the HELP protocol, and we establish bounds for the adversary's success probability under active attacks (especially Man-in-the-Middle attacks). We also implement the proposed protocol in our Universal Software Radio Peripheral (USRP) testbed and evaluate the adversary's successful pairing probability with and without the protection of our integrity verification primitive. It is well known that key agreement can be achieved using traditional cryptographic protocols such as a DH key exchange [14]; however, public message exchange over the wireless medium is vulnerable to Man-in-the-Middle (MitM) attacks, which are notoriously difficult to thwart without any prior security associations. Many existing secure device pairing methods rely on some out-of-band (OOB) channel to defend against MitM attacks [1, 8, 11, 18, 26, 29, 32, 37, 40-42, 44, 54]. Other works require specialized hardware such as a Faraday cage to isolate the legitimate communication channel [27,30]. Existing approaches on noncryptographic device authentication [9,25,33,45,60,65] can be classified into three categories: (a) device proximity, (b) location distinction, and (c) device identification.In device proximity methods, the common idea is to exploit the channel reciprocity and its rapid decorrelation (within a few wavelengths) with distance. Whereas the above approaches authenticate a device's presence, they do not necessarily protect the integrity of the messages transmitted by a device, due to the possibility of signal manipulation attacks over the wireless channel [10]. For example, Tamper demonstrated an effective relay signal cancellation attack using a pair of directional antennas, which works regardless of the packet content and modulation [47]. al. [22] showed that it is possible to prevent signal cancellation only if the channel itself has enough randomness. A typical indoor environment may not be sufficient because the devices are static and the channel is usually stable.To remedy the significant shortcomings of existing device pairing schemes, we (for the first time) introduce the core idea of detecting signal manipulation attacks even if signal cancellation is 100% effective. We assume that a user initiates the pairing process by powering the device and setting it to pairing mode. The BS verifies and pairs with any legitimate device requesting to join the network.Helper Device (H): The helper is an auxiliary device such as a smartphone, that assists the BS in the pairing process. We leave the exact specification of AE(·) open to allow for both symmetric and/or asymmetric methods.Note that pairing H to the BS is a one-time effort and need not be repeated with every device join. Moreover, only the helper is required to have an advanced interface to pair with the BS.Legitimate Device (D): A legitimate device is a typical APD which does not share any secrets with the BS or H. That is, the attacker does not control the helper so that it cannot initiate the pairing with the BS when no legitimate device is present. This is the minimal assumption adopted by the majority of the previous works in device pairing.The goal of an attacker is to pair successfully with the BS and/or D. Therefore, we mainly consider a MitM attacker in our security analysis. There could be several cases: device only, helper only, BS only, or device plus helper together. HELP makes use of a new PHY-layer message integrity protection primitive to detect signal cancellation attacks that are launched to perform a MitM attack against a key agreement protocol. The advantage of ON-OFF keying is that it hardens signal cancellations, as the adversarial device, A has to "erase" the received signal y D at the BS by synchronizing its own signal transmission x A and taking into account the channels h D,BS and h A,BS . Different from previous approaches [10,17,24], we consider the worst case scenario where signal cancellation is possible due to the stability and predictability of the respective channels, as it was demonstrated in [47]. A signal cancellation targeted at the BS is bound to also cancel the signal from H. With the completion of the m D transmission, the helper reveals m H to the BS, who verifies if any part of m H has been canceled.If the message integrity verification test is passed, the BS exploits the knowledge of m H to recover m D . We achieve this requirement by placing the helper in close proximity to D and by randomizing the transmit power and the starting time of each ON-OFF slot at D and H. Placing H close to D makes it difficult to differentiate the two devices using transmission directionality or the uniqueness of the wireless channel. Device Placement: The helper H is placed in close proximity to the unauthenticated device D.that is attached to wireless transmissions for synchronizing the receiver to the transmitter. We complement the DH key agreement protocol with the HELP integrity verification primitive. D BS Given ID D , Given ID BS , (G, q, g) (G, q, g) Pick X D ∈ U Z q X BS ∈ U Z q z D ← g X D z BS ← g X BS m D ← ID D , z D m BS ← ID BS , z BS (H active) [h(m D ),m D ] +m H − −−−−− → (H active) AE(s,K) − −−−−− → Verify & Extract z D m BS ← −−−−− − k D,BS ← (z BS ) X D k D,BS ← (z D ) X BS In this section, we analyze the security of the HELP integrity verification primitive and evaluate the security of the DH-based pairing protocol presented in Section 4.3. For illustration purposes, we show the signal cancellation as a negation of the ON value.R BS ← −−−− − C BS ∈ U Z q ID BS ,C BS ← −−−−− − R D ←h k D,BS (ID D ||C BS ||1) R D − −−− → Ver(R D ) = true?From Table 1, we observe that if b H is known, the adversary can always make the BS decode the desired bit b D , irrespective of the value of b D . We experimentally evaluate this probability in Section 6. The proof is provided in Appendix A.b D b H b D + b H b A b D + b H b D +b A1 2In our analysis, we set the inference probability of H's activity to one when either D and H co-transmit or none transmits. Note that in a single use of the HELP primitive, the attacker has only one chance to guess s and modify the value of m D in an online fashion. Hence, a higher probability of forgery is acceptable here relative to standard cryptographic security (similar security values are sought in previous pairing protocols, which use short authentication strings [40]). In the second part, we examine if a legitimate device can be deceived to pair with a rogue base station. We now examine whether the adversary acting as a rogue BS can pair with a legitimate device D. To do so, the adversary can perform a similar MitM attack as in the uplink direction, by replacing the BS's DH public parameter z BS with its own number z BS . However, s is transmitted from H to BS using the authenticated encryption function AE(·), so A cannot obtain s directly from the encrypted version of it.Alternatively, A can collect and analyze the transmitted signal of [h(m D ), m D ] + m H after receiving it and attempt to identify all the ON slots in m H using radio fingerprinting methods [7,19,28,39,55,59]. As long as A infers H's ON slots with some probability smaller than one, we can drive the probability of successfully extracting m D arbitrarily low by increasing the adversary. These include (a) the received signal strength [55], (b) the frequency offset [59], (c) the channel impulse response h H,A [39], (d) the I/Q origin offset [7], (e) the transient radio state [19], and (f) the angle of arrival for the incoming signal [28]. We first examine A's attempt to perform the signal cancellation and injection required by the MitM attack of Figure 6. The methods that detect the transient state of a radio when it turns on can only be used to identify the start of a transmission (although an ON-OFF modulation implies a transition from an OFF to an ON state, the radio transmitter is powered through the entire transmission of an ON-OFF signal and a transient state is not observed with every slot). The simplest and most timely method for detecting the presence of the helper is to measure the received signal strength over some small number of samples at the beginning of every slot. We expect that A will be able to infer the ON slot of the helper with probability p I = 1, due to the higher RSS value of the first few samples of the ON slot.When b D = b H , both t i and t i+1 are ON and have similar power profiles if H and D transmit with the same power and are placed in close proximity. In this case, the adversary is expected to be unable to differentiate a helper's ON slot from a device's ON slot with the probability much higher than a random guess. However, the thresholds for cases P 2 and P 3 are expected to be very close, thus leading to frequent wrong inferences. We experimentally verify this claim.Experimental Evaluation of p I : Experimental setup: To evaluate p I , we setup three NI-USRP 2921 devices in an indoor laboratory environment. We implemented amplitude shift keying (ASK) to transmit MC ON-OFF coded messages and repeatedly transmitted message {1, 0, 1, 0} from D and message {1, 1, 0, 0} from H simultaneously. The signals from H are MC-coded only when the bit value is one. This indicates that differentiating between the ON slots of the helper and of the legitimate device, when only one of the two transmits, is practically equivalent to a random guess. As expected, decreasing the distance between A and H improves the adversary's inference capability, but the inference remains imperfect when D and H remain relatively close.In the fourth experiment, we repeated the second part of the third experiment but configured H and D to vary their transmission power on a per-slot basis. Figure 9(b) shows the same results when the distance between D and H was also varied, with H moving towards A. Therefore, a perfect synchronization between D and H is not required for the correctness of the proposed protocol.To prevent the inference of the helper's ON slots based on time misalignment, we randomize the start times of each bit (first slot of the MC ON-OFF bit) both at H and D. Specifically, a random time offset ε, positive or negative, is selected from a uniform distribution U (ε l , ε h ). We observe that no device is always faster (slower), thus preventing A from fixing its clock to H.Experimental Evaluation of p I : To verify the validity of our time randomization approach and its impact on the inference probability p I , we setup three NI-USRP 2921 devices in an indoor laboratory environment as D, H, and A, respectively. The transmit power for an ON slot was set to 20dBm with a symbol duration of 1ms. In the final set of experiments, we evaluated the integrity protection offered by HELP against an adversary capable of canceling and injecting signals. The signal of RX 2 was added to RX 1 to cancel the transmission of D and H, whereas a random signal was added to emulate A's signal injection.In the first scenario, we transmitted MC ON-OFF sequences of length = {4, 8, 12, 20}, while the helper was inactive. We also varied the probability of successful cancellation p C by suppressing cancellation for a corresponding fraction of bits. Figure 12(d) shows the probability δ of accepting the adversary's modified message as a function of the number of active helper slots |s| when the message length is = 20. We considered the problem of pairing two devices using in-band communications in the absence of prior shared secrets. We proposed a new PHY-layer integrity protection scheme called HELP that is resistant to signal cancellation attacks. Our protocol is aimed at alleviating the device pairing problem for IoT devices that may not have the appropriate interfaces for entering or pre-loading cryptographic primitives. We then compute the probability of detecting signal modifications by A over all bits. This probability can be calculated as:p r = (Pr[b H i = 0, b D i = 1, b A i = 1] + Pr[b H i = 1, b D i = 0, b A i = 0]) Pr[wrong inference] = 1 2 · 1 2 · 1 2 + 1 2 · 1 2 · 1 2 (1 − p I ) = 1 − p I 4 ,(5)In (5), b X i denotes the transmitted value of device X at bit b i , and p I is the probability of inference of helper's activity by the A on a given bit. The probability δ of accepting the modified message of A at the BS is computed by taking into account all |s| cardinality of the set of bits on which the helper was active. After the attacker extracts m D , the rogue BS needs to pass the challenge-response authentication in the key confirmation phase.Assuming the use of a strongly universal hash function to compute the response h k D,BS (ID BS ||C D ||0), he can only pass this authentication if he has the correct key k D,BS . The PHY-layer integrity verification of D by mechanism in Section 4.2 is δ -secure, where Proposition.