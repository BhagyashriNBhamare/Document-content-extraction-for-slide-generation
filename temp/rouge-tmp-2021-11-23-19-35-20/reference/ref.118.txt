Collecting a month-long snapshot of public posts of a popular fitness tracking service (21 million posts, 3 million users), we observe that 16.5% of users make use of Endpoint Privacy Zones (EPZs), which conceal fitness activity near user-designated sensitive locations (e.g., home, office). We go on to develop an attack against EPZs that infers users' protected locations from the remaining available information in public posts, discovering that 95.1% of moderately active users are at risk of having their protected locations extracted by an attacker. In response to public criticism over the global heat map incident, Strava has pointed to the availability of a variety of privacy protection mechanisms as a means for users to safeguard their accounts [50] -in addition to generic privacy settings, domain-specific mechanisms such as Endpoint Privacy Zones (EPZs) conceal fitness activity that occurs within a certain distance of sensitive user locations such as homes or work places [15,16,13]. Using these insights, we then formalize an attack against the Endpoint Privacy Zones fea- Figure 1b shows the activity after an Endpoint Privacy Zone (EPZ) was retroactively added, obscuring the beginning and end parts of the route that fell within 1 8 miles of the Hyatt Regency Austin hotel.ture. While user privacy can be improved by these techniques, our results point to an intrinsic tension that exists within applications seeking to share route information and simultaneously conceal sensitive end points.Our contributions can be summarized as follows:• Demonstrate Privacy Leakage in Fitness Apps. We test our attack against real-world EPZ-enabled activities to determine that 84% of users making use of EPZs unwittingly reveal their sensitive locations in public activity posts. • Characterize Privacy Behaviors of Fitness App Users.We collect and analyze 21 million activities representing a month of Strava usage. • Develop Privacy Extensions.Leveraging our dataset of public activity posts, we evaluate the effectiveness of state-of-the-art privacy enhancements (e.g., geo-indistinguishability [26]) for solving problems in fitness tracking services, and develop novel protections based on insights gained from this study. As is evident from the features described above, fitness tracking services share a variety of highly sensitive user information, including spatial and temporal whereabouts, health data, and a list of valuable equipment that is likely to be found in those locations. Recognizing the sensitivity of this information, these services offer a variety of privacy mechanisms to protect their users. However, as posts are public by default on many services, the ability to block a user offers limited utility.F3 Endpoint Privacy Zone: Since users will often start their activities at sensitive locations, several services allow users the option to obfuscate routes within a certain distance of a specified location. If an activity starts or ends within an EPZ, the service will hide the portion of the user's route within the EPZ region from being viewed by other users. For example, Strava and Garmin Connect users will not appear on leaderboards for routes that are affected by their privacy zone.F4 EPZ Radius Size: All three services (Strava, Garmin Connect, Map My Tracks) that provide an EPZ feature, allow users the option of selecting a circular obfuscation region from a fixed set of radius size values. It may be intuitive to the reader that, given a finite set of possible circle radii and a handful of points that intersect the circle, the center of the circle (i.e., a user's protected location) is at risk of being inferred. When only one route intersection point is known, there is a large space of possible EPZ locations; however, given two intersection points, the number of possible EPZs is dramatically reduced, with the only remaining uncertainty being the radius of the circle (Figure 2a). Given three distinct intersection points (Figure 2b), it should be possible to reliably recover the EPZ radius and center.In spite of this intuition, it is not necessarily the case that EPZs are ineffective in practice; a variety of factors may frustrate the act of EPZ identification. Through the use of a dummy account, the adversary learns how the fitness tracking service protects private locations, as described in Section 2. Problem Formulation.We formulate our problem as the EPZ Circle Search Problem in the Cartesian plane. In the EPZ search problem, the goal is to guess (p g , r g ∈ R S ) such that EPZ p g ,r g best fits endpoints p 1 and p n for all activities in A u . Circle fit algorithms take sets of Cartesian coordinates and try to fit a circle that passes through those points. If the circle satisfies equation(x − a) 2 + (y − b) 2 = r 2 (2)where (a, b) is its center and r its radius, thend i = (x i − a) 2 + (y i − b) 2 − r (3)Limitations of LSF. There is no direct algorithm for computing the minimum of F, all known algorithms are iterative and costly by nature [32]. When finished, return a randomly selected item in SS as a guess for the protected location.Refinement #1 (Confidence Score & Threshold): The above algorithm is not deterministic -multiple EPZs are predicted by the algorithm, but only one is the correct one for the given user u. Pruning these possibilities requires the introduction of a metric to indicate that one candidate EPZ is more likely to be correct than the others. We observe that the correct EPZ prediction will Algorithm 1: EPZ Search Algorithm Delete key from PossibleEPZs 30 end 31 return PossibleEPZs occur most often; this is because all endpoint pairs that intersect the EPZ will produce the same result, whereas endpoint pairs that do not intersect the EPZ will produce different results each time. A confidence score is assigned to each EPZ, where the value of this metric is the number of activity start/end points that independently agree on the location of the EPZ. Inputs : A u , τ d , τ c , τ i , R S Output: KeyValueStore of EPZ, confidence level 1 PossibleEPZs ← KeyValueStore() 2 foreach (A 1 , A 2 ) ∈ A u do /* 6 Due to sampling noise and imprecision in the GPS coordinates made available by fitness tracking devices/services, it may be that activity endpoints do not lie exactly on the EPZ circle. When comparing two candidate EPZs to one another, the refined algorithm considers two circles as same if the distance between the centers is less than or equal to this threshold. Refinement #3 (Activity Intersection Threshold): To reduce the space of candidate EPZs, we can leverage the knowledge that no endpoint from any activity in the set A u should fall within the candidate EPZ's circle, as this necessarily implies that an EPZ was not active in that area for user u. However, we must also account for measurement error when performing this test -due to noise in GPS sampling, there is a chance that an activity passing nearby the area of the candidate EPZ could produce endpoints that appear to lie within the circle. To evaluate the plausibility of the above EPZ attack algorithm, we require a large corpus of naturalistic usage data for a fitness tracking app. In characterizing the resulting dataset, we also provide useful insights as to the privacy habits of the athletes on fitness tracking apps. For each ID, the crawler first visits the strava.com/activities/ID page to extract the activity's start date and time, Athlete ID, total distance, total duration, reported athlete gender, and the type of the activity. Through experimentation, we discovered that when an activity is associated with an EPZ, there is a discrepancy between the advertised distance on the activity page and the final distance traveled according to the GPS samples; the crawler check-marks the activity as EPZ-enabled if this discrepancy is found. Three types of activities were discarded: 1) Private activities for which we did not retrieve any usage information, 2) Activities with 0.0 distance that did not have any route information, and 3) Activities with type other than Walk, Ride, and Run . We observed 8 different activity types (Ride, Run, Walk, Hike, Virtualride, Swim, Workout, and others) in our dataset, with Ride, Run, and Walk comprised the 94% of total activities. To establish ground truth with which to measure the accuracy of our EPZ identification algorithm, we first create a synthetic set of EPZ-enabled activities using unprotected routes for which the true endpoints are known. After validating our approach, we then quantify the real-world severity of this danger by running our algorithm against legitimate EPZ-enabled activities. location, synthesize an EPZ with a radius of 0.25 miles over the centroid, and update the GPS data by removing all points that fall within the synthetic EPZ. Finally, our identification algorithm attempts to independently predict the (known) center of each (synthesized) EPZ.As discussed in Section 3, our algorithm is parameterized by three thresholds: t d , t c , and t i . We note that these values need to be adjusted for different services, or as Strava modifies the sampling/precision of its GPS coordinates 7 . If only two activities were available for a given athlete, it was common that only two points would intersect the EPZ. Having validated the effectiveness of our technique against a synthesized dataset, we now turn our attention to identifying actual protected locations of actual Strava athletes. As we will demonstrate in Section 6, the effectiveness of our algorithm degrades against large EPZ radii, due solely to their propensity to obscure entire activities; in fact, for EPZ radii of 0.625 miles, we see the accuracy of our approach falls to 44% against synthetic data. Fig- ure 7 shows the cumulative density functions (CDFs) of identified locations and unidentified locations across several different potentially influential metrics: the activities count for the athlete (Fig. 7a), the total distance traveled by the athlete (Fig. 7b), and the total duration of athlete activity (Fig. 7c). Recall our dataset is comprised of a single month of Strava activity; this finding indicates that, over a prolonged window, the number of leaked locations is likely to be much larger than 95.1% amongst regular users of Strava.Failure Condition. In this section, we address this gap in the literature by testing state-of-the-art privacy mechanisms against our Strava dataset, as well as proposing our own defense that fuzzes the boundaries of EPZs in order to frustrate our attack. This technique predicts that the protected location will be harder to guess if the last visible point in the activity is further away from location.2. Spatial Cloaking Another technique of location obfuscation is spatial cloaking [41]. We adapt spatial cloaking the in context of fitness tracking services.We shift the center of EPZ, concealing the protected location at an unknown point within the privacy zone. The reason for using unprotected activities is that they provided known locations to use as ground truths, and also because some countermeasures may actually reveal parts of the true route that were concealed by Strava's EPZ implementation. For each user, we searched their activities for route endpoints that fell within 50 meters of one another. Radii of EPZs (Miles) Figure 9: Efficacy of Modify Radius defense -while larger EPZ radii seem to reduce attack accuracy, the larger radii are actually just enveloping entire activities.Spatial Cloaking. We then shifted the center of the EPZ by distance d in the direction of θ . Against this obfuscation, we considered that an attacker may try to account for the added noise by modifying the distance similarity threshold τ d used in the EPZ identification algorithm. We considered a simple extension where τ d incorporated the fuzzing value F by some constant factor:τ d = τ d + cF(6)We parameterized c by selecting a random subset of 1,000 athletes and running our algorithm using different c values but with a fixed F of 80 meters. However, we note that there are likely more expressive models for the attacker to overcome fuzzing noise, which we leave for future work.Spatial Cloaking Against this obfuscation, it no longer makes sense for an attacker to predict the center of the enhanced EPZ, as the protected location is equally likely to fall anywhere within the circle. However, we predict that the direction of an activity route as it enters the EPZ still leaks significant information about the user's protected location. For each user activity, we inspect the last 2 GPS points at the end of the route, then extend the route through the EPZ with simple linear interpolation. Prediction Improvement Table 2: Success rate of our attack on spatial cloaking compared to randomly guessing. To demonstrate the significance of this result, consider the likelihood of predicting the protected location by issuing a random guess that falls within the EPZ, as shown in Table 2. We also obtained similar results when running our fuzzing obfuscation against the interpolation attack. We searched our dataset for activities from three of the locations identified in popular media: the United Kingdom's Government Communications Headquarters (GCHQ), Australia's Pine Gap military facility, and Kandahar Airforce Base in Afghanistan. We found that 1 of 7 athletes in our dataset were using EPZs at GCHQ, 1 of 8 athletes used EPZs at Pine Gap, and 1 of 13 athletes used EPZs at Kandahar, suggesting that a non-negligible minority of athletes at these sites were aware of the privacy risks and were attempting to safeguard their usage.The findings presented in this study potentially exacerbate the safety risks posed by the global heatmap revelations. Regardless of the EPZ size used, we successfully identified the sensitive location by running our attack, We did not need to reparameterize our algorithm (i.e., τ d , τ i ), indicating that our values are robust across multiple services.Garmin Connect. In addition to the specific privacy enhancements presented above, we also advise fitness tracking services to adopt the following general countermeasures to order to increase the difficulty of abusing their services:Randomize Resource IDs. He concluded that the majority of participants had considered privacy issues when using the application and had taken some measures to protect themselves, such as setting up privacy zones or not listing their equipment. Geo-indistinguishability is derived from differential privacy [35] and ensures that for any two location that are geographically close it will produce a pseduo-location with similar probabilities. However, this technique cannot be used directly in the context of fitness tracking apps as users still want to share a major portion of a route while preserving a certain portion of route (e.g. home). This can lead to social engineering [39,5] and even automated social botnet attacks as in [28,31], where user information such as location is automatically extracted. Strava provides a privacy option to require user approval for new followers, we show that when this option is not enabled such attacks are also possible on Strava and other fitness apps. Enck et al. demonstrate a method of detecting application leakage of sensor information on the Android platform through taint analysis [36], and subsequently conducted a semi-automated analysis of a corpus of 1,100 applications in search of security and privacy concerns [37]. Strava has adopted a spatial cloaking function that is invoked upon the creation of every new user-specified EPZ, and provides the user with an option of re-randomizing the EPZ if they do not like its placement. Additionally, Strava has taken steps to prevent the bulk collection of their public user activities, including aggressive rate limiting of the strava.com/stream/ API, least privilege restrictions on returned API fields based on the client's authorization state, and IP whitelisting of interoperable social network's servers to prevent unauthorized use of other APIs. While we identified significant demand for privacy protections by users of these services, we have also demonstrated current mechanisms are inadequate -we found that the homes privacy-conscious athletes are consistently identifiable by attackers, and in fact that the only truly safe athletes are those that use the service infrequently. We would like to thank Adam Aviv for his valuable comments on an early draft of this paper.