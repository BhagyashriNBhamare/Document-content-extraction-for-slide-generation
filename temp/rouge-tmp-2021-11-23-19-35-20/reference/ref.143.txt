Remote Access Trojans (RATs) are a class of malware that give an attacker direct, interactive access to a vic-tim's personal computer, allowing the attacker to steal private data from the computer, spy on the victim in real-time using the camera and microphone, and interact directly with the victim via a dialog box. Remote Access Trojans (RATs) are an emerging class of manually operated malware designed to give human operators direct interactive access to a victim's computer. Unlike automated malware (i.e., spam and DDoS), RATs are predicated on the unique value of each infection, allowing an attacker to extort a human victim or otherwise benefit from access to a victim's private data. RATs are sold and traded in underground communities as tools for voyeurism and blackmailing [11,18]. The central challenge of conducting a study of the RAT ecosystem, then, is to be able to correctly determine who is really a victim or operator, and who is pretending to be one.In this paper, we design, implement, and deploy improved methodologies for accurately measuring real victims that connect to our sinkhole, RAT-Hole, and identifying RAT controllers using our scanner, RAT-Scan. Our analysis also found that telemetry from a /32 and /24 internet telescope could filter less than 1% of the higher fidelity scanners and sandboxes. We also received several repeated manual notifications based on scanners misclassifying our RAT-Hole deployment as a large-scale RAT controller hosting operation.As part of our study we also created RAT-Scan, which is able to differentiate some sinkholes, including our high fidelity RAT-Hole, from actual RAT controllers by emulating DarkComet and njRAT victims. The other potential intervention is for law enforcement entities to more closely monitor these services to better identify attackers and victims.The primary contributions of our study include:O Proposal and evaluation of methods for classifying RAT sandboxes, scanners, and likely victims based on connection to a sinkhole. The newly built stub contains the code that will run on the victim's computer with parameters such as the host name of the command-and-control server to contact upon infection. Whether a protocol handshake is victim-initiated or controller-initiated determines how we scan for controllers and sinkhole stubs, as described below. As we will show, operators often allow their hostnames to expire and this provides a large pool of RAT domain names that can be claimed and sinkholed.Ideally, a DNS sinkhole operation would be able to identify all victims associated with its acquired domains and to accurately measure victims. RATs often use victim-initiated handshake protocols to communicate, so simple port scanning or banner grabbing is often not sufficient to confirm the existence of a RAT controller. Simultaneously, RAT-Scan continuously probes all extracted IP addresses and hostnames for controller activity in the wild.We limit the scope of our study to two RAT families, DarkComet and njRAT, since reverse-engineering and implementing parts of their protocols in RAT-Hole and RAT-Scan is a time-consuming manual effort. Table 2 shows that most of the domains we found that were used by DarkComet and njRAT are associated with free Dynamic DNS (DDNS) providers, and that No-IP managed 60% of all discovered domains (77% of DDNS). We randomly claimed 200 2 expired DarkComet and njRAT from the set of No-IP domains that we discovered. After three seconds it will probe the peer by sending a DarkComet C&C banner to determine if it is an njRAT stub and update the state of the connection.Victim-initiated RAT protocol detection. Although we did not claim any domains used by these variants, we did see initial messages for these other RAT families.Controller-initiated RAT protocol detection. However, it does perform well at identifying RAT scanners specifically those that do not implement the complete RAT protocol handshake and true execution behavior of the RAT protocol as standardly implemented.After handshake probing is completed, RATHole closes the connection and removes the state for that connection ID. (See Appendix C, D.) This fingerprint enables us to persistently identify and thus enumerate unique RAT peers despite victim IP address churn.RAT-Hole classification. Table 5 provides a high-level view of these connections, broken down by determined peer type.We performed an analysis of the "Unknown" peer type from Table 5 which composed 815,455 (98.5%) of all IP addresses that completed a three-way TCP handshake connection to RAT-Hole, but were not classified by RATHole as peers related to either njRAT or DarkComet. The small degree of overlap indicates that some IP addresses presented multiple behaviors; see Table 17 in Appendix E.We also wanted to understand if this pollution from likely sandboxes and scanners could be filtered using data from IP telescopes (unused IP address subnets that act as large sinkholes). To evaluate this possibility, we looked for overlap in IP addresses during our deployment period from a /24 sized (256 IP addresses) IP telescope located in India. Only 31,014 (3.8%) of the IP addresses we classified as Unknown appear in our telescope data, and less than 0.01% overlap with any other category of IP addresses. We conservatively label these peers low fidelity scanners.Our anomaly analysis for fingerprints in cluster (z) shows that 140 (53.6%) of the fingerprints have multiple unique INSTALL DATE fields, likely indicative of scanners that update INSTALL DATE based on the current time. We classify a peer as a high fidelity scanner if it is able to complete the handshake, but it violates the field formatting, exhibits peer behavior, or protocol behavior that indicates it is likely a scanner that is reimplementing the njRAT or DarkComet stub instead of an actual stub execution. This indicates the significant degree to which high-fidelity scanners and sandboxes will pollute sinkhole results if the sinkhole eschews a deeper analysis of the peers similar to RAT-Hole. Finally, what we classify as victims are the fingerprints that do not exhibit any anomalous behavior and are likely to be actual victims. Each of these samples has a unique Campaign-id, IP Address, and TCP Port configuration that directed the sample to connect to one of our RAT-Hole IP addresses on a different network segment, which we only used for this experiment. We uploaded 4 DarkComet and 4 njRAT samples to 21 different malware analysis services, of which only 9 of the services initiated a connection for at least one of our samples. We checked for services running on any port configured in any sample related to the IP address or related to a domain that resolved to said IP address at any time.RAT-Scan probes for controllers of both DarkComet and njRAT, emulating a newly-infected victim contacting the controller for the first time. The joint investigation by Recorded Future and Shodan [22] in 2015 that resulted in Malware Hunter reported 696 IP addresses as suspected RAT controllers, 10 of which appear in our dataset. However, Malware Hunter has since flagged RAT-Hole as a RAT controller and high-priority threat, so we question the value of any such threat intelligence feed as proper ground truth. This suggests that some higher profile peers associated with companies are infected with njRAT, providing the operator with an entry point into their systems. Our methodology is predicated on victims remaining after the command-and-control dynamic DNS domain used by the attacker expires, which occurs 30 days after registration with No-IP. Thus, 120 days after the command-and-control domain expired, 10% of domains were still receiving connections from legitimate victims.In all, 975 domains received victims, 14% of the 6,897 we sinkholed. Attackers may be using sets of domains interchangeably, or victims may be infected by multiple different attackers.To investigate the former, we examine the samples which we downloaded from VirusTotal. Multiple domains being in a single sample is our strongest indicator of them being shared by an attacker. We manually investigate the largest [24] and Relakks [42]) account for 40% and 3% of all actively-probed controllers, respectively, while prominent VPS services like Amazon AWS, Microsoft Azure, and Digital Ocean are also frequently abused.As the geolocation results of the proxies only serve to muddle the geospatial relationships between victims and attackers, we filter them from the following analyses. Outliers include Brazil and Russia, both of which tend to correspond with victims in bordering nations. We also find that DarkComet is used to infect a larger percentage of victims in Russia and bordering countries. The incidence of controllers and Russia and victims in Brazil (BR) is more puzzling; although both Russia and Brazil have large victim and controller populations, there is no obvious reason why controllers in Russia might target victims in Brazil specifically. As the results of Table 13 suggest, Brazil has by far the largest concentration of victims across both RATs. This caused us to limit our analysis to two common RAT family types. Our work is influenced heavily by research projects from industry and academia. This is one of the premises behind work by Starov et al. [48]; though they focus on web shells rather than more traditional RATs, their goal of measuring the ecosystem of attackers and victims is similar to ours. Our approach furthers these efforts to identify Internet-connected sandboxes, using unmodified malware binary submissions and leveraging artifacts of the execution process like short execution duration to inform our detection.In a 2014 report, researchers at FireEye enumerated infections for an XtremeRAT campaign by sinkholing the controller domain [51]. We presented the results of our study of attacker and victim populations of two major RAT families, njRAT and DarkComet. In Figure 8a, we provide a diagram of the njRAT handshake, the initial exchange of messages between the stub and controller before the command-response cycle begins. In Table 17, we present the detected peer types of those connections considered "Unknown". We strongly believe that these classifications are correct, and that some services either scanned RAT-Hole based on configurations extracted from our samples (the HF Scanners) or executed the samples in a non-automated analysis environment (the Victims).