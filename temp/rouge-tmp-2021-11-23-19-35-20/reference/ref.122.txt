Spear phishing has been a persistent threat to users and organizations, and yet email providers still face key challenges to authenticate incoming emails. As a result, attackers can apply spoofing techniques to impersonate a trusted entity to conduct highly deceptive phishing attacks. We answer these questions by conducting an end-to-end measurement on 35 popular email providers and examining user reactions to spoofing through a real-world spoofing/phishing test. According to the recent report from the Anti-Phishing Working Group (APWG), email spoofing is widely in spear phishing attacks to target employees of various businesses [2]. Realworld measurements conducted in 2015 have shown that among Alexa top 1 million domains, 40% have SPF, 1% have DMARC, and even fewer are correctly/strictly configured [23,27]. We are curious about how a broader range of email providers handle forged emails, and how much the security indicators actually help to protect users.In this paper, we describe our efforts and experience in evaluating the real-world defenses against email spoofing 1 . We answer the above questions through empirical end-to-end spoofing measurements, and a user study.First, we conduct measurements on how popular email providers detect and handle forged emails. We confirm that the overall adoption rates of SMTP security extensions are still low (SPF 44.9%, DMARC 5.1%). Even if the receiver performs all the authentication checks (SPF, DKIM, DMARC), spoofing an unprotected domain or a domain with "relaxed" DMARC policies can help the forged email to reach the inbox. For example, when attackers spoof an existing contact (or a user from the same provider), 25 out of 35 providers will automatically load the spoofed sender's photo, a name card or the email history along with the forged email. We answer this question using a user study (N = 488) where participants examine spoofed phishing emails with or without security indicators on the interface. This is a real-world phishing test where deception is carefully applied such that users examine the spoofed emails without knowing that the email is part of an experiment (with IRB approval). We demonstrate the positive impact (and potential problems) of the security indicator and provide the initial guidelines for improvement.The quantitative result in this paper provides an endto-end view on how spoofed emails could penetrate major email providers and all the way affect the end users. In addition, we also seek to raise the attention of email providers to designing and deploying more effective UI security indicators, particularly for the less protected mobile email apps. Simple Mail Transfer Protocol (SMTP) is an Internet standard for electronic mail transmission [56]. For example, if a.com is configured as an open relay, attacker can use a.com's server and IP to send forged emails that impersonate any email addresses. For example, if a domain "a.com" published its SPF record in the DNS, then the receiving email services can check this record to match the sender IP with the sender email address. DomainKeys Identified Mail (DKIM) uses the public-key based approach to authenticate the email sender (RFC6376 [19]). Domain-based Message Authentication, Reporting and Conformance (DMARC) is built on top of SPF and DKIM (RFC7489 [50]), and it is not a standalone protocol. DMARC allows the domain administrative owner to publish a policy to specify what actions the receiver should take when the incoming email fails the SPF and DKIM check. First, with a large number of domains not publishing an SPF/DKIM record, email providers cannot reliably detect incoming emails that spoof unprotected domains. Second, even a domain is SPF/DKIM-protected, the lack of (strict) DMARC policies puts the receiving server in a difficult position. Answering these questions is critical to understanding the actual risks exposed to users by spoofing attacks.We answer question(1)-(2) through end-to-end spoofing experiments ( §3, §4 and §5). By controlling the input (e.g., forged emails) and monitoring the output (receiver's inbox), we infer the decision-making process inside the blackbox. For the user study that involves "deception", we worked closely with IRB for the experiment design. The high-level goal of our measurement is to provide an end-to-end view of email spoofing attacks against popular email providers. SPF and DMARC both have some increase in the adoption rate but not very significant. About 44.9% of the domains have published a valid SPF record in 2018 (40% in 2015 [27]), and 5.1% have a valid DMARC record in 2018 (1.1% in 2015 [27]). Table 1 shows that only a small portion of the domains specifies a strict "reject" policy: 12.5% of the domains set "hard fail" for SPF, and 0.6% set "reject" for DMARC. If a domain has both SPF and DMARC policies, DMARC overwrites SPF as long as the DMARC policy is not "none".0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 ( 0 - 1 k ] ( 1 k - 1 0 k ] ( 1 0 k - 1 0 0 k ] ( 1 0 0 k -1 m ] ( 0 -1 k ] ( 1 k -1 0 k ] ( 1 0 k -1 0 0 k ] ( 1 0 0 k -1 m ] Rate SPF-Reject SPF-Other DMARC-Reject DMARC-Other DMARC SPFDomains that use DKIM also need to publish their policies through DMARC. As shown in Figure 4, for a given email provider (B.com), we set up a user account under B.com as the email receiver (test@B.com). Then we set up an experimental Figure 4: End-to-end spoofing experiment setup. We use our server E.com to send a forged email to the target email service B.com by spoofing A.com.server (E.com) to send forged emails to the receiver account. Our server runs a Postfix mail service [3] to directly interact with the target mail server using SMTP. After merging domains from the same service (e.g., hotmail.com and outlook.com) and excluding services that don't allow us to create an account, we obtained a short list of 28 email domains. We configure three profiles for the spoofed sender domain: (1) None: no SPF/DKIM/D-MARC record (e.g., thepiratebay.org); (2) Relaxed: SPF/DKIM with a "none" policy (e.g., tumblr.com); and (3) Strict: SPF/DKIM with a strict "reject" policy (e.g., facebook.com). For each profile, we randomly pick 10 domains (30 domains in total) from Alexa top 5000 domains (the detailed list is in Appendix A). We want to minimize the impact of spam filters and examine how the receivers' decision is affected by the address forgery (spoofing) alone.To this end, we configure 5 different types of email content for our study: (1) a blank email, (2) a blank email with a benign URL (http://google.com), (3) a blank email with a benign attachment (an empty text file). The email impersonates the technical support to notify the victim that her internal account has been suspended and ask her to re-activate the account using a URL (to an Amazon EC2 server). We consider 3 common email clients: (1) a web client, (2) a mobile app, and (3) a third-party email client. Note that in this section, the all experiment results reflect the state of the target email services as of January 2018. However, not all the email providers add the authentication results to the header (e.g., qq.com) Instead, we follow a more reliable method [27] by setting up an authoritative DNS server for our own domain and sending an email from our domain. 35 email providers can be grouped into 3 categories based on their protocols:• Full Authentication (16): Email services that perform all three authentication checks (SPF, DKIM and DMARC). • SPF/DKIM but no DMARC (15): Email services that check either SPF/DKIM, but do not check the sender's DMARC policy. We also set a sending time interval of 10 minutes (per email service) to minimize the impact to the target mail server. The randomized order and the slow sending speed helps to reduce the impact of the earlier emails to the later ones in the experiments.After the experiment, we rely on IMAP/POP to retrieve the emails from the target email provider. In particular, the phishing email has penetrated email providers that perform full authentications (e.g., Gmail, iCloud, Yahoo Mail) when spoofing sender domains that do not have a strict reject DMARC policy. Table 2 shows that email providers' authentication methods affect the spoofing result. In comparison, the aggregated inbox rate is much lower for email providers that perform a full authentication (39.0%) and email providers that just perform SPF/D-KIM (39.3%). However, even with a full-authentication, the inbox rate of these emails is not always 0.00 (e.g., mail.ru, fastmail.com, 163.com, 126.com, yeah.net, seznam.cz). As shown in Figure 5(a), emails that sent from a static IP has a higher chance to reach the inbox (56.9%) compared to those from a dynamic IP (33.9%). In our experiment, each email service receives 1500 emails, and we checked the inbox rate per 100 emails over time. Spoofing a sender domain with SPF/DKIM and a "relaxed" failing policy has a lower inbox rate (47.3%). However, publishing these records cannot completely prevent being spoofed, since email providers may still deliver emails that failed the SPF/DKIM authentication. On the contrary, if an email has a blacklisted URL or a known malware as the attachment, we expected more emails will be blocked (which is not our study purpose). When an email fails the authentication, most email providers (including Gmail and iCloud) would still deliver the email as long as the policy of the spoofed domain is not "reject". Based on the earlier measurement result ( §3), only 13% of the 1 million domains have set a "reject" or "hard fail" policy, which leaves plenty of room for attackers to perform spoofing.Our analysis also revealed a vulnerability in two email services (sapo.p and runbox.com), which would allow an attacker to send spoofing emails through the email provider's IP. We find that only 6 email services have displayed security indicators on forged emails including Gmail, and protonmail, naver, mail.ru, 163.com and 126.com ( Figure 6 (a)-(e)). Third-party Client.Finally, we check emails using third-party clients including Microsoft Outlook, Apple Mail, and Yahoo Web Mail. When an attacker spoofs an existing contact of the receiver, the forged email can automatically load misleading UI elements such as the contact's photo, name card, or previous email conversations. We perform a quick experiment as follows: First, we create an "existing contact" (contact@vt.edu) for each receiver account in the 35 email services, and add a name, a profile photo and a phone number (if allowed). However, when the sender address is actually spoofed, these UI elements would help attackers to make the forged email look more authentic.In addition, spoofing an existing contact allows forged emails to penetrate new email providers. seznam.cz performs full authentications but still delivers spoofed emails to the inbox. As an end-to-end study, we next examine the last hop -how users react to spoofing emails. To evaluate the effectiveness of security indicators, we design an experiment where participants receive a phishing email with a forged sender address. By controlling the security indicators on the interface, we assess how well security indicators help users to handle phishing emails securely.Implementing this idea faces a key challenge, which is to capture the realistic user reactions to the email. We frame the study as a survey to understand users' email habits. Phase1 has three purposes: (1) to make sure the participants actually own the email address; (2) to test if the tracking pixel works, considering some users may configure their email service to block images and HTML; (3) to set up the deception. The phishing email contains a benign URL pointing to our own server to measure whether the URL is clicked. As shown in Figure 8, we impersonate the tech-support of Amazon Mechanical Turk (support@mturk.com) to send the phishing email that informs some technical problems. For the comparison group with security indicator, we still recruit Yahoo Mail users for consistency, and add our own security indicators to the interface. In phase2, we cannot control if a user would use the mobile app or the website to read the email. To collect enough data points from phase 2, we need to recruit a large number of users given that many users may not open our email. In total, we recruited N = 488 users from MTurk: 243 users for the "without security indicator" setting, and another 245 users for the "with security indicator" setting. Most participants are 30-39 years old (39.1%), followed by users under 29 (31.8%), above 50 (14.5%), and 40-49 (14.5%). Most of the participants have a bachelor degree (35.0%) or a college degree (33.8%), followed by those with a graduate degree (20.7%) and high-school graduates (10.5%). In addition, we followed the recommended practice from IRB to conduct the deceptive experiment. Users who opt-out still get the full payment. First, out of all the participants that received the phishing email, the click-through rate with security indicator is 32/179=17.9%. However, this comparison is not entirely fair, because many users did not open the email, and thus did not even see the security indicator at all.In order to examine the impact of the security indicator, we also calculate the click-through rate based on users who opened the email. Table 6 shows that mobile users are more likely to click on the phishing link compared with desktop users, but the difference is not significant.Demographic Factors.In Figure 9, we crossexamine the results with respect to the demographic factors. For "education level", we divide users into High-Edu (bachelor degree or higher) and Low-Edu (no bachelor degree). In addition, we discuss the new changes made by the email services after our experiment, and our future research directions. Despite the efforts of the Internet Engineering Task Force (IETF), these protocols still have limitations to handle special email scenarios such as mail forwarding and mailing lists, creating further obstacles to a wide adoption [40,19,37]. Further research is needed to ease the deployment process and help to avoid disruptions to the existing email operations [15]. In addition, if the email providers decide to deliver an unverified email to the inbox, we believe it is necessary to place a security indicator to warn users based on our user study results. Another example is that Google Inbox (web) users are less protected compared to users that use Gmail's interface.Finally, the misleading UI elements such as "profile photo" and "email history" should be disabled for emails with unverified sender addresses. ARC proposes to preserve the email authentication results through differ- ent sending scenarios. Second, the new mobile Gmail app no longer displays the "misleading" profile photos on unverified messages (regardless spoofing existing contact or the same-domain account). Open Questions.It is unlikely that the email spoofing problem can quickly go away given the slow adoption rate of the authentication protocols. Finally, user training/education will be needed to teach users how to interpret the warning message, and handle questionable emails securely. Future work is needed to cover more variables to explore the design space such as the wording of the warning messages, the color and the font of the security indicator, the phishing email content, and the user population (e.g., beyond the MTurk and Yahoo Mail users). Finally, we use "clicking on the phishing URL" as a measure of risky actions, which is still not the final step of a phishing attack. Recently, researchers conducted detailed measurements on the server-side usage of these protocols [23,27,34,36]. Unlike prior work, our work shows an end-to-end view and demonstrate the gaps between server-side spoofing detection and the user-end notifications. Security Indicators are commonly used in web or mobile browsers to warn users of unencrypted web sessions [25,39,61,49], phishing web pages [21,24,69,70], and malware sites [7]. Existing work shows that users often ignore the security indicators due to a lack of understanding of the attack [69] or the frequent exposure to false alarms [43]. For the few email services that implemented security indicators, we show that security indicators have a positive impact on reducing risky user actions under phishing attacks but cannot eliminate the risk. We hope the results can help to draw more community attention to promoting the adoption of SMTP security extensions, and developing effective security indicators for the web and mobile email interfaces. However, it gives the attacker a static and reputable IP address. Again, despite the sender address (contact@vt.edu) is spoofed, Zoho still loads the contact's photo from its internal database. We find that 2 email services "sapo.pt" and "runbox.com" are not carefully configured, allowing an attacker to piggyback on their mail servers to send forge emails. However, it gives the attacker a static and reputable IP address. Again, despite the sender address (contact@vt.edu) is spoofed, Zoho still loads the contact's photo from its internal database. In addition, users can check the recent email conversations with this contact by clicking on the highlighted link.