The Public Key Infrastructure (PKI) protects users from malicious man-in-the-middle attacks by having trusted Certificate Authorities (CAs) vouch for the domain names of servers on the Internet through digitally signed certificates. Finally, we propose and evaluate two countermeasures to secure the PKI: 1) CAs verifying domains from multiple vantage points to make it harder to launch a successful attack , and 2) a BGP monitoring system for CAs to detect suspicious BGP routes and delay certificate issuance to give network operators time to react to BGP attacks. While these advances can defend against some attacks, none of them help to secure domain control verification against network-level adversaries, i.e., Autonomous System (AS), that can manipulate the Border Gateway Protocol (BGP). Such adversaries can launch active BGP hijack and interception attacks to steal traffic away from victims or CAs, and spoof the domain control verification process to obtain bogus certificates.In this paper, we first analyze and compare BGP attacks on the domain verification process to develop a taxonomy and present a highly effective use of the "AS-path poisoning" attack originally performed in [39]. Our main contributions are as follows:Active BGP Attacks on Domain Verification Pro-cess: We performed five types of real-world BGP attacks (against a domain we owned running on an IP prefix we controlled) during the domain verification process: 1) a traditional BGP sub-prefix attack, 2) a traditional BGP equally-specific-prefix attack (like the attack theorized in [22]), 3) a prepended BGP sub-prefix attack, 4) a prepended BGP equally-specific-prefix attack, and 5) a BGP AS-path poisoning attack (see section 2.2 for details about these attacks). We successfully obtained bogus certificates from all of the top five CAs (Let's Encrypt, GoDaddy, Comodo, Symantec, GlobalSign) [8] in our real-world attacks. • Live BGP Monitoring System: We design and implement (in the Let's Encrypt's CA) a monitoring system with a novel route age heuristic to prevent short-lived BGP attacks [19] that can quickly lead to a bogus certificate before the attack is noticed. The Public Key Infrastructure (PKI) requires that all certificates be signed by a trusted certificate authority (CA). In order to verify that an applicant requesting a certificate has control of the domain in question, the CA must perform domain control verification through a set of methods. When the CA verifies the network resources via an HTTP GET request in step (5), the adversary can use BGP attacks to hijack/intercept the traffic to the victim's domain such that the CA's request will be routed to the adversary instead. Given this adversary model, we aim to assess the current degree of vulnerability of the PKI.Realistic Constraints on Adversary Capabilities: An adversary must compromise an AS's border router or control an AS to launch the attack. The topological relationship between the adversary, the victim, and the CA, and the benign BGP announcement for the IP prefix that includes the victim's domain are considered beyond the control of adversary.Despite these constraints, we assume adversaries can control exactly what BGP announcement they make and which neighboring ASes they make this announcement to. Even a strictly filtered adversary can spoof packets by gaining control of a client in one of these networks that allow spoofing and use it to spoof packets on behalf of the adversary.Another variable the adversary can control is which IP address to attack. The adversary can intercept the response of the victim (or a DNS server used to resolve the victim's IP) to the CA, modify it to contain the document specified by the CA (or an incorrect DNS response), and forward it to the CA. We present the details of the following five attacks, and discuss the tradeoff between attack stealthiness and viability for each attack:• Traditional sub-prefix attack: An adversary makes a BGP announcement originating a morespecific IP prefix than the victim's prefix. • Traditional equally-specific-prefix attack: An adversary announces an equal-length prefix as the victim's prefix. We later use these observations to asses the vulnerability of the PKI to BGP attacks of varying levels of stealthiness in Section 4. The majority of domains use IP prefixes shorter than the maximum /24 (shown in Section 4.2), which allows an attacker to announce IP sub-prefixes without being filtered (many ASes filter announcements longer than /24 [9]). Thus, although an adversary could easily get a certificate before the attack is detected (as we will show in Section 3, several CAs will sign a certificate seconds after domain control verification and these attacks can last for several hours), the rapid detection of this announcement would reduce the damage the bogus certificate could do. Attack Methodology: An adversary aiming to increase stealthiness (or attack a domain running in a /24 prefix so a sub-prefix attack is not viable) may launch an equally-specific-prefix hijack [22]. We will further quantify the viability of this attack in Section 4.3.1. Attack Stealthiness: In the control plane, this attack is more stealthy than a traditional sub-prefix hijack because parts of the Internet will not hear the adversary's announcement. Attack Viability: The viability of this attack is identical to that of the traditional sub-prefix hijack attack because routers always prefer a more specific BGP announcement over a less-specific one regardless of the AS-path field. Because the adversary is now announcing the same prefix as the victim with the same origin ASN, this attack is has a significant increase in stealthiness over all previously listed attacks.Attack Viability: This attack is even less viable than a traditional equally-specific prefix hijack. Because the adversary's route is made one hop longer by prepending the victim's ASN, the adversary's announcement will attract less traffic than it does in the traditional equally-specific prefix hijack. Attack Methodology: While all previous attacks have involved breaking data-plane connectivity to a victim's domain (either global or partial), we here present an attack that uses AS-path poisoning to maintain a valid route to the victim's domain. These ASes would still prefer the victim's original announcement, and thus route R is still a valid route to the victim. Thus, the entire Internet (with the exception of the ASes on route R) routes traffic destined to the victim's domain to the adversary, and the adversary can still forward all the traffic through to the victim via a valid route without breaking data-plane connectivity.Attack Viability: This attack can be performed by any multi-homed AS against a domain on a prefix shorter than /24. This ensures that there is no connectivity issue from the victim's perspective while a full man-in-themiddle attack is under way on TLS connections.This attack also has a high degree of stealthiness in the control plane. In this experiement, we will consider a victim server in Ohio that is connected to a mux in the Los Nettos Regional Network in Los Angeles over a VPN tunnel, and an adversarial server sited in London that is connected to a mux at the Amsterdam Internet Exchange over another VPN tunnel (shown in Figure 3). We left the victim's network configuration untouched, and then used the adversarial server in London to make malicious BGP announcements for a more specific /24 prefix containing the victim's domain through the mux at the Amsterdam Internet Exchange. We subsequently approached leading certificate authorities and requested a certificate for the victim's domain. Next, we set up a static route to forward all traffic destined to the victim's prefix to the next hop we had recorded (the only traffic that did not match this rule was traffic from the IP used by a CA for domain control verification). The traffic from the CA's server was not forwarded to the victim and was instead answered by the adversary's server, allowing us to obtain a trusted TLS certificate with no impact on the victim's connectivity. For each CA, we launched a sub-prefix hijack attack against a victim's HTTP server (for HTTP verification) or Email server (for email verification) depending on the verification method preferred by the CA. All CAs signed our requests with no direct human interaction, 2 allowing for an adversary to obtain a certificate very rapidly. While performing these experiments, we made sure to not harm or interfere with the operations of real users or real web sites by following three important guidelines: 1) We only requested certificates for domains we registered strictly for the purpose of this experiment. By following these guidelines, our experiments used real Internet infrastructure but did not affect any real users.In this section, we demonstrate real-world BGP attacks that successfully obtain bogus certificates from the five largest CAs. To gather data about TLS domains, we scraped the Certificate Transparency logs through crt.sh [4] and resolved the domain names in the common name field of certificates to an IP address. 4 We then map the IP address to the IP prefix and origin AS using Level3's routing table from the time the certificate was issued (see Section 5.2.1 for an explanation of our use of historical BGP data). That said, our data shows that 72% of domains (1.3 million in our dataset) requesting certificates ran on prefixes shorter than /24 at the time of requesting certificate. 4 Wildcard certificates were ignored because some CAs require DNS verification for wildcard certificates [5] and thus do not contact the server running at the domain's A record.5 To ensure our sample was representative, we obtained another sample of certificates directly from Let's Encrypt's logs (the CA most affected by the rate limiting) and compared the distribution of prefix lengths and originating ASes. In addition, Comodo and GoDaddy operate their own ASes, meaning that running the verification servers on a /24 IP prefix would require only an update in routing policy. For CAs that do not control their own BGP announcements, we recommend negotiations with the relevant ISPs because running domain control verification servers on /24 IP prefixes has a sizable security benefit with little additional cost as explained in Section 2.2.1. We perform the path inference based on (1) local preference of customer routes over peer routes over provider routes and (2) shortest AS path as outlined by Gao et al. [21]. We can see that 50% of the domains have resilience values lower than 57%, meaning that if an adversary selects a random CA to issue a certificate for these victim domains, there would be at least 43% probability that the adversary would be able to launch an equally-specific-prefix hijack and obtain the bogus certificate from that CA. 50% of the domains have resilience values lower than 30%, meaning that if an adversary targets one of the ten CAs to issue a certificate for these victim domains, there would be at least 70% probability that the adversary would succeed. We show the average resilience in the last row in Table 4 for the five CAs that we attacked in Section 2. In this section, we present two countermeasures that can be deployed by CAs to mitigate these attacks: multiple vantage point verification and BGP monitoring system.To test the effectiveness of these countermeasures, we developed our own implementation of both countermeasures in the Let's Encrypt code base and relaunched the attacks in an attempt to fool our modified CA. As discussed in Section 2.2, equally-specific-prefix attacks and AS-path poisoning attacks do not affect the whole Internet. We provide an adapted proposal on the Email verification method in Appendix B. Given limited resources available for deploying vantage points, we need to strategically select the vantage points to maximize the security. The algorithm requires a set of customer domains (in our case, domains from our dataset of certificates), and a list of candidate vantage points (e.g., data centers where the CA can potentially deploy vantage points). We first compute the resilience of each sample domain from each vantage point in the set, as explained in Section 4.3. To increase the likelihood of finding a global maximum, our algorithm repeats the above steps with random initial vantage points to find as many local maximum as possible.We found that there is a roughly 18% chance that a local maximum found by the script will be the global maximum we eventually found (when considering a set of five vantage points chosen from 1,000 candidate vantage points). The baseline is 1 Vantage Point, where the CA only performs domain control verification from its own existing AS/data center without any additional vantage points (in Let's Encrypt's case, the ViaWest data center AS 13649 is the fixed vantage point). Note that this evaluation considers the domains as the target of BGP attacks, whereas resiliences shown Table 4 considers the CAs as the target. Our work was a key factor in Let's Encrypt's preliminary deployment of multiple vantage points in their staging environment, which is used for testing features before full release in the production environment [37]. Thus, in the full release, the Let's Encrypt team plans to improve AS-level diversity by deploying more vantage points in distinct ASes located in different parts of the Internet topology.Handling anomaly. Furthermore, strategic attackers can target vantage points that may be able to observe the attack, and launch DoS attacks against the target to make it time out.Given the tradeoff between a strong security guarantee and false positives in the event of a network failure, we propose that (1) there be a limit on the total number of vantage points allowed to time out, and (2) at least one vantage point in each AS where vantage points are deployed be required to send a response. However, such a leak could allow an adversary to obtain a bogus TLS certificate. A larger minimum time allows network operators more time to shutdown a potential BGP attack but will clearly cause CAs to delay signing a larger number of certificates that are coincidently based on very recent routes. Our algorithm computes the age based on 1) how long any route to a given prefix had been seen (network age) and 2) how long each hop in the route to that prefix had been seen. To compute the age of each hop, we constructed an SQL database containing, for each prefix, the last seen AS path and a list of timestamps indicating when each AS was added to that path. We combined the 1.2 million certificates from Let's Encrypt in our dataset with historical BGP data. If a BGP update had a timestamp greater than the timestamp of the oldest unprocessed certificate, we would look up the resolved IP address from the certificate in our database and find the longest prefix match. Gavrichenkov performed a preliminary exploration of BGP attacks on TLS [22], which only considered the most basic traditional subprefix and equally-specific-prefix hijacks. However, no previous work has applied these BGP attacks to target encrypted communications.BGP defenses have been studied in both general and application-specific forms. However, BGPSec is not deployed and researchers have shown that partial BGPSec deployment does not bring significant security improvement [35]. We adapt this idea to the PKI by developing a more complex measurement of age and recommending CAs not use new routes during domain control verification.Sun et al. developed an application-specific BGP monitoring system to protect the Tor network that includes a similar analytic using route age [43]. DNSSEC [14] provides additional security to the existing PKI by preventing network attacks on DNS-based domain control validation methods through cryptographic signatures on DNS responses. Our analysis shows that the vast majority of domains are vulnerable to a sub-prefix or equally-specific-prefix attack that an adversary can use to obtain a bogus certificate. Overall, our work is the first work to develop a taxonomy of BGP attacks on on PKI (and demonstrate these attacks in the real world), and the first to propose realistic countermeasures that have already started being adopted by CAs.Intentional route leaks are not viable in many situations even when several CAs can be targeted. However, these attacks are effective at capturing traffic in a localized portion of the Internet topology, and if an adversary is very topologically close to a CA (or happens to have favorable business relations) the attack is viable.The viability of this attack increases significantly if we assume an adversary has complete administrative control of an AS (as opposed to only the technical ability to make announcements). In addition, this route leak would not be globally visible and would only influence ViaWest and its clients. We believe this creation of peering links to change the Internet topology in an adversary's favor merits further study that uses both network analysis and studies of business practices to understand and counter this vulnerability.We were not able to launch an intentional route leak because of guidelines imposed by the peering framework on the number ASes that can be prepended to an announcement. Using the NTT looking glass and our mux in the Los Nettos Regional Network, we confirmed that the adversary's announcement had not propagated globally (e.g. to NTT's network) and instead had only propagated to the customers of Hurricane Electric (e.g. the Los Nettos Regional Network). Thus, this announcement to Microsoft has such limited propagation that a vantage point within Microsoft's network is needed for the attack to be detected.While we used a non-trusted CA for this experiment, it would still be reasonable for an adversary to launch this attack against a trusted CA given: 1) a broader selection of CAs than we explored and 2) the ability of an adversary to construct peering connections with potential target ASes. Had Amazon instead of Microsoft been a peer available for us to make an announcement, we would have been able to gain a trusted certificate while only propagating a route to a single organization.A variant of this attack we did not perform is the use of BGP communities to limit propagation. We would also like to thank Let's Encrypt for their partnership, which has lead to the first implementation of multiple-vantage-point verification and has provided us with crucial data to support this research. A naive implementation of the multiple vantage point verification for emails would be to have multiple locations on the Internet send emails and have the users prove that they received all of the emails. The CA breaks up the secret information that needs the domain owner's action (e.g. verification URL) into several pieces so that there is at least one piece for each vantage point.2. A naive implementation of the multiple vantage point verification for emails would be to have multiple locations on the Internet send emails and have the users prove that they received all of the emails. The CA breaks up the secret information that needs the domain owner's action (e.g. verification URL) into several pieces so that there is at least one piece for each vantage point.2.