Specifically, on-path devices could spoof the IP addresses of user-specified DNS servers and intercept the DNS queries surreptitiously , introducing privacy and security issues. In this paper, we perform a large-scale analysis of on-path DNS interception and shed light on its scope and characteristics. Previous studies have shown that rogue DNS resolvers [38,42], DNS transparent proxies [41,55] and unauthorized DNS root servers [27] can damage integrity and availability of Internet communication.In this work, we study an emerging issue around DNS, the hidden interception of the DNS resolution path (DNSIntercept) by on-path devices, which is not yet thoroughly studied and well understood by previous works. However, we find on-path devices intercept DNS queries sent to public DNS, and surreptitiously respond with DNS answers resolved by alternative recursive nameservers instead. The on-path devices spoof the IP addresses of the users' specified recursive nameservers in the DNS responses (e.g., replacing the resolver IP address with 8.8.8.8 of Google Public DNS), so users will not be able to notice that the DNS resolution path has been manipulated.The purposes of DNS interception include displaying advertisements (e.g., through manipulation of NXDOMAIN responses [56]), collecting statistics, and blocking malware connections, to name a few. However, such practices can raise multiple concerns: (1) The interception is not authorized by users and is difficult to detect on the users' side, which leads to ethical concerns; (2) Users have higher risks to put the resolution trust to alternative recursive DNS servers, which often lack proper maintenance (e.g., equipped with outdated DNS software), compared to well-known public DNS servers; (3) Certain security-related functionalities are affected or even broken, e.g., some alternative DNS resolvers do not provide DNSSEC.In this paper, we conduct a large-scale analysis of DNSIntercept. For Global analysis, we use a residential proxy network based on TCP SOCKS (not HTTP) which provides 36,173 unique residential IP addresses across 173 countries. We obtain DNS traffic over both UDP and TCP from 112,305 IP addresses (across 356 ASes), mainly within China.To verify interception of DNS traffic, we register a set of domains (e.g., OurDomain.TLD), and use the authoritative nameservers controlled by us to handle resolutions. By checking whether the IP address belongs to the originally requested public DNS service, we can learn whether the DNS resolution is intercepted by an alternative resolver. • Among the 3,047 ASes that we investigate, DNS queries in 259 ASes (8.5%) are found to be intercepted, including large providers, such as China Mobile. • DNS servers used by interceptors may use outdated software, e.g., all 97 DNS servers that we identify install old BIND software which should be deprecated after 2009, and are vulnerable to attacks like DoS [6]. Then we introduce our threat model of DNSIntercept, with a taxonomy of interception paths according to our observation. As a example, www.example.com is an FQDN, and its corresponding TLD and SLD are com and example.com.When a client requests resolution of a domain, the resolution is typically executed by a recursive DNS resolver at first, which can be either assigned by ISP or specified by Internet users. Illustrated in Figure 1, the recursive resolver iteratively contacts root, TLD and SLD nameservers to resolve a domain name, and eventually returns the answer to the client. Therefore, from a client's perspective, DNS responses appear to come from the original DNS resolvers according to their source addresses, making the actual interception behaviors difficult to be discerned.By default, in order to handle DNS requests, Internet users are assigned with local DNS resolvers by ISPs. We aim to measure and characterize DNSIntercept through large-scale data analysis. Figure 3 presents the paths of DNS requests in the four DNS resolution mechanisms. A DNS query sent by client only reaches the specified resolver, without being modified by any on-path device. However, the request is replicated by on-path devices, and handled by an alternative resolver at the same time.Consequently, the authoritative nameserver receives two identical requests from the user-specified resolver (i.e., in-band request) and the alternative resolver (i.e., out-of-band request [46]). Similar to request redirection, user's DNS request is redirected by the on-path device to an alternative resolver, without reaching the specified resolver. Nevertheless, we acknowledge that other interceptors cannot be completely removed, due to the limitations of our methodology and vantage points. On the other hand, AV software may intercept DNS queries as well, in order to prevent DNS requests of their clients from being hijacked. Similar to the AV setting, users are required to point their DNS resolvers to the proxy's resolver.Since the mapping between the IP addresses of resolvers and their owners is unknown to us, alternative resolvers owned by parties other than ISPs, like AV and enterprise resolvers, can be included by our study. Then, we elaborate the details of each component of our measurement framework and how we obtain a large volume of globally distributed vantage points. We (1) instruct a client to send a DNS request about one of our controlled domains to a public resolver A; (2) record its corresponding request at our authoritative nameservers, which originates from recursive resolver B; and (3) compare A with B. Otherwise, for each request sent by the client to public resolver A that gets a valid response, if (1) no corresponding request is captured by authoritative nameservers, we regard it as Direct responding; if (2) a single request not from resolver A is captured, we regard it as Request redirection; if (3) multiple identical requests from resolvers, one of them being A, are captured, we regard it as Request replication. As will be discussed in Section 3.2, the two issues are addressed by uniquely prefixing each requested domain name.Thirdly, the clients in our study should be diverse, being able to send DNS packets directly to specified public resolvers, even when local DNS resolvers have been assigned by ISPs. The measurement infrastructure used by previous works, including advertising networks [33], HTTP proxy networks [19,36,37,52] and Internet scanners [42,48], do not meet the requirements. On this basis, we elaborate our methodology regarding how DNS requests are generated and how egress IPs of public DNS services are identified. Investigating all public resolvers would take a tremendous amount of time and resources, so we narrow down to three representative and widely-used public DNS services according to Alexa traffic ranking [57], including Google Public DNS [12], OpenDNS [22] and Dynamic DNS [9]. As for resource record (RR), five kinds of security-related records are considered [43], including A, AAAA, CNAME, MX and NS. For instance, when a client launches a DNS A-type request for UUID.Google.OurDomain.TL D, this request is supposed to be handled by Google Public DNS. Under Request replication scenario, a client receives an in-band response and an out-of-band response. For instance, once receiving an A-type request, the response is an IPv4 address converted from the hash value (using the last 32 binary bits of the hash). Our next task is to identify whether a source IP contacting our authoritative nameservers belongs to a public DNS service, i.e., is an egress IP. As such, we need to infer the ownership.Previous studies leveraged IP WHOIS data and information from public forums [37,49] to identify egress IPs, which are not sufficiently accurate when examined on our data. As an example, responses from reverse lookups of egress IPs of Google Public DNS are all dns-admin.google.com. The SOA record of this domain name is ns0.dynamicnetworkservic es.net, hence we regard 45.76.11.166 as an egress IP of Dynamic DNS.Using this method, we are able to infer ownership of 85% addresses that contact our authoritative nameservers. As discussed in Section 2.3, our methodology may not be able to accurately distinguish whether an interception is caused by network operators or other interceptors. Secondly, by configuring fake PTR and SOA records for alternative resolvers, their egress IPs will not be correctly identified. To this end, we first leverage a residential proxy network based on TCP SOCKS which allows us to directly send DNS packets from globally-distributed clients, to depict a global landscape of DNSIntercept (this phase is named Global analysis). As clients in this experiment are mainly from China, we named it China-wide analysis. ProxyRack has recruited more than 100K nodes [14], so we are able to send DNS requests from nodes distributed globally to public resolvers, and verify the responses, both by interacting with the Super-proxy. The software has been granted the permission to send arbitrary network requests when installed, so we are able to collect finegrained DNS data.The major concerns of this experiment are around ethics and privacy, and we carefully address these concerns as briefly described below (more details are covered in Section 3.5). According to our inception model described earlier, to generate as diverse DNS packets as possible, we should launch DNS requests from a client under all four different SLDs, of all five RR types, over both TCP and UDP, and to all four public DNS services. However, we believe it is difficult due to ethical concerns and limitations of vantage points.In the phase of Global analysis, ProxyRack only accepts TCP traffic. Table 1 summarizes our collected dataset in both phases. Through launching DNS requests from clients, monitoring DNS queries on authoritative nameservers and capturing DNS responses, we are able to "connect the dots" for each DNS resolution. In China-wide analysis, the clients we obtain are mostly from China, but still span 87 different countries. Therefore, launching DNS requests from ProxyRack adheres to the granted permission from owners of exit nodes.In China-wide analysis, we implement our measurement script in a network debugger module of security software with millions of users. Meanwhile, we only launch DNS lookups of domain names exclusively registered and used for this study on each client, without connecting to any host except for DNS resolvers.Through said approaches, we believe we have minimized the threat to user's privacy and security in the experiments, as all operations are under granted permission from users, and we do not collect any data except for DNS resolutions under the limited scope. Here, we report our measurement results and analysis in the phase of Global Analysis, by showing its landscape and characteristics. In total, 198 (out of 2,691, 7.36%) client ASes witness intercepted traffic, in 158 of which queries to Google Public DNS are intercepted. Moreover, we also find that compared to the less-known EDU DNS (0.45% packets intercepted), DNS traffic sent to renowned public DNS services are more likely to become victims of DNSIntercept (e.g., 0.66% for Google DNS). Among 23 ASes where replicated queries are found, only clients in 2 of them (AS9198 JSC Kazakhtelecom, and AS31252 StarNet Solutii SRL) receive in-band responses. Both Request redirection and Request replication are found in top ASes.Regarding interception ratio, we find that 82 (52%) of all 158 problematic ASes intercept more than 90% of DNS requests sent to Google, such as AS38001 and AS43554. Russia tops the list and accounts for 44 ASes (28%), followed by the US (15 ASes, 9%), Indonesia (8 ASes, 5%), Brazil and India (7 ASes each, 4%). For each of top 10 ASes with most intercepted requests, Table 4 shows their alternative resolvers which handle the resolution. We can conclude that for top 10 ASes, alternative resolvers actually locate in the same AS as the clients. Among our 13,466 DNS requests sent from this AS to Google DNS, 72 (0.53%) are redirected, with alternative resolvers outside Google actually contacting our authoritative nameservers. • As for interception scenarios, Request redirection and Request replication are both found in top 20 ASes with most intercepted requests to Google DNS. Moreover, it is found that an interceptor can exclusively intercept DNS traffic sent to specific public DNS services (e.g., Google Public DNS). In order to learn more characteristics about DNSIntercept, we design another experiment called China-wide analysis. For instance, 27.9% DNS requests sent to Google Public DNS over UDP are redirected or replicated, the ratio being only 7.3% when it is through TCP.In fact, most of DNS requests in the real world are over UDP, and intercepting UDP traffic is technically easier. For instance, 27.9% UDP-based DNS packets sent to Google are intercepted, the ratio being 9.8% for our in-house EDU DNS. Meanwhile, we notice in Table 5 that for Request replication, clients receive no in-band responses of CNAME, NS or MX-type requests. We speculate that on-path devices, while replicating requests, block responses of the three RR types from public DNS services, reiterating the unethical nature of the interception behavior. 1.50% org 954,221 83.60% 14.90%1.50% club 948,707 83.60% 14.90%1.50% As claimed by one large ISP [24], DNSIntercept is designed for improving the performance of DNS lookups, and we would like to investigate whether this is true. As for Request replication, when DNS requests are sent over UDP by clients, performance improvement does exist, with more requests of shorter RTT compared to Normal resolution. In total, out-of-band requests of 14,590 resolutions (84.63%, of 17,239 replicated requests) arrive at our authoritative nameservers faster than in-band ones. While replicated requests from most ASes arrive faster, in AS4812 (China Telecom Group), all out-of-band requests lag behind. As illustrated in Section 3.2, TTL values returned by our authoritative nameservers are randomly selected from 1 to 86400. Though small in quantity, we do observe cases where clients accept answers with tampered DNS records (including A, AAAA and MX), shown in Table 8. As an example, 8 responses from Google Public DNS are tampered in AS9808 (Guangdong Mobile), pointing to a web por- tal which promotes an APP of China Mobile. In the end, we find that three wellknown router manufacturers (Cisco [4], Panabit [23], and Shenxingzhe [8]), three companies (ZDNS [26], Haomiao [7], Ericsson [21]) and one software platform (DNS traffic redirecting system of Xinfeng [24]) support DNSIntercept. This conclusion conflicts with improving DNS security using DNSIntercept, since out-of-band public DNS services are not treated equally as untrusted resolvers. As discussed in Section 5.2, we find that Request replication does shorten the RTT of DNS lookups, while the influence of Request redirection is uncertain. Therefore, DNSIntercept only brings limited improvement to DNS lookup performance.Reducing financial settlement. • We speculate the motivations of DNSIntercept include reducing financial settlement and improving performance of DNS lookups, instead of improving DNS security. Among the 205 public alternative resolvers, only 88 (43%) accept DNSSEC requests; those actually validating DNSSEC requests could be less. As such, the wide deployment of this initiative could take a long time.Based on our observation, we developed an online checking tool [25] to help Internet users detect DNSIntercept. A user visiting our checking website will issue a DNS request to our domain, and the request is captured by our authoritative nameserver. Results showed many countries have deployed DNS censorship capabilities, include China, Pakistan, Egypt, Iran and Syria [28,29,30,31,32,44,45,58]. Our study serves as a complement to these existing works in understanding the security issues in DNS ecosystem.Compared to previous researches, our work gives a systematic and large-scale research on DNSIntercept, a class of DNS behavior that has not yet been well-studied, and highlights issues around security, privacy, and performance. Our results indicate that the hidden DNSIntercept can potentially introduce new threat in the DNS eco-system, and new solutions are needed to address the threat.