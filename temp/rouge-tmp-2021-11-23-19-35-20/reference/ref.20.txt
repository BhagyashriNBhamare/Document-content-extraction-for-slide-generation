However, DNSSEC can operate only if each of the principals in its PKI properly performs its management tasks: authoritative name servers must generate and publish their keys and signatures correctly, child zones that support DNSSEC must be correctly signed with their parent's keys, and resolvers must actually validate the chain of signatures. For example, we found that 31% of domains that support DNSSEC fail to publish all relevant records required for validation; 39% of the domains use insufficiently strong key-signing keys; and although 82% of resolvers in our study request DNSSEC records, only 12% of them actually attempt to validate them. Unfortunately, DNS has long been fraught with security issues such as DNS spoofing and cache poisoning [3,28,46] To address these problems, DNS Security Extensions (DNSSEC) [20] were introduced nearly two decades ago. Widely-used DNS resolvers now attempt DNSSEC validation by default, e.g., as of January 2012 Comcast (one of the largest ISPs in the US) requests and validates DNSSEC records for all queries [32], and Google (which operates the largest public DNS resolver) did the same in March 2013 [22]. On the client side, mismanaged or buggy DNS resolvers can obviate all server-side efforts by simply failing to catch invalid or missing signatures.Surprisingly little is known about how well the DNSSEC PKI ecosystem is managed. What has made large-scale, longitudinal studies of DNSSEC so challenging is a dearth of DNSSEC record datasets and a lack of vantage points from which to repeatedly measure resolver behavior.In this paper, we present a comprehensive study of the entire DNSSEC ecosystem-encompassing signers, authoritative name servers, and validating DNS resolversto understand how DNSSEC is (mis)managed today. To study client-side behavior, we leverage the Luminati HTTP/S proxy service [35], which allows us to perform repeated, controlled tests from 403,355 end hosts-thereby studying 59,513 distinct DNS resolvers-around the world.Our analysis reveals troubling, persistent mismanagement in the DNSSEC PKI:â€¢ First, we find that nearly one-third of DNSSECenabled domains produce records that cannot be validated due to missing or incorrect records. 39% of domains use weak Key Signing Keys (KSKs), and over 90% of domains use weak Zone Signing Keys (ZSKs). To this end, we publicly release all of our analysis code and data (where possible 2 ) to the research community at https://securepki.org thereby allowing other researchers and administrators to reproduce and extend our work. We begin by presenting an overview of both DNS and DNSSEC.DNS and DNSSEC DNS uses records to map domain names to values (e.g., an A record maps a domain name to an IPv4 address; an NS record maps a domain name to the authoritative name server for a domain). Typically, each zone uses two DNSKEY records to sign DNS records, as discussed below.RRSIG (Resource Record Signature) records, which are cryptographic signatures of other records. Each RRSIG is a signature over all records of a given type for a certain name; this set is called an RRSet.For example, all A records for example.org will be authenticated by a single RRSIG (i.e., the example.org A RRSIG). Should the resolver also need DNSKEYs to validate the record, it may need to request them separately.DNSSEC keys Unlike other common PKIs (e.g., the SSL/TLS PKI [34]), each zone in DNSSEC typically has two public/private key pairs: one called a Key Signing Key (KSK) and another called a Zone Signing Key (ZSK). In contrast, the ZSK is used to produce the RRSIGs for all other record types.There is no key revocation (apart from root authorities) in the DNSSEC PKI 4 ; rather, to mitigate potential effects of key compromise, ZSKs are intended to be rolled over (i.e., replaced) daily or weekly, and the KSKs monthly or yearly (the intention is that the KSK can be stored separately from, and in a safer location than, the ZSK). The resolver can then validate the child zone's DS record (and thereby the child zone's KSK) using the RRSIG for the DS records in the root zone, as this is signed with the root zone's ZSK. In this section, we discuss related studies of the DNSSEC ecosystem, covering both server-(DNSSEC domain) and client-side (DNS resolver) studies.DNSSEC domain deployment As the DNSSEC deployment has grown, researchers and industrial practitioners have examined the DNSSEC ecosystem. Similarly, Dai et al. [14] found that 19.46% of second-level domains from the Alexa Top-1M had an invalid chain of trust from the root.Our study extends these prior works in three ways. DNS resolvers Researchers have also studied whether resolvers request and validate DNSSEC records. jp ccTLD authoritative name server to measure the portion of resolvers requesting DS and DNSKEY records; they found that 50% of the resolvers requested such records. As we show later in this paper, many resolvers do not bother to validate responses.Active techniques Other approaches issue DNS queries from clients deployed in large numbers of networks, e.g., using dedicated hardware (e.g., RIPE Atlas devices [45]) or software running on web clients (e.g., Java applets [27]). We begin our analysis of the DNSSEC PKI by focusing on the deployment and management of DNSSEC records by domains, and how this has changed over time.We perform a longitudinal analysis of nearly 150M domains to answer questions that include: 1) how widely is DNSSEC deployed; 2) when deployed, how often are DNSSEC records correctly published and managed; and 3) how are DNSSEC cryptographic keys managed and maintained, and what is their impact on security? Our goal in this section is to conduct a large-scale, longitudinal, and detailed study of DNSSEC adoption and deployment at authoritative DNS servers. Taken together, our dataset represents the largest and most comprehensive known set of DNSSEC observations of authoritative DNS servers.Daily scans Our dataset includes measurements from OpenINTEL [43,52], a project that conducts daily crawls of DNS records for a large number of domains listed in TLD zone files. org TLD zone files, which contain the Name Server (NS) and Delegation Signer (DS) records for an average of over 147M second-level domains. org Figure 2: CDF of the TTL of DNSKEY records for . The figure shows that more than 63% of records have a TTL of less than one day, meaning the daily scans can potentially miss a large fraction of key replacement operations.To address this limitation, we collect a second dataset using hourly queries, based on the observation that 97% of observed domains have a TTL of one hour or more. For efficiency, we focus only on domains that have a DS record in the TLD zone (i.e., domains that may have correctly deployed DNSSEC, as a DS record is a necessary but not sufficient condition for validity). Note that having a DNSKEY record published does not by itself imply that the domain has correctly deployed DNSSEC; there could be other missing records or invalid signatures. org second-level domains that publish at least one DNSKEY record. One key observation is that DNSSEC deployment is rare: between 0.6% (. org, the fraction rose from 0.75% in March 2015 to over 1.0% in December 2016, even though the number of second-level domains in these TLDs is growing as well (e.g., the . In addition, starting on December 16th, 2016, a significant number of new domains enabled DNSSEC, all of which used domainnameshop.com as their authoritative name server.This observation suggests that a small number of authoritative name servers are responsible for most of the growth in DNSSEC deployment. Thus, incentivizing authoritative name server operators to deploy DNSSEC may end up having a large impact on future growth. se ccTLDs incentivize secondlevel domains to deploy DNSSEC by offering lower registration costs; these second-level domains are tested every day by the registry to ensure they have correct DNSKEYs, RRSIGs, and DS records [37]. Recall that properly deploying DNSSEC for a domain means that it must have a DS record in the parent zone, DNSKEY records, and RRSIG records for every published record type. Recall from Section 2 that the Delegation Signer (DS) record, which contains a hash of the domain's KSK, is essential to establish a chain of trust from a parent to a child zone. 7 Domains 7 CDNSKEY and CDS can partially reduce the burden of doing manual secure delegation [31] by allowing a domain owner to directly provide the DS record to the registry; unfortunately, we know of no TLDs that fail to upload a correct DS record are not signed by the parent and therefore cannot be validated, even if they provide correct RRSIGs for all of their records.We begin by examining the percentage of signed domains that fail to upload a DS record using the Daily dataset ( Figure 5). Specifically, we identify the name servers that are authoritative for the largest number of signed domains from our latest snapshot (December 31st, 2016), and calculate the fraction of their domains that are missing a DS record (a name server can be authoritative for multiple domains if they are managed by the same organization). org domains with missing DS records in August 2016 was due to a single registrar (hyp.net) publishing 11,026 new signed domains, all with proper DS records (the same set that was observed in Section 4.2). We find a surprisingly high fraction of missing SOA RRSIGs (1.7%, on average), and a lower fraction of missing DNSKEY RRSIGs (0.2%, on average). Domain Monster finally started publishing 8 Interestingly, three of these hosting providers (loopia.se, citynetwork.se, and domainmonster.com) do not even upload a DS record for their own (signed) domains. One administrator said "Most people do not understand DNS, so imagine the white faces when I mention DNSSEC ... I don't think DNSSEC has a high priority anymore currently in our organization or our customer base." To investigate the root causes, we determine the reason for validation failure using a customized dnspython library, and assign them to one of three categories: Expired RRSIGs (i.e., signatures beyond their expiration date), records with Signature Invalid RRSIGs (i.e., signatures that do not match the corresponding DNSKEY), and Other reasons (e.g., malformed RRSIGs). This indicates the need for better automation and auditing of processes for refreshing RRSIG records in DNSSEC.As one example of this problem, consider the rise in expired signatures in May 2016 for . For example, in September 2015 a total of 1,493 domains with the authoritative name server transip.net published incorrect RRSIGs, a problem that was corrected the following day. For domains with a DS record, 99.9% of those records are valid (i.e., match the KSK). In particular, we investigate how often keys are shared across domains (thus increasing the attack surface), how often private keys are weak (e.g., using short keys that can potentially be brute-forced), and whether administrators take the correct steps when rolling over to new keys. In principle, each domain's KSK and ZSK should be unique, as the DS record binds an identity (e.g., a domain) to a KSK, and the ZSK produces RRSIGs for integrity. Similar to the previous section, we find highly bimodal behavior, with most name servers having a low prevalence of shared DNSKEYs, but with a few popular name servers using shared DNSKEYs for nearly all of the domains for which they are authoritative. However, key sharing across domains belonging to different companies for efficiency can substantially increase security risks, e.g., when a single shared key is compromised or cracked this affects all domains that share that key.Weak keys Next, we examine how often weak keys are used in DNSSEC. This process, called key rollover, is a recommended best practice in the DNSSEC RFCs [29,30], and the use of two-key pairs (KSKs and ZSKs) is designed to facilitate frequent rollover.KSK rollover Rolling over a KSK involves publishing a new DNSKEY and updating the DS in the parent zone.Unlike many other PKIs, DNSSEC must address issues raised by DNS record caching when considering key rollovers. Thus, a domain must carefully manage records during key rollover: if a domain conducts an Abrupt rollover (simply publishing a new KSK and DS record), old cached RRSIGs and DS records can cause record validation to fail for clients.The DNSSEC RFC specifies two schemes by which a domain can roll over their KSK to mitigate this prob- By doing so, the domain ensures that all clients will be able to validate the domain, regardless of whether they have cached records. However, conducting an Abrupt rollover can still lead to validation failures, so the DNSSEC RFC defines two schemes for domains to safely roll over their ZSK: Pre-Publish Under the Pre-Publish scheme, a domain publishes a new ZSK DNSKEY, but still uses the old key to sign the RRSIGs (e.g., for A records). Double Signature The Double Signature scheme works similarly to the KSK scheme: a new ZSK DNSKEY is introduced, and is used to sign additional RRSIGs immediately. Figure 12 shows the cumulative distribution of estimated DNSKEY packet size per domain when using 1024-bit and 2048-bit keys, and when using only KSK signatures or using both KSK and the unnecessary ZSK signatures in the DNSKEY record.The figure shows that records today rarely incur IPv4 fragmentation; only 403 (0.01%) of the domains that sign their DNSKEY with just the KSK, and 5,568 (0.8%) of the domains that use both the KSK and ZSK cause fragmentation. Luminati [35] is a paid HTTP/S proxy service that enables clients to route traffic via Hola users' machines.To route HTTP/S traffic via Luminati, a client first connects to a Luminati server (called the super proxy). The super proxy then checks that the destination domain is valid (via Google's DNS service), and then forwards the request to a Hola client (called the exit node). These misconfigurations include missing, incorrect, and expired RRSIGs, missing DNSKEYs, incorrect DS records, etc.For each exit node we test, we generate a unique identifier for that node's DNS requests (e.g., http://id 1 . Second, if an exit node's resolver correctly rejects a misconfigured DNSSEC response, it will respond to the exit node with a SERVFAIL message. We record the identifier, the zID in the super proxy's response, the IP address of the exit node's resolver (from the incoming DNS request), and the IP address of the exit node (from the incoming web request receive a response from the super proxy with the same zID, the exit node's resolver did not validate the DNSSEC record. Incorrectly validating resolvers We found that 3,635 resolvers (82.1% of the DNSSEC-aware resolvers) from 146 ASes fail to validate the DNSSEC responses, even though they issue the DNS requests with the DO bit set; 15 these resolvers cover 149,373 (78.0%) of the exit nodes covered by DNSSEC-aware resolvers. 16 Only 543 resolvers (12.2% of the DNSSEC-aware resolvers) from 196 ASes correctly validate DNSSEC responses; these resolvers cover 31,811 (16.6%) of the exit nodes covered by DNSSEC-aware resolvers. This paper presents a longitudinal, end-to-end study of DNSSEC ecosystem-encompassing more than 147M second-level domains and 59K DNS resolvers-to understand the security implications of how DNSSEC is managed.