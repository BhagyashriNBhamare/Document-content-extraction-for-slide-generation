Bootstrapping trust between wireless devices without entering or preloading secrets is a fundamental security problem in many applications, including home networking , mobile device tethering, and the Internet-of-Things.
This is because many new wireless devices lack the necessary interfaces (keyboard, screen, etc.) to manually enter passwords, or are often preloaded with default keys that are easily leaked.
Alternatively, two devices can establish a common secret by executing key agreement protocols.
However, the latter are vulnerable to Man-in-the-Middle (MitM) attacks.
In the wireless domain, MitM attacks can be launched by manipulating the over-the-air transmissions.
The strongest form of manipulation is signal cancellation, which completely annihilates the signal at a targeted receiver.
Recently, cancellation attacks were shown to be practical under predictable channel conditions , without an effective defense mechanism.
In this paper, we propose HELP, a helper-assisted message integrity verification primitive that detects message manipulation and signal cancellation over the wireless channel (rather than prevent it).
By leveraging transmissions from a helper device which has already established trust with one of the devices (e.g., the hub), we enable signal tampering detection with high probability.
We then use HELP to build a device pairing protocol, which securely introduces new devices to the network without requiring them to share any secret keys with the existing devices beforehand.
We carry out extensive analysis and real-world experiments to validate the security and performance of our proposed protocol.
In recent years, we have experienced a proliferation of advanced personal wireless devices (APDs) such as smartwatches, wearable sensors, RFID devices, home monitoring sensors for Internet-of-Things applications, etc. [38].
These devices often connect to a gateway/hub (e.g., a Wi-Fi access point) for data collection or for remote actuation.
Securing the communication between APDs and the hub is of paramount importance when the former collect sensitive data, or can control critical functions within their environment.
The process of establishing trust between the APD and the hub is known as secure bootstrapping and is achieved via a two-party mutual authentication and key-agreement mechanism.The prevailing methods for secure device bootstrapping are either by manually loading the hub's secret to the device or to preload the APDs with some unique secret.
The preloaded secret of APDs can be made known to the hub using an out-of-band (OOB) channel, e.g., the user enters the secret manually.
However, many APDs such as smart bulbs, motion sensors, smart key locks, etc., lack advanced interfaces for entering or changing passwords.
Moreover, it is a common occurrence that manufacturers opt to preload devices with default keys that are easily leaked.
In fact, the largest DDoS attack launched to date exploited default passwords preloaded to APDs-IP cameras, digital video recorders, smart TVs-to recruit hundreds of thousands of nodes into the Mirai botnet and attack the DNS infrastructure [57].
On the other hand, a public key infrastructure (PKI) is also impractical for wide deployments.
This is because a PKI typically requires a connection to a centralized certification authority.
For devices deployed on-the-fly in areas with intermittent Internet connectivity, reachback to central certificate repositories may not be a robust option.
Moreover, PKIs face significant scalability, heterogeneity, and interoperability challenges.
As an average person or household owns an increasing number of devices, the device association process must happen within a short time and require very little or no human effort.
Also, a trust initialization protocol must be lightweight, as APDs typically have low processing capability and are energy constrained.
Several device pairing protocols have been proposed for device pairing without pre-shared secrets [1,8,11,18, 26, 29, 32, 37, 40-42, 44, 54].
Most such protocols require an auxiliary secure out-of-band (OOB) channel, an audio or visual channel for example, that is observable by a user to aid the authentication of messages transmitted over the public wireless channel.
However, such OOB channels introduce practical interoperability issues due to the heterogeneity of the devices and are not userfriendly.
Recently, in-band pairing protocols [10,17,23] have been proposed as an alternative to OOB pairing.
The former protocols only require that devices possess a common wireless interface to communicate.
Since the wireless channel is known to be insecure in general, the security of these protocols relies on the assumption that wireless signal cancellation is infeasible, so that message integrity and authentication properties can be derived by encoding the messages in a special way.
However, as demonstrated by Popper et al. [47], this assumption may not hold in many cases.
Thus, it remains an open problem as to whether secure in-band device pairing protocols can still be designed under a strong Dolev-Yao attacker which can annihilate wireless signals.In this paper, for the first time, we seek an answer to the above question.
Instead of trying to prevent signal cancellation attacks, we propose an approach to detect the presence of an attacker who attempts to nullify the signal at a receiver.
Our core idea for verifying the integrity of a message m is to superimpose another signal from a helper device (e.g., a smartphone) while m is being transmitted.
Any cancellation attack on m is bound to also cancel the superimposed signal from the helper.
The helper is assumed to have an existing trust association with one of the devices in the network (e.g., the hub), and is co-present with the primary device that is authenticated by the hub.
The superimposed signal is later revealed by the helper via the authenticated channel, to allow for the recovery of m.
Our protocol achieves a strong "tamper-evidence" property where there are no restrictions on what kind of signal manipulation the attacker is allowed to do.Specifically, the device's message m is encoded with ON-OFF keying and Manchester-coding.
During the transmission of m, the helper synchronously injects some random signal at randomly selected slots.
Any signal nullification attempt will cancel both the legitimate transmitter's and the helper's signal, presuming that the activity periods for the helper are not easily discernible.
The helper later reveals its activity periods via an authenticated channel to enable the hub in the detection of signal nullification attempts.
Trust between the hub and the helper is established using traditional means (e.g., input a shared random password on the smartphone when it is first paired with the hub), which is a one-time cost.
With only one helper in a network, we can securely introduce many new devices at no extra hardware cost, thus ensuring scalability and usability.
Essentially, by exploiting the co-presence of the helper with the new device(s), our protocol transfers the trust from the helper to the new device(s).
The main contributions of this paper are four-fold:• We construct a novel physical layer message integrity verification primitive to detect signal cancellation attacks over the wireless channel.
We show that our primitive achieves message integrity protection with only in-band communications.
• We utilize the proposed message integrity verification primitive to construct a secure in-band device pairing protocol named HELP based on the Diffie-Hellman (DH) key agreement [14].
Whereas the primitive provides one-way integrity verification (device-to-hub), we show that HELP achieves two-way authenticated key agreement (counterintuitively).
This is done via a novel way that exploits the helper's superposed random signals to simultaneously protect both the integrity and confidentiality of the DH public parameters, such that an adversary impersonating the hub cannot successfully establish a key with a legitimate device.
• We theoretically analyze the security of the proposed integrity verification primitive and the HELP protocol, and we establish bounds for the adversary's success probability under active attacks (especially Man-in-the-Middle attacks).
We show that the adversary's success probability is a negligible function of the protocol parameters and thus can be driven to an arbitrary small value.
• We carry out extensive experiments to evaluate the effectiveness of the signal cancellation detection mechanism and the pairing protocol.
Our experiments verify that device co-presence significantly hardens the adversary's ability to distinguish between the helper's and the legitimate device's transmissions.
We also implement the proposed protocol in our Universal Software Radio Peripheral (USRP) testbed and evaluate the adversary's successful pairing probability with and without the protection of our integrity verification primitive.
The experimental results are in line with our analytical findings.The paper is organized as follows: we discuss related work in Section 2.
We state the system and threat models in Section 3.
We present the integrity verification primitive and the HELP pairing protocol in Section 4.
The security of the pairing primitive and of HELP are analyzed in Section 5.
In Section 6, we study the adversary's capability in inferring the helper's transmissions and injecting modified messages by performing experiments on the USRP platform.
We further experimentally evaluate the HELP assisted key-agreement protocol.
We conclude the paper in Section 7.
In this section, we review previous works in trust establishment without prior associations, which involves both message authentication and key-agreement.
It is well known that key agreement can be achieved using traditional cryptographic protocols such as a DH key exchange [14]; however, public message exchange over the wireless medium is vulnerable to Man-in-the-Middle (MitM) attacks, which are notoriously difficult to thwart without any prior security associations.
To thwart MitM attacks, additional message authentication and integrity protection mechanisms are required.
Therefore, next we mainly review works in authentication/integrity protection without pre-shared secrets.
Many existing secure device pairing methods rely on some out-of-band (OOB) channel to defend against MitM attacks [1, 8, 11, 18, 26, 29, 32, 37, 40-42, 44, 54].
The OOB channel is assumed to possess certain security properties (e.g., it is only accessible by the user), which helps verify the integrity of messages transmitted over the wireless channel.
However, OOB channels usually require non-trivial human support and advanced user interfaces.
For example, when a visual channel is used, a user needs to read a string from one device's screen and input it into another [1,11,37], or visually compare multiple strings or LED flashing patterns [31,32,44].
Other works require specialized hardware such as a Faraday cage to isolate the legitimate communication channel [27,30].
On the other hand, biometric signals [3,12,21,46,53,61,62,64] have been proposed to create a secure channel through which nodes on the same body can derive a shared secret.
However, their applications are restricted to wearable devices, require uniform sensing hardware, and are susceptible to remote biometrics sensing attacks [20].
In addition, others have proposed to exploit the shared physical context for authentication and key agreement.
Examples of common modalities include the accelerometer measurements when two devices are shaken together [35,36], or light and sound for two devices located in the same room [38,52].
Again, these require additional hardware and are not interoperable, whereas in many cases the contextual source has low entropy.
As an alternative, non-cryptographic authentication techniques usually derive trust from hard-to-forge physicallayer characteristics unique to each device/link.
They usually transmit information "in-band" without requiring an OOB channel.
Existing approaches on noncryptographic device authentication [9,25,33,45,60,65] can be classified into three categories: (a) device proximity, (b) location distinction, and (c) device identification.In device proximity methods, the common idea is to exploit the channel reciprocity and its rapid decorrelation (within a few wavelengths) with distance.
However, such techniques typically require advanced hardware which is not suitable for constrained wireless devices.
For example, [9,45,65] require multiple-antennas, and [33] needs a wide-band receiver.
Moreover, these techniques only address the common key extraction problem, leaving them vulnerable to MitM attacks.
Distance bounding techniques [5,49,50] were also proposed to ensure proximity, but they are not so practical yet (either resort to OOB channels or specially designed hardware).
Location distinction methods such as temporal link signatures that detect location differences [25,43,60] require high bandwidth (> 40MHz), which is not always available to low-cost, resource-constrained devices.
Finally, device identification techniques [6,13,16] distinguish devices based on their unique physical-layer or hardware features.
Unfortunately, both location distinction and device identification techniques require prior training or frequent retraining, which is not applicable to APDs first introduced to an environment.
Whereas the above approaches authenticate a device's presence, they do not necessarily protect the integrity of the messages transmitted by a device, due to the possibility of signal manipulation attacks over the wireless channel [10].
There have been few past attempts to design in-band message integrity protection mechanisms, which assume that signal cancellation over the wireless channel is not possible [10,23], or occurs with bounded success [22].
For example, Tamper demonstrated an effective relay signal cancellation attack using a pair of directional antennas, which works regardless of the packet content and modulation [47].
Recently, Hou et.
al. [22] showed that it is possible to prevent signal cancellation only if the channel itself has enough randomness.
A typical indoor environment may not be sufficient because the devices are static and the channel is usually stable.To remedy the significant shortcomings of existing device pairing schemes, we (for the first time) introduce the core idea of detecting signal manipulation attacks even if signal cancellation is 100% effective.
This is achieved through the introduction of a helper device which is already securely paired with the hub in an offline fashion (e.g., using conventional pairing methods).
With the aid of the helper, trust can be established securely for newly introduced devices without significant human effort or any advanced hardware.
Our protocol only uses in-band wireless communication, and thus, it is interoperable.
We consider a star network topology, where a wireless base station (BS) services multiple personal devices, which is similar to an Internet-of-things (IoTs) scenario.
For example, the network can reside inside a home or an office space.
Our goal is to securely pair an unauthenticated device with the base station in the presence of an adversary and establish a common key between the device and the BS.
The adversary can either try to hijack the uplink communication to pair with the BS, or spoof a rogue BS to pair with a legitimate device.
The device and the BS do not pre-share any common secrets (e.g. secret cryptographic keys).
We assume that a user initiates the pairing process by powering the device and setting it to pairing mode.
Figure 1 describes the system model.
Formally, the following entities are part of the system model.Base Station (BS):The BS serves all the legitimate devices and needs to establish a secure communication link with each of them.
The BS connects with the legitimate devices through a wireless channel.
The BS verifies and pairs with any legitimate device requesting to join the network.Helper Device (H): The helper is an auxiliary device such as a smartphone, that assists the BS in the pairing process.
The helper has already established a secure authenticated channel with the BS, either by establishing a common key, using a public/private key pair, or through some OOB channel [1,37].
Using this secure channel, H can apply an authenticated encryption function AE(·) on a message m H to guarantee the confidentiality and integrity of m H , and the authenticity of the source.
Any such AE(·) can be utilized with the proposed protocol.
For example, if H and the BS share a public/private key pair, H can encrypt/sign/encrypt (or sign/encrypt/sign) its message to guarantee the necessary security properties.
If H and BS share a common master symmetric key, an encrypt-then-MAC operation can be followed to implement AE(·), after separate symmetric keys are generated from the master key for the encryption and MAC operations.
One of the examples is to use encryption then message authentication code hashing with the shared key.
We refer the reader to [2] for more details on authenticated encryption.
We leave the exact specification of AE(·) open to allow for both symmetric and/or asymmetric methods.Note that pairing H to the BS is a one-time effort and need not be repeated with every device join.
Moreover, only the helper is required to have an advanced interface to pair with the BS.Legitimate Device (D): A legitimate device is a typical APD which does not share any secrets with the BS or H.
The device is usually small and has simple user interfaces (such as a power button) and hardware capabilities.
The legitimate device, H, and the BS are assumed to be copresent during the pairing process.
H and D are placed in close proximity such that they have a highly correlated wireless channel.
Adversary: We consider the typical Dolev-Yao model [15].
The adversary (A), can fully control the wireless channels of the network.
For example, it can eavesdrop, modify, remove, replay or inject messages (frames) transmitted on the wireless channel.
The adversary is also powerful enough to annihilate signals transmitted from D and H over the wireless channel, such that they do not reach the BS (and vice versa).
This can be accomplished by techniques proposed by Pöpper et al. [47].
The pairing protocol itself is known to A, but the adversary does not have physical access to any of the devices.
The helper device is assumed to be trusted and its secret key with the BS is kept away from adversaries.Note that we do not impose any location restriction for the attacker.
Although the devices are typically located in a physically bounded area such as a home, we do not assume that this is a secure region.
Instead, the attacker can be located inside the physical space, as long as the attacker cannot physically control the device and the BS to be paired.
That is, the attacker does not control the helper so that it cannot initiate the pairing with the BS when no legitimate device is present.
The user is aware of the presence of both the BS and of the legitimate device (which are powered on) when the pairing is initiated.
This is the minimal assumption adopted by the majority of the previous works in device pairing.The goal of an attacker is to pair successfully with the BS and/or D. Therefore, we mainly consider a MitM attacker in our security analysis.
However, in this paper, we do not focus on preventing denial-of-service (DoS) attacks such as jamming, which is orthogonal to our studies.
Similarly with all relevant literature, we assume that the adversary is incapable of physically blocking signals (e.g., by adding a Faraday cage) to the device, the helper, or the base station.In addition, at any point in time, the attacker may try to find out who is transmitting on the wireless channel.
There could be several cases: device only, helper only, BS only, or device plus helper together.
For example, the attacker can do so via energy detection or use physical layer identification/fingerprinting techniques [7,19,28,39,55,59].
Since we assume that D and H have a highly correlated channel due to their proximity, it is generally difficult for the attacker to differentiate between the cases of device only and helper only.
Thus, the attacker can differentiate between the number of transmitters (i.e., D+H or D/H alone), but the attacker cannot perfectly distinguish D and H (i.e., the probability of successful detection is less than 100%).
We propose specific power and slot synchronization randomization methods to ensure that D and H are not easily distinguishable.
Note that any device distinction method has to operate only to correspond to the online nature of a MitM attack.
In this section, we present HELP, an in-band Helperenabled pairing protocol that does not require secret preloading.
HELP makes use of a new PHY-layer message integrity protection primitive to detect signal cancellation attacks that are launched to perform a MitM attack against a key agreement protocol.
We first describe the PHY-layer protection primitive and then use this primitive to construct HELP.
Consider the simple scenario depicted in Figure 1.
[10,17].
In ON-OFF keying, a zero bit is mapped to (OFF, ON) slots pair, whereas a one bit is mapped to (ON, OFF) slots pair.
The receiver demodulates the ON-OFF keying sequence by applying energy detection on every slot.
The advantage of ON-OFF keying is that it hardens signal cancellations, as the adversarial device, A has to "erase" the received signal y D at the BS by synchronizing its own signal transmission x A and taking into account the channels h D,BS and h A,BS .
Different from previous approaches [10,17,24], we consider the worst case scenario where signal cancellation is possible due to the stability and predictability of the respective channels, as it was demonstrated in [47].
The MC facilitates several functions.
First, the alteration between ON and OFF slots prevents the zero wandering problem, allowing the receiver to keep a power reference for differentiating between ON and OFF slots, irrespective of the data sequence.
More importantly, an MC message contains an equal number of zeros and ones.
Our integrity protection mechanism relies on the detection of canceled ON slots and therefore, the guarantee of ON slots irrespective of the data sequence is critical to the protocol security.
Finally, the use of MC allows for the recovery of the device's message when the latter has been corrupted from the intentional transmissions of the helper.
Revealing the "time locations" of the helper's ON slots enables the message recovery.In the proposed integrity primitive, the helper is placed in close proximity to the unauthenticated device D and synchronously transmits a message m H while m D is being transmitted.
A signal cancellation targeted at the BS is bound to also cancel the signal from H. With the completion of the m D transmission, the helper reveals m H to the BS, who verifies if any part of m H has been canceled.If the message integrity verification test is passed, the BS exploits the knowledge of m H to recover m D .
A key requirement for the successful detection of signal cancellations is that the adversary A cannot swiftly identify the ON slots of the helper.
We achieve this requirement by placing the helper in close proximity to D and by randomizing the transmit power and the starting time of each ON-OFF slot at D and H. Placing H close to D makes it difficult to differentiate the two devices using transmission directionality or the uniqueness of the wireless channel.
Note that the ON-OFF transmissions contain no preambles, so channel estimation becomes difficult.
The randomization of the power and ON slot firing times aim at preventing the device distinction using RSS measurements or the possible time misalignment between the two devices due to inaccurate synchronization or different paths to the adversary.
We emphasize that any device distinction mechanism must operate online-the adversary has to decide to cancel an ON slot within the first few samples-which renders existing sophisticated radio fingerprinting techniques inadequate [7,19,28,39,55,59].
We now describe the PHY-layer message integrity verification primitive in detail.
We propose a message integrity verification method called HELP that operates with the assistance of a helper device H.
The integrity of a message m D transmitted from D to the BS is verified via the following steps.1.
Device Placement: The helper H is placed in close proximity to the unauthenticated device D.that is attached to wireless transmissions for synchronizing the receiver to the transmitter.
In our protocol, all three entities synchronize to the same time reference, using the known SYNC message.
In this section, we describe how the BS and D can establish a secret key in the presence of a MitM adversary.
We complement the DH key agreement protocol with the HELP integrity verification primitive.
The latter is used to detect the cancellation portion of a MitM attack.
Moreover, the helper provides the necessary authentication for the DH message exchange.
The HELP-enabled DH message exchange is shown in Figure 3.
To fix the ideas, the BS (or D) publishes parameters (G, q, g) of the DH scheme, where (G is a cyclic group of order q and g is a generator of G).
If (G, q, g) are already publicly known, they need not be sent by either party.Device D computes z D = g X D ,where X D is chosen from Z q uniformly at random.
After the initialization and synchronization steps (omitted from Figure 3) [4], as shown in Figure 4.
If any of the verification steps fail, the corresponding party aborts the pairing protocol.
D BS Given ID D , Given ID BS , (G, q, g) (G, q, g) Pick X D ∈ U Z q X BS ∈ U Z q z D ← g X D z BS ← g X BS m D ← ID D , z D m BS ← ID BS , z BS (H active) [h(m D ),m D ] +m H − −−−−− → (H active) AE(s,K) − −−−−− → Verify & Extract z D m BS ← −−−−− − k D,BS ← (z BS ) X D k D,BS ← (z D ) X BS In this section, we analyze the security of the HELP integrity verification primitive and evaluate the security of the DH-based pairing protocol presented in Section 4.3.
Consider D BS C D ∈ U Z q ID D ,C D − −−−− → R BS ←h k D,BS (ID BS ||C D ||0)Ver(R BS )=true?
Table 1.
Moreover, we show the signal b A that must be injected by A to cause the decoding of the desired value b D at the BS.
For illustration purposes, we show the signal cancellation as a negation of the ON value.R BS ← −−−− − C BS ∈ U Z q ID BS ,C BS ← −−−−− − R D ←h k D,BS (ID D ||C BS ||1) R D − −−− → Ver(R D ) = true?From Table 1, we observe that if b H is known, the adversary can always make the BS decode the desired bit b D , irrespective of the value of b D .
Moreover, since the ON bits of m H stay intact, the modified signal will pass the PHY-layer integrity verification at the BS.
However, identifying the ON slots of the helper is difficult due to the location proximity between D and H and also the strict reaction time necessary to perform the cancellation attack in an online fashion.
In the next proposition, we prove the security of the integrity verification mechanism under the realistic assumption that an ON slot for the helper is timely identified by A with some probability.
We experimentally evaluate this probability in Section 6.
The security of the integrity verification of HELP is given by Proposition 1.
Proposition 1.
The HELP integrity verification primitive is δ -secure withδ = 1 − 1 − p I 4 |s| .
(1)Here δ is the probability that the BS accepts a message Proof.
The proof is provided in Appendix A.b D b H b D + b H b A b D + b H b D +b A1 2In our analysis, we set the inference probability of H's activity to one when either D and H co-transmit or none transmits.
In the former case, the presence of high power can be used to detect the superposition of D and H ON slots, and hence infer H's ON slot.
In the latter case, the absence of power can be used to detect a helper's OFF slot.
When either D or H are active, the inference prob-ability is set to p I < 1 due to the ambiguity in deciding which of the two devices is active.
Summarizing,Pr[Inference] =      1, D & H transmit 1, D & H do not transmit p I , D or H transmits.
(2)In Proposition 1, δ depends on two variables; the cardinality of s and p I .
From (1), it is evident that δ is a negligible function of |s|, and a monotonically increasing function of p I .
In Figure 5, we show δ as a function of |s| for various values of p I .
As expected, a higher p I yields a higher δ value for the adversary.
For instance, when p I = 0.9, δ = 0.0174, when |s| = 160, which may not be acceptable.
However, doubling the size of s lowers δ to 0.0003.
Note that in a single use of the HELP primitive, the attacker has only one chance to guess s and modify the value of m D in an online fashion.
Hence, a higher probability of forgery is acceptable here relative to standard cryptographic security (similar security values are sought in previous pairing protocols, which use short authentication strings [40]).
We now analyze the security of the device pairing protocol proposed in Section 4.3.
Since the security of the DH key-agreement protocol under a passive adversary is standard [56], we focus on the security under active attacks.
We divide our analysis into two parts.
In the first part, we examine if the adversary can pair a rogue device to a legitimate BS.
In the second part, we examine if a legitimate device can be deceived to pair with a rogue base station.
These two steps are part of a MitM attack.
Pairing in the absence of a legitimate device: The pairing protocol described in Section 4.3 is initiated with the placement of H in close proximity to the legitimate device and the press of a button on H and D, respectively.
The button pressing sends a pairing initialization message to the BS which is authenticated using the secure AE(·) function.
Without access to the helper device, the adversary cannot initiate the pairing process from a remote location.
.
Therefore, the adversary will be unable to pair D with the legitimate BS.
We now examine whether the adversary acting as a rogue BS can pair with a legitimate device D. To do so, the adversary can perform a similar MitM attack as in the uplink direction, by replacing the BS's DH public parameter z BS with its own number z BS .
This step of the MitM attack corresponding to the message sent by A to D after the reception of m D is shown in Figure 6.
For this attack to be successful, the adversary must extract the DH public value z D so that it can com-pute k D,BS = (z D ) X BS .
The value of z D is carried in [h(m D ), m D ]+ m H , using the HELP primitive.
To recover m D , the adversary must be able to determine the location vector s that is used to generate m H for the portion that corresponds to the transmission of m D .
However, s is transmitted from H to BS using the authenticated encryption function AE(·), so A cannot obtain s directly from the encrypted version of it.Alternatively, A can collect and analyze the transmitted signal of [h(m D ), m D ] + m H after receiving it and attempt to identify all the ON slots in m H using radio fingerprinting methods [7,19,28,39,55,59].
However, none of the fingerprinting methods can achieve 100% accuracy.
As long as A infers H's ON slots with some probability smaller than one, we can drive the probability of successfully extracting m D arbitrarily low by increasing the adversary.
For instance, when p I = 0.9, δ = 0.0018, when |s | = 80, which may not be acceptable.
However, doubling the size of s lowers δ to 5 × 10 −8 .
Note that, such an attack has to happen in an online manner.
This is because the rogue BS must pass the challenge-response phase from the device in the key confirmation phase, so the attacker only has one chance to guess s and derive a probable DH key from the guessed z D , which is only successful with small probability δ (similar to limited-guess online password attacks).
D A BS Given ID D , (G, q, g) Given ID D , (G, q, g) Given ID BS , (G, q, g) Pick X D ∈ U Z q X D ∈ U Z q X BS ∈ U Z q z D ← g X D z D ← g X D z BS ← g X BS m D ← ID D , z D m D ← ID D , z D m BS ← ID BS , z BS (H active) [h(m D ),k D ,BS ← (z BS ) X D k D ,BS ← (z D ) X BS X BS ∈ U Z q z BS → g X BS m BS → ID D , z BS m BS ← −−−−−−−− − Recover z D k D,BS ← (z BS ) X D k D,BS ← (z D ) X BS In this section, we first analyze A's capability in timely identifying the helper's ON slot when the helper is transmitting the ON-OFF message m H .
For this purpose, the adversary could employ several PHY-layer characteris-tics of the helper's transmission to pinpoint when H is active.
These include (a) the received signal strength [55], (b) the frequency offset [59], (c) the channel impulse response h H,A [39], (d) the I/Q origin offset [7], (e) the transient radio state [19], and (f) the angle of arrival for the incoming signal [28].
We first examine A's attempt to perform the signal cancellation and injection required by the MitM attack of Figure 6.
To avoid rejection of m D by the BS, the adversary has to swiftly detect a helper's ON slot and decide whether to perform signal cancellation.
Most existing radio fingerprinting methods are not suitable for such quick online detection.
The frequency offset and channel impulse response are estimated using known preambles that are typically included in headers.
Such preambles do not precede the helper's ON slots.
The I/Q origin offset is not a suitable method because we employ ON-OFF modulation for message transmission.
The methods that detect the transient state of a radio when it turns on can only be used to identify the start of a transmission (although an ON-OFF modulation implies a transition from an OFF to an ON state, the radio transmitter is powered through the entire transmission of an ON-OFF signal and a transient state is not observed with every slot).
Differentiating between D and H using an AOA requires a very narrow directional beam due to the proximity between H and D.
Such narrow beamwidths can be achieved by using an antenna array [48] or a parabolic antenna [63].
However, the hardware cost is prohibitive and the antenna would be quite visible.
For example, an adversary at 50ft from D and H requires two 50-element antenna arrays pointed to D and H respectively via the LoS path, to differentiate between D and H when their distance is set to 4ft.
This calculation assumes a 2.4GHz operating frequency.
The simplest and most timely method for detecting the presence of the helper is to measure the received signal strength over some small number of samples at the beginning of every slot.
Let b D and b H represent the bit simultaneously transmitted by D and H respectively over two slots t i and t i+1 .
There are four possible bit combinations that yield two candidate power profiles for b D + b H , as measured by the adversary.
When b D = b H , the helper and D overlap in one of the two slots (either t i or t i+1 ), depending on the value of b D , b H .
In this case, one of the slots is OFF whereas the other slot is ON with a significantly higher power because the two ON slots of H and D are superimposed (here, we have considered the worstcase scenario and ignored the possibility of destructive interference).
We expect that A will be able to infer the ON slot of the helper with probability p I = 1, due to the higher RSS value of the first few samples of the ON slot.When b D = b H , both t i and t i+1 are ON and have similar power profiles if H and D transmit with the same power and are placed in close proximity.
In this case, the adversary is expected to be unable to differentiate a helper's ON slot from a device's ON slot with the probability much higher than a random guess.
The four possible cases for one slot observed by the adversary are: (a) P 4 ], that represent the average expected power, as measured by the first few samples of a slot.P 1 : both H and D are ON, (b) P 2 : H is ON and D is OFF, (c) P 3 : D is ON and H is OFF, and (d) P 4 : both H and D are OFF.
For each case, the adversary determines four threshold values E[P 1 ], E[P 2 ], E[P 3 ], and E[Without loss of generality, let 2 Let also E[P(t i )] denote the average power measured over slot t i using the first few samples.
The adversary classifies t i to one of four cases by mapping E[P(t i )] to the closest threshold.
That is, caseE[P 1 ] > E[P 2 ] > E[P 3 ] > E[P 4 ].
P 1 is inferred if E[P(t i )] > E[P 1 ]+E[P 2 ] 2, case P 2 is inferred ifE[P 1 ]+E[P 2 ] 2 ≤ E[P(t i )] < E[P 2 ]+E[P 3 ] 2, etc.
A wrong inference is made when E[P(t i )] that belongs to case P i is mapped to a case P j with P i = P j .
In Proposition 1, we have assumed that the probability p I for correctly inferring cases P 1 and P 4 is equal to one.
In P 1 , the RSS is expected to be relatively high due to the co-transmission from D and H.
In P 4 , the RSS is expected to be low because neither D nor H are transmitting.
However, the thresholds for cases P 2 and P 3 are expected to be very close, thus leading to frequent wrong inferences.
We experimentally verify this claim.Experimental Evaluation of p I : Experimental setup: To evaluate p I , we setup three NI-USRP 2921 devices in an indoor laboratory environment.
Two USRP devices represented D and H, whereas a third USRP device is placed at 24 feet away acting as an adversary.
The transmit power for an ON slot was set to 20dBm for both D and H with a symbol duration of 1ms.
The devices were set to work at 2.4GHz and were synchronized.
The sampling frequency was set to 2MHz.
We tested two scenarios: (1) H is stacked on top of D, and (2) H is moved away from the legitimate device.
The experiment setup is shown in Figure 8(a).
We implemented amplitude shift keying (ASK) to transmit MC ON-OFF coded messages and repeatedly transmitted message {1, 0, 1, 0} from D and message {1, 1, 0, 0} from H simultaneously.
The signals from H are MC-coded only when the bit value is one.
The superposition of the two signals implemented all four cases P 1 -P 4 .
Results: Let P DH denote the probability of detecting that D and H transmit simultaneously, P NDH denote the prob- ability of detecting that neither D nor H transmit, and P H denote the probability of detecting that H is transmitting alone.
These correspond to p I for any of the candidate scenarios.
In the first experiment, we measured the detection probability as a function of the sampling window size used for computing the average RSS value for a given slot.
Intuitively, a longer sampling window would lead to better inference but will delay the cancellation operation.
Figure 8(b) shows the resulting detection probabilities as a function of the sample window.
We observe that the detection probabilities P DH and P NDH are relatively low and are further reduced with the increase of the sample window.
However, the detection probability P H is close to 0.5 irrespective of the sample window size.
This indicates that differentiating between the ON slots of the helper and of the legitimate device, when only one of the two transmits, is practically equivalent to a random guess.
Our results justify the selection of p I = 1 when the H and D are simultaneously absent or present, and p I = 0.5 otherwise.In the second experiment, we repeated the first experiments but configured H and D to vary their transmission power on a per-slot basis.
The power was varied to reduce the inference capability of A. Specifically, H and D oscillated their power at random between 10dBm and 20dBm.
Figure 8(c) shows the detection probabilities as a function of the window of samples used for inference.Effect of proximity on p I : We further performed experiments to evaluate the effect of the proximity between D and H on their distinguishability.
We repeated the first experiment and varied the distance between H and D.
In the first part of the experiment, H was moved away from D while keeping the D-A and H-A distances similar (the helper's motion was perpendicular to the D-A line.
Figure 8(d) shows that the detection probability for each case is similar to the case where H is stacked on top of D.
In the second part of the experiment, H was moved towards A, and therefore, the distance between H and A was gradually reduced.
Figure 9(a) shows the respective detection probabilities.
As expected, decreasing the distance between A and H improves the adversary's inference capability, but the inference remains imperfect when D and H remain relatively close.In the fourth experiment, we repeated the second part of the third experiment but configured H and D to vary their transmission power on a per-slot basis.
The power was varied to reduce the inference capability of A. Specifically, H and D oscillated their power at random between 10dBm and 20dBm.
Figure 9(b) shows the same results when the distance between D and H was also varied, with H moving towards A.
We observe that P H remains a random guess even when H is moved away from D (comparison of P H in Figures 9(a) and 9(b)), indicating that a power variation approach can account for situations where H is not placed exactly on top of D. Distinguishing signals from D and H using RSS remains a random guess even when H is 2ft away from D.
In this section, we discuss an inference technique that exploits the possible time misalignment between the transmissions of H and D due to clock drift and different path delays to the receiver.
There have been extensive studies on synchronization of independent wireless nodes, but practically it is impossible to reach perfect synchronization [51].
where there is a synchronization offset ε between D and H.
If A fixes his clock to H, it can infer the presence of helper's ON slots without having to resort to RSS estimation.
It should be noted here, the BS performs detection of ON slots by taking an average value of the power of all the samples.
Therefore, a perfect synchronization between D and H is not required for the correctness of the proposed protocol.To prevent the inference of the helper's ON slots based on time misalignment, we randomize the start times of each bit (first slot of the MC ON-OFF bit) both at H and D. Specifically, a random time offset ε, positive or negative, is selected from a uniform distribution U (ε l , ε h ).
The lower bound ε l is selected to be the maximum synchronization error between D and H.
This can be calculated as the expected clock drift over the transmission time of H plus a maximum time difference between path delays.
The upper bound τ h can be some reasonable value (e.g., 2ε l ).
Moreover τ << t, where t is the slot duration.
This will ensure the correct sequence decoding at the BS.
The lower part of Figure 10 shows an example of applying the randomized start time for each bit.
We observe that no device is always faster (slower), thus preventing A from fixing its clock to H.Experimental Evaluation of p I : To verify the validity of our time randomization approach and its impact on the inference probability p I , we setup three NI-USRP 2921 devices in an indoor laboratory environment as D, H, and A, respectively.
As in previous experiments, H was stacked on top of D, whereas A was placed 24 feet away from D, H.
The transmit power for an ON slot was set to 20dBm with a symbol duration of 1ms.
An artificial clock misalignment τ = 0.1msec was set between H and D to emulate the maximum synchronization error.
We then varied the random time offset ε selected by H and D.
The experiment lasted for the transmission of 10 6 sequences of 40 bits each.
Figure 11 shows the fraction of slots for which each device was detected to be faster as a function of the maximum synchronization error ε.
We observe that for sufficiently high values of ε, H is almost 50% of the time faster than D. Practically, using time misalignment to distinguish the helper becomes a random guess.
In the final set of experiments, we evaluated the integrity protection offered by HELP against an adversary capable of canceling and injecting signals.
We setup two USRP devices stacked over each other as D and H, one device (Rx 1 ) at 24ft from D, H acting as the BS and a second device RX 2 set by RX 1 that performed cancellation on RX 1 .
The transmitters and the receivers are shown in Figure 12(a) and Figure 12(b), respectively.
The distance between the two receivers was set to approximately one wavelength λ to cause signal inversion at RX 1 .
After receiving the transmissions of D and H at Rx 1 and Rx 2 , cancellation was performed via signal processing in MATLAB [34].
The signal of RX 2 was added to RX 1 to cancel the transmission of D and H, whereas a random signal was added to emulate A's signal injection.In the first scenario, we transmitted MC ON-OFF sequences of length = {4, 8, 12, 20}, while the helper was inactive.
We measured the probability δ of accepting A's random sequence at the BS (RX 1 ).
We also varied the probability of successful cancellation p C by suppressing cancellation for a corresponding fraction of bits.
Fig- ure 12(c), shows δ as a function of for various p C .
We observe that for high cancellation probability values p C , a message cancellation/injection has a high success probability (close to one).
We repeated the experiment of the first scenario in the presence of H who transmitted at random slot locations simultaneously with D.
In the experiment, the adversary attempted to distinguish between D and H using the RSS sampling method discussed in Section 6.1.1.
Also, the adversary canceled slots on which D or H's signals were indistinguishable.
Figure 12(d) shows the probability δ of accepting the adversary's modified message as a function of the number of active helper slots |s| when the message length is = 20.
We observe that δ decreases drastically compared to Figure 12(c).
Moreover, imperfect cancellation (p C < 1) leads to further deterioration of the adversary's performance.
The results obtained support the analytical results provided in Section 5, which are computed assuming p C = 1.
Timing performance: The upper bound on the execution time of the DH protocol with HELP primarily depends on the communication time of the ON-OFF keyed message, since the rest of the messages are exchanged in the normal communication mode.
Public key parameters for an EC-DH key-agreement [58] can have values from 160-512 bits, depending on the security requirement.
Assuming a hash length of 160 bits and a slot duration of 1ms, the time required to transmit the HELP protected DH public primitive varies between 0.6-1.4s, which is acceptable.
We considered the problem of pairing two devices using in-band communications in the absence of prior shared secrets.
We proposed a new PHY-layer integrity protection scheme called HELP that is resistant to signal cancellation attacks.
Our scheme operates with the assistance of a helper device that has an authenticated channel to the BS.
The helper is placed in close proximity to the legitimate device and simultaneously transmits at random times to allow the detection of cancellation attacks at the BS.
We showed that a pairing protocol such as the DH key agreement protocol using HELP as an integrity protection primitive can resist MitM attacks without requiring an authenticated channel between D and the BS.
This was not previously feasible by any of the pairing methods if signal cancellation is possible.
We studied various implementation details of HELP and analyzed its security.
Our protocol is aimed at alleviating the device pairing problem for IoT devices that may not have the appropriate interfaces for entering or pre-loading cryptographic primitives.
The derivation of the probability δ that the adversary's modification is accepted at the BS is performed in two parts.
In the first part, we derive the probability that A's cancellation/injection is detected, when A modifies the transmission one bit.
We then compute the probability of detecting signal modifications by A over all bits.
Consider the i th bit of h(m D ) which corresponds to Manchester-coded slots t 2i−1 and t 2i .
Here, we assume a probability p I , which is the probability of inference of detecting the presence of H's signal.
This is discussed in details in the Section 6.
Here we state an assumption, that if H's signal is detected the adversary does not cancel the signal.
The probability of cancel is (1 − p I ).
The adversary is detected for i th bit on which H is active, for two conditions with wrong inference (1 − p I ).
(a) First, the helper bit is zero i.e. H injects energy on t 2i slot, device bit is one slot and adversary bit is one.
(b) Second, the helper bit is one i.e. H injects energy on the t 2i−1 slot, device bit is zero and the adversary bit is zero.Let P r denote the probability that the BS rejects the corresponding bit of [h(m D )] at bit b i due to cases (a) and (b).
This probability can be calculated as:p r = (Pr[b H i = 0, b D i = 1, b A i = 1] + Pr[b H i = 1, b D i = 0, b A i = 0]) Pr[wrong inference] = 1 2 · 1 2 · 1 2 + 1 2 · 1 2 · 1 2 (1 − p I ) = 1 − p I 4 ,(5)In (5), b X i denotes the transmitted value of device X at bit b i , and p I is the probability of inference of helper's activity by the A on a given bit.
For (5), we have used the fact that a strictly universal hash function is the part of HELP.
For a strictly universal hash function, output hashes for two different inputs differ on each bit with probability 1 /2.
The probability δ of accepting the modified message of A at the BS is computed by taking into account all |s| cardinality of the set of bits on which the helper was active.
The adversary's modified message is accepted by the BS if none of the bits in |s| is rejected.
Each bit b i is rejected with probability p r given by (5 where B(α, β , γ) is the Binomial probability density function.We now show that δ is a negligible function of |s|.
In (6), δ is a negligible function if (1 − p r ) |s| is shown to be a negligible function.
To prove the latter, let µ(|s|) = a −|s| where a = 1 1−p r .
For µ(|s|) to be a negligible function, ∀ c ∈ N there exists a n 0 ∈ N such that |s| > n 0 and µ(|s|) < n −c .
Let n 0 = c (ON, ON) slots without the knowledge of s.
The adversary has to make intelligent guesses for received (ON, ON) slots, which is parameterized as the probability of inferring the helper's activity by A.Let p I be the inference probability for detecting the presence of H's signal.
This is discussed in details in Section 6.
Note that, if H's signal is wrongly inferred (with probability (1 − p I )), A maps the received bit on which H was active to a wrong outcome.The adversary makes wrong mapping when it receives (ON, ON) where B(α, β , γ) is the Binomial probability density function and |s | ⊂ |s|, which corresponds to the num- This proves that (1 − p r ) |s | is a negligible function for a = 1 or equivalently p r = 0.
After the attacker extracts m D , the rogue BS needs to pass the challenge-response authentication in the key confirmation phase.Assuming the use of a strongly universal hash function to compute the response h k D,BS (ID BS ||C D ||0), he can only pass this authentication if he has the correct key k D,BS .
Otherwise, his successful probability ε is negligible.
But he can only obtain the correct key by extracting the correct m D value.
Therefore, the success probability of the rogue BS to pair with the device is upper bounded by δ + ε, where ε is a negligible function (of the length of the hash function).
Since δ is a negligible function of |s | which can be the same as the message length (and here the m D is a DH public number, whose bit length is typically larger or equal to the hash length), the overall probability is a negligible function.
This concludes the proof.
We thank our shepherd Manos Antonakakis and the anonymous reviewers for their insightful comments.
This research was supported in part by the NSF under grant CNS-1409172 and CNS-1410000.
Any opinions, findings, conclusions, or recommendations expressed in this paper are those of the author(s) and do not necessarily reflect the views of the NSF.
AProposition.
The PHY-layer integrity verification of D by mechanism in Section 4.2 is δ -secure, where Proposition.
The PHY-layer integrity verification of D by mechanism in Section 4.2 is δ -secure, where
