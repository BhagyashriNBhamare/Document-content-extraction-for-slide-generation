The RDF Book Mashup demonstrates how Web 2.0 data sources like Amazon, Google and Yahoo can be integrated into the Semantic Web.
Major web data sources like Google, Yahoo, Amazon and eBay have started to make their data accessible to third parties through web APIs.
This has inspired many interesting "mashups" which combine data from multiple sources and present it through new user interfaces.
Web APIs usually consist of REST or SOAP web services that deliver XML or JSON.
Scripting languages play an important role in mashup development as they often serve as the "glue" that connects data sources and UI components.The goal of the RDF Book Mashup is to show how data from web APIs can be integrated into the Semantic Web.
This has two benefits.
First, it adds useful data to the Semantic Web.
Second, it addresses several limitations of traditional web APIs:-They do not work with clients that have not been designed with the specific API in mind.
-Their content cannot be accessed by search engines and other generic web agents.
-Each mashup only allows access to data from a limited number of sources chosen by the developer.In contrast, information on the Semantic Web can be used by by generic clients, including RDF browsers, RDF search engines, and web query agents.1.
All items of interest, such as information resources, real-world objects, and vocabulary terms are identified by URI references [3].
2.
URI references are dereferenceable; an application can look up a URI over the HTTP protocol and retrieve an RDF description of the identified item.
3.
Descriptions are provided using the RDF/XML syntax.
4.
Every RDF triple is conceived as a hyperlink that links to related information from the same or a different source and can be followed by Semantic Web agents.These principles are sufficient to create a Web of Data in which anyone can publish information, link to existing information, follow links to related information, and consume and aggregate information without necessarily having to fully understand its schema nor to learn how to use a proprietary Web API.
The RDF Book Mashup applies these principles to web APIs that supply data about books.
It assigns URIs to books, authors, reviews, online bookstores and purchase offers.
When a URI is dereferenced, the mashup queries the Amazon API 1 for information about the book, and the Google Base data API 2 for purchase offers from different bookstores.
An RDF description is assembled from the query results and returned to the client in RDF/XML syntax.
The description uses a mix of RDFS vocabularies, including Dublin Core 3 and FOAF 4 .
We introduced new vocabulary terms where we could not find existing terms in well-established vacabularies.
Figure 1 gives an overview about the architecture of the RDF Book Mashup.
Figure 2 shows the description of the book identified by this URI:<http://www4.wiwiss.fu-berlin.de/bookmashup/books/006251587X> Figure 3 shows the description of its author, who is identified by <http://www4.wiwiss.fu-berlin.de/bookmashup/persons/Tim+Berners-Lee> Both URIs are linked to each other by a dc:creator statement.
The descriptions contain links to further URIs for reviews and purchase offers, which in turn can be dereferenced to yield RDF descriptions.
The RDF Book Mashup is implemented in about 300 lines of PHP code.
Whenever the script gets a lookup call for a URI, it decodes the ISBN number or author name from the URI and uses them to query the origin data sources.
The resulting XML responses are parsed using PHP's SimpleXML functions and turned into an RDF model which is serialized to RDF/XML using the RDF API for PHP (RAP) 5 .
The services use different formats for queries and responses: The Amazon Web Service is a REST-based API that encodes requests in a URL string and answers simple XML.
The Google Base data API uses a proprietary query language and delivers search results as Atom feeds.
Both have in common that requests are encoded into a simple URL string, and responses are delivered as XML, which means that processing can be done easily with built-in PHP functions.To comply with web architecture 6 , the mashup uses 303 redirects to point clients from the URI for a book or person (e.g. <books/006251587X>) to an RDF document describing the item (e.g. <doc/books/006251587X>) [3].
The generated RDF contains metadata about the document itself, including links to the license terms under which the data is published.
RDF is the obvious technology to interlink data from various data sources.
In the following, we describe how the RDF Book Mashup is interlinked with various other Semantic Web data sources.
Another publicly available source of bibliographic data is the DBLP database 7 .
It contains journal articles and conference papers.
In a previous project, we have published this database on the Semantic Web 8 using D2R Server [2].
The RDF Book Mashup automatically generates outgoing owl:sameAs links from book authors to paper authors in the DBLP database.
An RDF crawler that aggregates RDF statements from both sources can conclude that both URIs refer to the same person and thus allow queries over merged data from both sources.The links are generated by asking the DBLP SPARQL endpoint for URIs identifying book authors.
If the query for a foaf:Person with a specific name returns exactly one result, we assume (sometimes incorrectly) that they are the same person, and add the owl:sameAs link.
An example can be seen in Figure 3.
To integrate the book data into the Semantic Web, we also need incoming links that enable Semantic Web clients to discover the data.Another Semantic Web data source that contains information about books is DBpedia 9 , a project that publishes RDF data extracted from Wikipedia.
DBpedia uses the ISBN numbers that are found in Wikipedia articles to auto-generate links to the RDF Book Mashup.
The DBpedia dataset currently contains about 9000 owl:sameAs links pointing at RDF Book Mashup URIs.A second Semantic Web data source that auto-generates RDF links to RDF Book Mashup URIs is the Semantic Web server that publishes the DBLP bibliography.
The server includes an RDF link to the RDF Book Mashup into the RDF description of each bibliography item that has a ISBN number.The RDF data that is generated by the RDF Book Mashup can also be used to augment web pages.
An example of a web page that uses Book Mashup data is the Semantic Web book list 10 which is maintained within the W3C ESW Wiki.
This list contains around 40 manually-set links to RDF Book Mashup data describing books from the list.A further source of incoming links are the FOAF profiles of book authors.
Tim Berners-Lee and Ivan Herman are among the people who have such links in their profiles 11 12 .
The RDF Book Mashup's website has instructions that tell book authors how to set dc:creator links from their FOAF profile to their books.
Linked data can be consumed by a different kinds of clients on behalf of a user.
Some scenarios are: Browsing: We have shown how to integrate information from web APIs with the Semantic Web, making them part of the Web of Data, and making them accessible to generic Semantic Web clients like RDF browsers, RDF crawlers and query agents.
This has been done by wrapping several APIs into an interface that applies the Linked Data principles.
The wrapper is implemented as a fairly simple PHP script.
We hope that this work will inspire others to integrate other interesting data sources into the growing Semantic Web.
