We analyze a generalized index coding problem that allows multiple users to request the same packet.
For this problem we introduce a novel coding scheme called partition multicast.
Our scheme can be seen as a natural generalization of clique cover for directed index coding problems.
Further, partition multicast corresponds to an achievable scheme for the generalized bipartite index coding problem that we introduce in this paper.
Our scheme partitions the nodes into groups and solves a multicasting problem within each group.
We show that Partition Multicast is optimal for a few families of graphs and generalizes previous achievable schemes, namely directed cycle covers.
We also show that finding the best partition is computationally intractable to compute in general.
T HE problem of broadcasting information to a set of receivers that have some side information is relevant for many applications.
The index coding problem is a simplified noiseless wireless broadcast problem that was introduced by Birk and Kol [1], and further developed in [2], [3].
Despite the simplicity of the model, the problem is fundamental and interesting: It was recently shown that any network coding problem can be reduced to an instance of index coding [4] and [5].
Further, Wang [6] analyzed broadcast packet erasure problems that use closely related techniques.In the original setup, Bar-Yossef et al. in [2] considered a base station that aims at transmitting a set of n packets x 1 , · · · , x n ∈ X to n different users u 1 , · · · , u n , while each user u i requires a specific packet x i (with the same index i) for i ∈ {1, · · · , n}.
Further, each user may have some other packets as side information.
The work in [2] considered the restrictive assumption of symmetric demands where if user u i wants packet x i and knows packet x j , then user u j who wants packet x j must know packet x i .
This system was modeled by an undirected graph G where each node i represents both user u i and packet x i where user u i wants packet x i and an edge between node i and j means that users u i and u j know packets x j and x i respectively.A solution of the problem G is a finite alphabet W X and an encoding function E : X n → W X such that for each tuple x 1 , · · · , x n ∈ X n , if the server transmits the messages This work was supported in part by NSF Career Grant CCF-1055099 and research gifts by Intel and Microsoft Research.
w = E(x 1 , · · · , x n ) ∈ W X , each user u i is able to decode its designated packet from the broadcast message w and its side information.
Let us call such a message w a mission completing message.
Note that we use the subscript X for the set W X since for a specific index coding instance G, the size of the set W X depends on the size of X .
Let β X (G) be the minimum coding length of the solution per input symbol when packets belong to set X , i.e., min log |X | |W X | over the encoding functions E : X n → W X that are mission completing.
Define the optimal broadcast rate β(G) to beβ(G) lim |X |→∞ β X (G) = inf |X | β X (G)(1)where the limit exists due to sub-additivity of β(·) as explained in [7].
In network coding terms, this is the non-linear vector capacity.
Further, it can be interpreted as the average asymptotic number of broadcast symbols (bits) needed per symbols (bits) of input.
To see how the above can be a ratio of two quantities in bits, notice that log |X | β X (G) = log 2 β X (G)/ log 2 |X |.
By representing an instance of index coding problem with symmetric demands by an undirected graph G as in [2], graph-theoretic parameters can be used to derive bounds on the broadcast rate β(G), as follows:α(G) ≤ β(G) ≤ χ(G)(2)where, α(G), χ(G) denote the independence and cliquecover numbers of G, respectively.
Note that both upper and lower bounds are NP-hard to compute.
Let β (G) denote the linear scalar capacity of the problem, i.e., the solution under linear encoding function E. Bar-Yossef et al. in [2] showed that the best possible linear scalar capacity β (G) for the server is the graph functional minrank 2 (G).
Lubetzky et al. in [7] showed that in general nonlinear schemes can outperform linear ones, i.e., β(G) ≤ β (G).
Specifically, they found families of graphs for which the gap between the nonlinear scheme achieving β(G) and linear schemes is polynomial in the number of nodes of G.Bar-Yossef et al. extended the model of [3] to allow asymmetric demands.
That is, they changed the undirected graph model to a directed one where a directed edge from node i to node j denoted by (i, j) indicates that user u i knows packet x j .
The main limitation of this model is that a packet cannot be requested by more than one user.Deriving tight bounds for β(G) is a challenging problem.
Clearly, the number of transmissions required by any achievable scheme is an upper bound on β(G).
Chaudhry et al. [8] and, independently, Neely et al. [9] introduced the directed cycle cover scheme which is optimal for a few families of graphs, namely, directed cycles and sparse directed graphs of maximum out-degree one.For a directed graph G, one can find the maximum number of disjoint directed cycles and then as shown in [9] resolve each cycle C with |C| − 1 transmissions, where |C| represents the number of packets in the directed cycle.
Let C(G) denote the maximum number of disjoint directed cycles in graph G. Using the cycle cover scheme, the server can deliver all the packets to their recipients in m − C(G) transmissions.
Thus β(G) ≤ m − C(G).
There exist graphs for which the gap between m − C(G) and β(G) is very large.
For example, when each user in graph G knows all packets except the one it wants, β(G) = 1 while C(G) = m/2, which gives a gap linear in m.Our goal in this paper is to introduce an achievable index coding scheme that works for more general problems and is provably matching the optimal β(G) for a broader family of graphs.We introduce such a scheme by partitioning the graph into subgraphs and resolving each partition through multicasting all the desired packets of that subgraph.
Our scheme is a generalization of cycle cover and can be shown to be equal to β(G) for a larger set of graphs.
Further, it can be considered as a generalization of clique cover number X (G) for directed bipartite index coding problems.
We consider a noiseless wireless system where a broadcast station wants to transmit the set of packets P = {x 1 , x 2 , · · · , x m } from a finite alphabet X where |X | > 1, to a set of users U = {u 1 , u 2 , · · · , u n } while each user u i demands exactly one specific packet and may know some other packets as side information.We analyze the following generalized problem that we call bipartite index coding.
In this problem some packets may be demanded by more than one user.
This is a very natural requirement, especially in mobile content delivery problems where many users demand few popular files.
This generalization of index coding was previously analyzed in [10] and [9].
This general framework is presented in the form of directed hypergraphs [10], where each directed hyperedge from a packet to a set of packets represents a user demanding the source of the edge and knowing the tails.Equivalently, in this paper we represent an instance of the problem by a directed bipartite graph G = (U, P, E) with users on one side and packets on the other.
A directed edge (x j , u i ) indicates that user u i demands packet x j , and a directed edge (u i , x k ) implies that user u i has packet x k as side information.
We note that our model contains undirected and directed index coding as special cases and can further model packet popularities.We define the incoming and outgoing neighborhood of a node v (either a user node or a packet node) denoted by N in (v) and N out (v) respectively, as followsN in (v) = {w|(w, v) ∈ E},(3)N out (v) = {w|(v, w) ∈ E}.
(4)For each user u i , N in (u i ) is the packet this user demands 1 , and N out (u i ) denotes the set of packets user u i knows.
Further, for each packet x j , N in (x j ) is the set of all users who know x j as side information, and N out (x j ) is the set of users who want packet x j .
Such a graph G is shown in Fig.
1 with n = 6 users and m = 5 packets.
For instance, user u 1 demands packet x 1 , i.e., N in (u 1 ) = x 1 , and it knows packetsN out (u 1 ) = {x 2 , x 3 }.
For the set S ⊆ P of packets, we define G S = (U S , S, E S ) to be the subgraph induced by S, where U S and E S are defined as followsU S = N out (S) = {u i |u i ∈ sj ∈S N out (s j )} (5) E S = {e ∈ E|N (e) ⊆ S ∪ U S } 2(6)A valid packet decomposition of the graph G = (U, P, E) for some 0 < k ≤ m is a set of k disjoint subgraphsG S1 , · · · , G S K induced by k disjoint packet sets, namely S 1 , · · · , S k , such that • S i ∩ S j = ∅ if i = j for i, j ∈ {1, · · · , k}.
• S 1 ∪ · · · ∪ S k = P.Since each user demands exactly one packet, it is apparent that for a packet decomposition with k subgraphs we haveU S1 ∪ U S2 ∪ · · · ∪ U S k = U.We present an upper bound on β(G).
Our bound can be considered as a generalization of the clique cover number χ(G) used in undirected index coding.
Our upper bound is an achievable scheme that we call partition multicast.
Further, this bound can be considered as a solution for the complementary index coding problem [8] whose objective is to maximize the number of saved transmissions.Let us begin with an observation.
Assume the graph G = (U, P, E), where each user knows at least d packets as side information, i.e., min ui∈U |N out (u i )| = d.
We call d the minimum out-degree or minimum knowledge of the graph.
Then, the server can transmit m−d independent equations in the form α 1 x 1 +α 2 x 2 +· · ·+α m x m where α i 's are taken from some finite field F, for which each user can decode the packet it demands.
We denote the number of transmission required for this scheme over the graph G by T (G) = m−d. Of course, we consider the field F to be large enough so that we are able to produce m − d independent equations.
As is well known, [11] random linear combinations of all the packets of each multicast set will suffice to produce such linear equations with high probability in a large field.
Each user receives m − d linear equations and since the user knows at least d packets, there are at most m − d unknowns.
Thus, each user can decode all the m packets by solving a system of linear equations.We can generalize the above scheme by finding a cover of the graph where each subgraph has a large minimum knowledge such that the sum of these minimum knowledges is maximized.
We show that the optimal cover, i.e., overlapping subgraphs, is suboptimal compare to the optimal packet decomposition which are set of nonoverlapping subgraphs induced by some set of packets.
We do so in Lemma 1.
Lemma 1: Having overlapping packet sets is suboptimal.As mentioned, our scheme is a packet decomposition of the graph where the sum of the minimum out-degrees are maximized.
For example, assume that we partition the graph into K disjoint subgraphs induced by packet sets S 1 , · · · , S K , each with the minimum knowledge d i for i = 1, · · · , K.
Then each subgraph G Si can be resolved in T (G Si ) = |S i | − d i transmissions which shows that all users can obtain their designated packets inT (G) = K i=1 T (G Si ) = k i=1 |S i | − d i transmissions.
Further, assuming that the packet sets S i are disjoint k i=1 |S i | = |P| = m gives T (G) = m − k i=1 d i .
Thus, the optimal partitioning is the solution to the following optimization problemPaMul: maximize K i=1 d i subject to 1 ≤ K ≤ m S 1 , · · · , S k ⊂ P G S1 , · · · , G S K is a valid packet decompositionFrom here on, by optimal scheme, we mean a solution of the above optimization (there might be many).
Note that in the context of complementary index coding problem, our scheme saves K i=1 d i transmissions.
We show that finding best partition is computationally intractable:Theorem 1: PaMul is NP hard.
Let us call the problem of finding the optimal packet decomposition over the undirected graph sum-degree cover.
Then, we prove Theorem 1 by finding a reduction from clique cover to sum-degree cover and vice versa in Lemma 2.
Lemma 2: Sum-degree cover and clique cover are equivalent, i.e., the solution of each one can be derived from the solution of the other by a polynomial reduction.To prove Lemma 2, we show that partitioning a clique is strictly suboptimal in lemma 3.
Using Lemma 2 it is easy to prove Theorem 1.
Proof of Theorem 1: We map any undirected graph G = (V, E) to a bipartite index coding instance, where each node i ∈ V is mapped to two nodes x i , u i with a directed edge (x i , u i ) and each edge {i, j} ∈ E is mapped to two directed edges (u i , x j ), (u j , x i ).
Then we solve PaMul on the directed bipartite graph and convert the soution back to the undirected graph.
To get the clique cover 3 , we run the Welsh-Powell algorithm [12] which finds a ∆ + 1 coloring on a graph with maximum degree ∆, on the complements of the partitions found in the previous step.
Since clique cover for undirected graphs is NP complete, this completes our proof.Before we conclude this section, let us analyze the performance of our scheme for some specific families of graphs, namely, directed cycles, complete side information graphs, and directed acyclic graphs.If G is a directed cycle, then the knowledge degree for all users is d = 1, and as a result our scheme can deliver all packets in m − 1 transmissions which is equal to β(G) of directed cycles.
Since our bound performs as the cycle cover suggested in [8], [9] as the special case, it is tighter and requires fewer transmissions.We know that our scheme cannot reduce the number of transmissions below β(G).
Further, it is known that β(G) = m for a directed acyclic graph.
Since all packets are demanded by at least one user, a leaf node must exist which is a user with no side information.
As a result the minimum knowledge degree of the graph is d = 0 and the scheme requires m transmissions which is again equal to β(G).
When the users have complete side information, i.e., know all packets except the one they demand, the minimum knowledge degree of the graph is d = m − 1 and our scheme can deliver all packets in a single transmission.
Note that the complete side information can be represented by an undirected clique.
Here we show that the optimal packet decomposition is optimal over all covers of the directed bipartite graph G.proof of Lemma 1: Consider the packet sets to be overlapping.
Let the optimal number of transmissions achieved through the scheme beT (G) = k i=1 |S i | − d i , where k i=1 |S i | ≥ |P| since the packet sets are overlap- ping.The key observation for showing the suboptimality of the overlapping subgraphs is that omitting a packet from a subgraph G S does not increase number of transmissions required for transmitting the remaining graph.
Specifically, consider the set of packets S and let G S be the subgraph induced by S that has minimum knowledge d. Further, assume x ∈ S. Using the multicast scheme T (G S ) = |S| − d. Now, consider omitting x from the set S and forming the new set S = S \ {x} and the induced subgraph G S .
Since one packet is removed from G S , its knowledge degree is at most reduced by one, i.e., d − 1 ≤ d ≤ d, where d denotes the knowledge degree of G S .
In other words, d can either be d or d − 1.
As a result, we haveT (G S ) = |S | − d = |S| − 1 − d , which implies T (G S ) − 1 ≤ T (G S ) ≤ T (G S ).
Thus, removing a packet from a graph does not increase the number of transmissions that the multicast scheme requires.
Assume we solve the problem by allowing overlapping subgraphs.
Further, assume we end up with a solution which contains a subgraph G S induced by set S which shares some packets x 1 , · · · , x with some other subgraphs.
We can therefore omit all these elements from S and form S = S \{x 1 , · · · , x }.
Since we know T (G S ) ≤ T (G S ), the cost function will be either reduced or remain the same.
Furthermore, as packets x 1 , · · · , x are included in some other subgraphs, they will be delivered to their designated users by multicasting over those subgraphs which shows that no extra transmission is needed to deliver them.
As a result, using overlapping subgraphs is suboptimal.IV.
Sum-degree cover and clique cover are equivalent Finding the optimal partitioning in general, however, is NP-hard as we mentioned earlier.
To show this, we consider an instance of the index coding problem with symmetric demands as described in [2], which is a special case of the bipartite index coding.
Fig. 2 shows a cycle of Consider an instance of index coding problem with symmetric demands and m = n. Finding the optimal partition which maximizes the sum of minimum out-degrees on the bipartite graph, is equivalent to finding the partition which maximizes the minimum degrees on the corresponding undirected graph.
This is true since in the undirected model, if user u i who demands packet x i knows packet x j , then user u j (who wants packet x j ) must know packet x i , which in return shows that minimum out-degree of a partition on the bipartite graph is the minimum degree of the corresponding partition in the undirected one.We here show that the problem of maximizing the sum of minimum degrees on undirected graphs which we refer to as sum-degree cover, is equivalent to the clique cover problem.
Before proving Lemma 2, to shed some light on the connection of the two problems, we show that partitioning a clique is strictly suboptimal.Lemma 3: Consider the graph G S = (S, E S ) to be a clique, then partitioning this graph is strictly suboptimal, i.e., for any partitioning of S into sets S 1 , · · · , S we haveT (G S ) < i=1 T (G Si ) Proof: Note that for any graph G S = (S, E S ), T (G S ) ≥ 1 since d S ≤ |S| − 1 and T (G S ) = |S| − d S .
The equality in above holds if and only if G S is a clique for which the minimum degree is d S = |S| − 1.
This shows that for resolving a clique, transmitting a single equation, namely sum of all packets in the clique, is adequate.
SoT (G S ) = 1 if G S is a clique.
Then i=1 T (G Si ) ≥ > 1 = T (G S )which completes the proof.We are ready now to give the proof of the Lemma 2.
Proof of Lemma 2: Consider the undirected graph G = (V, E) where |V | = m. Further, assume that the maximum sum-degree cover is the set of subgraphs G S1 , · · · , G S K which are induced by set of nodes S 1 , · · · , S K .
Note that S 1 , · · · , S K is a partition of the set V .
Furthermore, assume that each subgraph has the minimum degree d i .
The clique cover is also a partitioning of the graph into some disjoint subgraphs where each subgraph is a clique.
Further, for each clique, the minimum degree is one less than number of the nodes in the clique, i.e., we need exactly one transmission to resolve each clique.
Thus, we havem − K i=1 d i ≤ χ(G),(7)where χ(G) is the clique cover number of G.
Now consider one of the subgraphs, namely G S1 .
Since G S1 has the minimum degree d 1 , its complement graph G S1 has the maximum degree|S 1 | − 1 − d 1 .
Further, by Welsh-Powell algorithm [12], any graph with maximum degree d has a vertex coloring of size d+1.
So we can color G S1 by |S 1 |−d colors.
Based on definition of coloring, however, we know that two nodes can have the same color, if they are not adjacent.
As a result, if two nodes have the same color in G S1 , then they are adjacent in G S1 , i.e., all nodes with the same color in G S1 form a clique in G S1 .
So there exists a clique cover of size |S 1 | − d 1 for G S1 .
We, however, do not know if this is the minimum clique cover of G S1 , so|S 1 | − d 1 ≥ χ(G S1 ).
Note that partitioning these cliques further is strictly suboptimal by Lemma 3, i.e., partitioning these cliques will decrease the sum of min degrees.
We can repeat the same procedure over all subgraphs and decompose each one to |S i | − d i cliques for i = 1, · · · , K. Further, it is apparent that the minimum clique cover of graph G is less than or equal to the sum of the minimum clique covers of all subgraphs G S1 , · · · , G S K .
As a resultm − K i=1 d i ≥ χ(G).
(8)The above together with (7) shows thatm − K i=1 d i = χ(G).
(9)So the costs of both optimizations are the same.
Now, we show that by solving each problem, namely clique cover or sum-degree cover, we can find the solution for the other one with number of computations polynomial in m. Assume we have the solution for the clique cover, from (9) we know that the minimum clique cover is also the maximum sum-degree cover, i.e., the same clique cover can be used as partitions of sum-degree cover.
Further, assume that we have the solution of the sum-degree cover.
By running the Welsh-Powell algorithm on the complement of each subgraph, we find a clique cover for the subgraph.
From (9) it follows that the clique cover of all the subgraphs together is the minimum clique cover of G.
This Lemma shows that for any family of undirected graphs for which β(G) is equal to the minimum clique cover, our scheme is optimal and can achieve β(G).
The authors would like to thank Dorit Hochbaum and Gerhard Kramer for fruitful discussions.
