In this paper, we analyze the problem of network dis-connection in the context of large-scale P2P networks and understand how both static and dynamic patterns of node failure affect the resilience of such graphs.
We start by applying classical results from random graph theory to show that a large variety of deterministic and random P2P graphs almost surely (i.e., with probability 1 − o(1)) remain connected under random failure if and only if they have no isolated nodes.
This simple, yet powerful, result subsequently allows us to derive in closed-form the probability that a P2P network develops isolated nodes, and therefore partitions , under both types of node failure.
We finish the paper by demonstrating that our models match simulations very well and that dynamic P2P systems are extremely resilient under node churn as long as the neighbor replacement delay is much smaller than the average user lifetime.
During the recent explosion of P2P research, network resilience has become an important issue [17], [19], [29], [38].
The primary interest in this line of study is to understand how dynamic user arrivals and abrupt departures affect the connectivity (and sometimes other metrics) of the system.
The original thrust [20], [19], [38] in this direction focused on static node failure, where a fully-populated network experienced simultaneous node failures with independent probability p.
While analytical results on the exact probability of disconnection under static failure are currently unavailable in the literature, prior analysis suggests that P2P networks are highly resilient to node faults and can survive the failure of up to 50% of the graph without significant degradation in performance [38].
Since users in P2P networks rarely fail simultaneously [5], a different approach [23], [26], [32] is to examine disconnection in dynamic systems, where users continuously join and leave the network according to some arrival/departure processes.
The only analytical results available on the dynamic resilience of generic P2P networks correlate the rate of churn with user notification frequency [26] and examine how stabilization delays affect the consistency of Chord's finger table [23].
In this paper, we bridge the gap between static and dynamic disconnection analysis and show that the problem of graph partitioning under both types of failure can be reduced to computation of the probability that a P2P network develops at least one isolated node during the failure.
Under the umbrella of this unifying model, we then derive a closed-form model for static resilience and examine the same issue in dynamic networks where users depart the system after spending random amounts of time online.
Our results show that under p-percent static failure, almost every sufficiently large k-regular P2P graph G of n nodes remains connected with probability: P (G is connected) = e −n(1−p)p k .
(1) Using Chord's degree k = log 2 n and the commonly used failure probability p = 1/2 [20], [38], it immediately follows that Chord remains connected after 50%-percent failure with probability e −0.5 ≈ 0.6.
Also notice that for p < 1/2, this probability converges to 1 (i.e., almost every graph is connected) as n → ∞ and for p > 1/2, it converges to 0 (i.e., almost every graph is disconnected).
Outside of static resilience, our second result is the derivation of disconnection probabilities for dynamic systems, which frequently exhibit high levels of churn [5], [26] and are more mathematically elusive.
To capture user behavior in such systems, we propose a simple node-failure model in which users stay in the system for random periods of time before deterministically failing at the end of their lifetime.
To maintain a resilient system, we assume that each node monitors its neighbors and randomly replaces 1 them upon detecting their failure.
Replacement delays S i and lifetimes L i are drawn from some (possibly heavy-tailed) distributions and generally determine the resilience of the system.
Our main result demonstrates that dynamic k-regular P2P systems can survive N user joins without partitioning with probability at least:P (G survives N joins) ≥ 1 − ρk (1 + ρ) k + ρk − 1 N , where ρ = E[L i ]/E[S i ]is the ratio of the mean user lifetime to the mean neighbor replacement delay.
To understand this result, consider the following example.
Given a system with 5 million users that join the network once a day, k = 12 neighbors per node, mean user lifetime of 0.5 hours, and 1-minute search delay (i.e., ρ = 30), the probability that the network survives for 10, 000 years without disconnecting is 99.2%.
This paper is organized as follows.
Section 2 examines previous work.
Section 3 discusses how isolated nodes affect graph connectivity under both static and dynamic node failure.
Section 4 focuses on static resilience and Section 5 discusses the dynamic case.
Section 6 describes some implications of our results to real-world systems.
Section 7 concludes the paper.
One of the first approaches to network reliability stems from random graph theory.
The issue of partitioning and disconnection of random graphs G(n, p) has a long history [14].
It is well-known that, as with any other monotone property, connectivity of G(n, p) experiences a sharp transition from "almost never" to "almost always" at the threshold p = log n/n; however, a more powerful result states that G(n, p) and all of its derivatives [8], [33] are almost surely connected if and only if they have no isolated nodes.
Defining Φ(G) to be the probability that a random graph remains connected under node or edge failure and assuming X is the number of isolated nodes in the graph, the following holds with probability 1 − o(1) as the size of the graph n → ∞:Φ(G) = P (X = 0).
(2) After some technical manipulation, a result similar to (2) can be shown to hold for certain deterministic networks as well.
For example, Burtin [9] and later Bollobas [7] prove that under independent uniform failure, hypercubes are almost surely connected if and only if they have no isolated nodes.
Intuitively, this result means that the conditional probability that a hypercube partitions along a set boundary 2 ∂S, for some non-trivial set S, while having no isolated nodes is o(1) as n → ∞.
We leverage these observations later in the paper.Connectivity of generic deterministic graphs G = (V, E) under independent node failure has also received significant attention in the literature [6], [16], [21].
In this line of work, Φ(G) is called residual node connectivity and can be written as:Φ(G) = n i=1 S i (G)p n−i (1 − p) i ,where p is the failure probability of each node and S i (G) is the number of connected induced subgraphs of G with exactly i nodes [6].
While this closed-form expansion is beneficial for simple graphs (such as trees), computation of Φ(G) for a generic graph requires the knowledge of an NPcomplete [39] metric S i (G), whose expression is unknown even for the basic hypercube.Najjar and Gaudiot [30], however, noticed that several non-hypercube deterministic networks frequently develop disconnections around individual nodes rather than along boundaries of larger sets S, |S| ≥ 2.
This lead to the following model for the probability that an n-node, k-regular graph partitions under p-percent node failure [30]:Φ(G) = n i=0 Q i n i p i (1 − p) n−i ,(3)whereQ i = i j=1 1 − k(n − k − 1)!
(j − 1)!
(n − j) (n − 1)!
(j − k)!
.
(4)Other approaches that study disconnection of hypercubes include [12], [15], [18], [24]; however, none of them provide a practically usable model that is both accurate and simple to evaluate.
Given the wide variety of recently developed P2P systems, several techniques have been employed to evaluate the resilience of such graphs.
One commonly-used method is to monitor several performance metrics (e.g., percentage of successful queries, graph connectivity, consistency of links) under node failure and show how they change depending on system parameters.
A seminal paper in this genre written by Gummadi et al. [19] explores the impact of different routing geometries on the static resilience of the graph, which is defined as the ability of the graph to route messages before the designed recovery algorithm repairs the graph.
Other papers that examine static resilience in a similar fashion are [27], [34], and [36].
A more recent study by Chun et al. [13] uses simulations to analyze the impact of different types of neighbor-selection algorithms on static resilience of P2P graphs under both random node failures and targeted attacks.
The paper demonstrates that there is a distinct tradeoff between resilience and system performance.The second approach is more analytical in nature.
Chord [38] and Koorde [20] show that under independent uniform node failure, k-regular graphs require degree k ≥ log 1/p n in order to upper-bound the probability of individual node isolation by 1/n.
Massoulie et al. [17], [29] develop a new P2P system based on random graphs and derive the probability that it remains connected under p-percent failure.
Liben-Nowell et al. in [26] study the dynamic nature of P2P systems in regards to joins and unexpected departures and their impact on routing efficiency.
The authors derive a lower bound on the number of users a node must be notified about in order for the system to avoid disconnection.
In a more recent paper, Krishnamurthy et al. [23] focus on predicting the state of each finger pointer in a Chord system under dynamic failure conditions.
They derive a probabilistic characterization of each neighbor and successor pointer, which allows them to obtain models for the percentage of failed queries in the system under user churn.
In this section, we discuss how connectivity of P2P systems under static and dynamic node-failure patterns can be reduced to the problem of node isolation.
We first turn to the question of what properties a graph G must possess in order to satisfy (2) under random edge and node failure.
Interestingly, the property that makes hypercubes (and classical random graphs) very unlikely to partition into non-trivial subgraphs without developing isolated nodes is that the number of edges leaving each set S is an increasing function of set size |S|.
Burtin [9] showed that for each set S in a hypercube, the size of its edge boundary 3 is at least:|{(u, v) ∈ E : u ∈ S, v ∈ V \S}| ≥ |S|(k −log 2 |S|), (5)where k = log 2 n is the degree of the graph.
Condition (5) states that larger sets S are always better connected than smaller sets (up to half the graph in size) and ensures that the probability that any large subgraph disconnects after node failure is negligible compared to that of individual node isolation.While the necessary conditions on G for (2) to hold are generally unknown, one can formulate a simple sufficient condition as stated below.
Proposition 1.
If a graph G has node expansion properties no worse than those of hypercubes or random graphs (as defined in [8]) of the same size, it will remain almost surely connected under random node failure if it has no isolated nodes.The statement of Proposition 1 is purposely generic so as to apply to as many types of graphs as possible.
This result clearly holds for all DHTs that can be reduced to the hypercube, which includes Chord [38], logarithmic CAN with d = Θ(log n) [34], randomized Chord [28], Tapestry [41], and Pastry [36].
It also holds for graphs (e.g., de Bruijn [27]) that have better expansion than hypercubes as long as k = Ω(log n) and all types of random Gnutella-style networks where each user relies on random selection of neighbors during join.
Even though Proposition 1 refers to graphs of asymptotically large size, extensive simulations below demonstrate the application and exceptional accuracy of (2) in graphs of finite size.
Recall that static resilience alludes to the connectivity of a graph G after each node is removed from the graph independently with probability p.
In this section we examine the accuracy of (2) in a wide array of networks that satisfy Proposition 1.
In order to enhance the understanding of how graphs disconnect, we introduce another metric that captures the percentage of disconnections that contain at least one isolated node, which we denote by q(G):q(G) = P (X > 0|G is disconnected) = P (X > 0) 1 − Φ(G) ,where X is the number of isolated nodes as before.
Interpreting this metric in the context of Proposition 1, it follows that q(G) in almost all well-connected graphs must tend to 1 as n → ∞.
We computed Φ(G), P (X = 0), and q(G) for a number of degree-regular and irregular P2P networks using 100, 000 node-failure patterns for each value of p. To deal with directed graphs, we assumed that each node's in-degree and out-degree neighbors contributed to its resilience and that isolation happened when a node lost Pastry n = 15625, k = 24 Φ(G) P (X = 0) q(G) Φ(G) P (X = 0) q(G) Φ(G) P (X = 0) q(G) Φ(G) P (X = 0) q(G) .
p Symphony k out = 14 Gnutella k out = 14 Randomized Chord k out = 14 Random-Zone Chord k out = 14 Φ(G) P (X = 0) q(G) Φ(G) P (X = 0) q(G) Φ(G) P (X = 0) q(G) Φ(G) P (X = 0) q(G) .4.
all of its in-and out-degree neighbors.
Similarly, a directed P2P network was considered partitioned (disconnected) when its undirected version was, which is a measure of weak connectivity of directed graphs.
For each directed P2P system, denote by k out its outdegree.
Then, after some manipulation, it is not hard to obtain that Chord's total node degree is k = 2k out − 1 = 2 log 2 n − 1 and de Bruijn's degree is k ≈ 2k out .
Table 1 shows the above three metrics for degree-regular DHTs Chord [38] with k out = 14 and k = 27, CAN [34] with k = 14, de Bruin [20] with k out = 12 and k = 24, and undirected Pastry [36] with k = 24, each populated with the maximum number of users.
As shown in the table, Φ(G) is very close to P (X = 0) for all graphs and all values of p. Further notice that q(G) ranges between .9966 and 1, which confirms that almost every disconnection in this family of graphs occurs with at least one isolated node.For degree-irregular graphs, simulations in Table 2 demonstrate that Symphony [28], Gnutella (a random graph with a fixed out-degree k out ), Randomized Chord [28], and "Random-zone" Chord (i.e., Chord with a random partitioning of the circle) also follow the classical result well.
Besides the fact that Φ(G) is very close to P (X = 0), notice in Table 2 that the performance of Chord with random zone sizes is inferior to load-balanced (i.e., complete) Chord since there is more possibility for nodes with smaller-than-average degree to disconnect the graph.
While the use of p-percent uniform node failure provides an accurate approximation of actual network behavior in some cases, it has been noted that it has questionable applicability to real P2P networks [5], [26], where users join and leave the system asynchronously based on their individual browsing habits.
One approach to modeling such systems is to assign each joining user a random lifetime L i , which determines the duration that node i stays in the system before abruptly (i.e., without graceful notification of its neighbors) departing from the network and represents the amount of time a user spends in the network browsing for content and/or providing services to other peers.Most structured P2P systems [28], [38], [34] use DHT-specific neighbor-replacement algorithms to repair the zones of failed nodes and maintain consistency of routing.
Certain unstructured systems [11] also explicitly perform replacement of failed neighbors to achieve the desired level of routing and search performance.
In addition to maintaining consistency of routing [38] and avoiding congestion in the graph [11], neighbor replacement serves the purpose of keeping the system resilient to dis- Chord, N = 50, 000 delay Simulations Model (7) Simulations Model (6 Table 3.
Lifetime simulations of the probability P (Z > N ) that the network survives at least N user joins (fixed search delays).
connection.
We next examine the question of how quickly failed neighbors should be replaced and what levels of resilience one should expect from churn-based P2P networks.Throughout the paper, we assume that each node performs a "search" to find new neighbors as soon as it detects the failure.
At this stage, we are not concerned with how this is accomplished and combine both failure detection and repair into a generic random variable S i that measures the total delay required to perform these operations.
Given this new paradigm of node-failure, we now define the probability φ that a given user i becomes isolated during its lifetime because its neighbors are failing at a faster rate than i is able to obtain their replacements from among the remaining nodes.
We derive φ in the following sections; however, we now show how the knowledge of this local metric can be used to study global resilience of lifetime-based P2P networks.Define Z to be the random time (in terms of user joins) when graph G disconnects for the first time.
Then assuming that G satisfies Proposition 1 and each joining node i is assigned a Bernoulli random variable X i that determines whether the user is isolated from the network during its lifetime, the probability that the graph stays connected for more than N user joins is almost surely:P (Z > N ) = P N i=1 [X i = 0] = N i=1 (1 − E[X i ]).
(6)For k-regular graphs, each user has the same probability of isolation (i.e., E[X i ] = P (X i = 1) = φ) and the above reduces to:P (Z > N ) = (1 − φ) N .
(7)We next verify this evolution model and applicability of (7) using simulations, where both E[X i ] and φ are computed empirically.
The simulations use two types of DHTs and two distributions of lifetimes: exponential with CDF 1 − e −λx and shifted Pareto with CDF 1 − (1 + x/β) −α .
The first system under study is a 12-regular fully-populated CAN with exponential lifetimes, λ = 2 (mean lifetime 30 minutes), n = 4096 users, and N = 10 6 .
The second system is a random-zone degree-irregular Chord with Pareto lifetimes, α = 3, β = 1 (mean lifetime also 30 minutes), n = 128 users, k ≈ 13 (out-degree 7), and N = 50, 000.
Simulation results are shown in Table 3, where both models (6)- (7) match P (Z > N ) well.
Observe in the table that zone-balanced CAN is significantly more resilient that random-zone Chord since the latter frequently develops isolation around nodes with smaller-than-average degree.
4 In fact, the resilience of CAN is quite impressive as it can survive 1 million user joins with probability 0.97 using 6-minute replacement delays.Next, notice that while the node-failure scenario of this section is different from that in the static case, the previous conclusions about graph disconnection through isolated nodes still hold.
Table 3 already confirms this fact; however, additional analysis of the disconnection pattern observed in simulations demonstrates that in cases when disconnection does occur, the largest connected component of dynamic systems almost always contains exactly n − 1 nodes.
This implies a much stronger result: for reasonably small search delays, network partitioning in lifetime-based systems almost surely effects only one node in the system.
This section develops a simple closed-form model for P (X > 0), i.e., the probability that the graph contains at least one isolated node, under static node failure and compares this result to simulations of Φ(G).
In the next section, we address the issue of dynamic node failure and derive a model for φ.
Assume that each node i has k i neighbors in some graph G and again define X i to be a Bernoulli indicator variable of whether node i is isolated or not after each node is removed from the system with independent probability p:X i = 1 isolated and alive 0 otherwise .
Denote by p i = P (X i = 1) = (1 − p)p k i the probability that i is isolated and alive after the failure.
Next, notice that {X i } may be identically or non-identically distributed, but they are almost certainly dependent.
However, as n → ∞, this dependency in graphs satisfying Proposition 1 becomes negligible and {X i } asymptotically behave as if they were independent [4], [8].
This is a consequence of the fact that in the P2P graphs under study, any two nodes i and j have a fixed number of common neighbors, which becomes negligible compared to the total degree k = Ω(log n) as n → ∞.
Next, let X = n i=1 X i be the total number of isolated nodes in G. Applying Markov's inequality P (X ≥ 1) ≤ E[X], we directly obtain the next lower bound on the connectivity of the system.
Φ(G) ≥ 1 − n i=1 p i .
(8)While this bound is very tight for small p and is better than those shown in [12] for all values of p, it produces negative values for sufficiently high failure rates.
To overcome this limitation, an alternative approach is to notice that X is in fact a sum of a large number of Bernoulli random variables with certain well-know asymptotic properties.
Due to the diminishing dependency between {X i } as n → ∞, we can applying the Chen-Stein method [4] to X and immediately obtain a much tighter result on Φ(G).
n → ∞, the number of isolated vertices X tends to a Poisson distribution with mean λ = i p i and the probability Φ(G) of having a connected graph converges to e −λ with probability 1.
In the next two sections, we use this generic result to obtain static disconnection models for both degree-regular and irregular graphs.
For degree-regular networks, the previous result simplifies to a trivial closed-form expression:Φ(G) = e −n(1−p)p k .
(9)p Symphony Gnutella Randomized Chord Φ(G) Model Φ(G) Model Φ(G) Model .4.
Table 5.
Simulation results and model (10) for three irregular graphs.To verify (9), we compare Φ(G) calculated in simulations over 100, 000 node failure patters to that of the model in Table 4 for Chord [38] with k = 27 (n = 16384) and de Bruijn graphs [20] with k = 24 (n = 20736).
As the table shows, simulations follow the model quite well for each graph over all values of p. For comparison purposes, the table also plots Najjar's model (3), which is surprisingly less accurate than (9) and significantly more complex to compute.
While many ideal DHTs are degree-regular, their instances under random node join and departure often exhibit degree irregularity that depends on random partitioning of the DHT space (e.g., zone-size distribution in Chord).
Additional degree-irregular graphs include DHTs in which the in-degree is random (e.g., Symphony, Randomized Chord [28]) and unstructured P2P systems such as Gnutella.
For such graphs, we obtain the probability of disconnection under static failure:Φ(G) = e −(1−p) i p k i ≈ e −n(1−p)E[p k i ] ,(10)where i p ki is approximated by nE[p ki ] treating k i as a random variable.To compute this model, we first use simulations to obtain E[p ki ] and then utilize this value in (10).
Simulations of Φ(G) for Gnutella, Randomized Chord [28], and Symphony [28], all with degree k out = 14 and 16384 nodes, are shown in Table 5, which demonstrates that the model follows simulation results very accurately for all values of p.To our knowledge there are no results on this topic for degree-irregular graphs with which to compare our model.
As Najjar's result (3) is based on a complicated combinatorial argument that only applies to k-regular graphs, it cannot be easily extended to degree-irregular networks.
The results of this section have confirmed that largescale P2P networks generally disconnect through isolated nodes, both in degree-regular and irregular cases.
Metric q(G) in all studied simulations has remained between 0.968 and 1, where deviation from 1 was more apparent in smaller graphs and cases when the degree of certain nodes was allowed to become much smaller than average (e.g., in Random-Zone Chord).
For larger graphs (hundreds of thousands or millions of nodes), the agreement between Φ(G) and P (X = 0) will become even stronger.
Using lifetime-based concepts developed in Section 3, we next derive the probability φ that all k neighbors of a given node v are simultaneously in the failed state before the lifetime of node v expires.
We start with formalizing churn-based P2P systems and explaining our assumptions.
Previous research suggests that the distribution of user lifetimes in real systems is often heavy-tailed (i.e., Pareto) [10], [37], where most users spend very little time browsing the network, while a small group of other peers remain logged in for weeks at a time providing services to other peers.
Thus, to allow arbitrarily small lifetimes, we use a shifted Pareto distribution F (x) = 1 − (1 + x/β) −α , x > 0, α > 1 to represent heavy-tailed user lifetimes, where scale parameter β > 0 can change the mean of the distribution without affecting its range (0, ∞].
Note that the mean of this distribution E[L i ] = β/(α − 1) is finite only if α > 1, which we assume holds throughout the paper.In addition to node v selecting k original neighbors when it joins the graph, most current P2P systems repair broken routes and increase resilience by replacing neighbors that have failed by nodes that are still present in the graph.
Failure detection can be easily performed through transport or application-layer keep-alive mechanisms, which may include periodic probing, retransmission of lost messages, and timeout-based decisions to search for a replacement.
Once a failure is detected, a repair algorithm is initiated to replace the failed neighbor.
Since the delays required to carry out these actions are usually random, we use variable S i to denote the replacement (or search) time of the i-failure in the system.
We impose the following restrictions on the systems we study to maintain tractability.
We only consider those networks that have evolved enough to allow asymptotic results from renewal process theory to hold (this usually applies in practice since real P2P systems continuously evolve and seldom or never restart).
We also require certain stationarity of lifetime L i , which means that all users joining the system have the same lifetime distribution F (x).
While it may be argued that users joining late at night browse the network longer (or shorter) than those joining in the morning, our results below can be easily extended to non-stationary environments and used to derive upper/lower bounds on the performance of such systems.
Finally, we allow the number of nodes n in the system to vary with time according to any arrival/departure process as long as n remains sufficiently large.We also impose some conditions on neighbor selection, where we assume that selection of a node i is independent of i's lifetime L i and its current age A i .
The first assumption holds in practice since each node does not generally know how long the user plans to browse the network.
The second assumption also holds in most current P2P systems [20], [34], [36], [38], [11] since neighbor selection is performed based on a uniform hashing function in the case of DHTs or other methods (e.g. random walks) in the case of unstructured P2P graphs.
An important consequence of these assumptions is that we can model the instance when v selects a neighbor to be uniformly random within the neighbor's lifetime (i.e., its presence online).
Next, we formalize the notion of residual lifetimes and understand how to model neighbor evolution.
Define R i to be the remaining lifetime of node i when it was selected by a joining user v to be its neighbor.
As before, let F (x) be the CDF of lifetime L i .
Assuming that n is large and the system has reached stationarity, the CDF of residual lifetimes is given by [35]:F R (x) = P (R i < x) = 1 E[L i ] x 0 (1 − F (z))dz.
(11)For exponential lifetimes, which we study in this section for comparison purposes, the residuals are trivially exponential using the memoryless property of F (x): F R (x) = 1−e −λx ; however, the residuals of Pareto distributions with shape α are more heavy-tailed and exhibit shape parameter α − 1:F R (x) = 1 − 1 + x β 1−α .
(12)This means that Pareto-lifetime systems under churn are more resilient than the corresponding exponential systems for a given average lifetime since each user in the former case acquires neighbors with larger remaining lifetimes than those in the latter case.
This can be explainedby the fact that E[R i ] = β/(α − 2) is larger than E[L i ] = β/(α − 1)for all values of α and that residual lifetimes R i in the Pareto case are stochastically larger than the corresponding lifetimes.Next, assume that each neighbor j (1 ≤ j ≤ k) of node v is either alive at any time t or v is searching for its replacement.
Thus, neighbor j can be considered in the on state at time t if it is alive or in the off state otherwise.
This neighbor failure/replacement procedure can be modeled as an alternating renewal process Y j (t):Y j (t) = 1 neighbor j alive at t 0 otherwise .
(13)Note that the average on delay of each process Y j (t) is E[R i ] and the average off delay is E[S i ].
Using this notation, the degree of node v at time t is equal to W (t) = k j=1 Y j (t).
Denote by T the time at which a node is isolated when all of its neighbors are simultaneously in the off state.
Thus, the maximum time a node can spend in the system before it is isolated can be written as the first hitting time of process W (t) on level 0:T = inf(t > 0 : W (t) = 0|W (0) = k).
(14)Notice that for exponential L i and S i , process W (t) is a birth-death chain with an absorbing state 0.
We thus first develop a model for T assuming Markovian behavior of W (t) and then extend it to non-exponential cases.
In this section, we analyze the probability that a node v becomes isolated due to all of its neighbors simultaneously reaching the failed state during v's lifetime.
Assuming L v is the random lifetime of node v, notice that φ is simply P (T < L v ).
To obtain this metric, we start with deriving the stationary distribution of W (t).
Proposition 4.
For exponential lifetimes and exponential search delays, the stationary distribution of W (t) is given by:π j = lim t→∞ P (W (t) = j) = k j ρ j (1 + ρ) k ,(15)where ρ = E[L i ]/E[S i ].
Proof.
Denote by µ = 1/E[L i ] the node-failure rate and by λ = 1/E[S i ] the node-recovery rate.
Then, the rate of transitions from state j < k to state j + 1 is q j,j+1 = (k − j)λ and from state j > 0 to state j − 1 is q j,j−1 = jµ.
Treating W (t) as a Markov chain, the balance equations assume the following shape:π j = π j−1 (k − j + 1)λ jµ = π 0 ρ j k!
j!
(k − j)!
,(16)where ρ = λ/µ.
Summing up all probabilities, we have:π 0 k i=0 k i ρ i = 1.
(17)Noticing that the above is a binomial expansion of (1 + ρ) k , we get π 0 = 1/(1 + ρ) k and directly obtain (15).
Before proceeding to the next result, we define Q 0 to be the rate matrix that corresponds to states 1, . . . , k of W (t) (i.e., without the absorbing state 0).
Therefore, assuming Q is the rate matrix of the entire chain, we can write:Q = 0 0 r Q 0 ,(18)where r is a column vector of transition rates into state 0.
Furthermore, define a diagonal matrix Π = diag(π j ) of the stationary states of W (t), a scaled rate matrix R = Π 1/2 Q 0 Π −1/2 , and the j-th orthonormal eigenvector x j of R.
Then we have the CDF of hitting time T as follows.Proposition 5.
For exponential lifetimes and exponential search delays, the CDF of T is:P (T < t) = k j=1 (δv j )(u T j r)(1 − e −ξj t ) ξ j ,(19)where −ξ j is the j-th eigenvalue of R, δ = (0, 0, . . . , 1) is a 1 × k vector, v j = Π −1/2 x j , and u j = Π 1/2 x j .
Proof.
Since W (t) is a reversible Markov chain, the PDF of its first hitting time to state 0 starting from state k can be written as a mixture of exponential distributions with rates ξ j [22]:f T (t) = k j=1 (δv j )(u T j r)e −ξ j t .
(20)Integrating (20) with respect to t, we obtain (19).
Proposition 6.
For exponential lifetimes and exponential search delays, the probability of isolation is:φ = k j=1 (δv j )(u T j r) µ + ξ j ,(21)where µ = 1/E[L i ] and the remaining variables are the same as in the previous proposition.1.E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-021 1.E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-02 1.E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-02 1.E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-02 Proof.
Setting β j = (δv j )(u T j r) and integrating (19) using the PDF f (t) of user lifetimes, we obtain:φ = P (T < L v ) = ∞ 0 P (T < t)f (t)dt = ∞ 0 k j=1 β j (1 − e −ξj t ) ξ j µe −µt dt = k j=1 β j ξ j ∞ 0 µ(e −µt − e −(ξ j +µ)t )dt,(22)which directly leads to (21).
We next verify (21) in simulations and show that it is very accurate for non-exponential search delays as well.
Figure 1 shows φ obtained in simulations using four distributions of search time for a graph with k = 8 and mean lifetime E[L i ] = 0.5 hours.
Denoting by s the mean search delay, the first distribution is uniform in [0, 2s], the second is constant equal to s, the third is exponential with rate 1/s, and the fourth is Pareto with α = 3 and β = s(α−1).
As the figure indicates, all four cases are very close to the values predicted by (21), which can be explained by the quicklymixing properties of W (t) and relatively small values of search delays S i [1].
Simulations with other values of k and E [L i ] demonstrate that as search delays become small (i.e., E[S i ] → 0), the above model is accurate for any distribution of search delays as long as lifetimes are exponential.
Since (21) requires the spectrum of matrix R, our next task is to simplify this model and obtain a simple closedform expression for φ that does not involve any numerical manipulation.
The following result holds assuming asymptotically small search delays.Proposition 7.
For exponential lifetimes and exponential search delays, the probability of isolation is given by the following as E[S i ] → 0:φ = ρk (1 + ρ) k + ρk − 1 + o(1),(23)whereρ = E[L i ]/E[S i ]is the ratio of the mean user lifetime to the mean search delay.Proof.
The proof proceeds in two steps.
We start by deriving the expected time E [T ] before the first visit to state 0 and then use an exponential approximation to the density of T to obtain an asymptotic expansion of φ.We begin by deriving E [T ] in closed-form assuming that search delays are reasonably small.
Treating the chain as non-absorbing throughout this proof and denoting by T 00 the delay between the visits to state 0, we get using the stationary distribution π derived in Proposition 4:E[T 00 ] = 1 π 0 q 0 = E[S i ] k (1 + ρ) k ,(24)whereq 0 = kλ = k/E[S i ]is the rate of transition in the non-absorbing chain from state 0 to itself.
Using the fact that the relaxation time of the chain is asymptotically small compared to E[T 00 ] (see below) and assuming that the chain starts in its stationary state, the expected delay before the first visit to state 0 converges to the mean delay between the subsequent visits to the same state [2].
Thus, subtracting from E[T 00 ] the average time spent in state 0, we get:E π [T ] = E[T 00 ] − 1 q 0 + o(1) = E[S i ] k (1 + ρ) k − 1 + o(1),(25)where E π [T ] denotes the mean first hitting time on state 0 assuming that the initial distribution of W (0) is the stationary distribution π of the chain.
Notice, however, that as E[S i ] → 0, the stationary distribution π given in (16) converges to the actual initial distribution of the chain (i.e., π → (0, 0, . . . , 1) and W (0) = k with probability 1), which leads toE[T ] = E π [T ] + o(1).1.
E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-021 1.E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-02 1.E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-02 1.E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-02 Next, observe that for small search delays S i , E[T ] is large and state 0 is visited rarely.
This allows the application of Aldous' inequality [3] for rare events in Markov chains, which states that T asymptotically behaves as an exponential random variable with mean E[T ]:|P (T > t) − e −t/E[T ] | ≤ τ E[T ] , (26)where τ is the relaxation time of the chain.
For the birthdeath chain of our case, it can be shown [25] that τ = 1/(λ + µ) ≈ E[S i ], where the last approximation holdsassuming that E[S i ] E[L i ].
Hence as E[S i ] → 0, relax- ation time τ = o(1)and the bounds in (26) reduce to:P (T > t) = e −t/E[T ] + o(1).
(27)Integrating (27) with respect to the PDF f (t) of user lifetimes, we get:φ = P (T < L v ) = ∞ 0 P (T < t)f (t)dt = ∞ 0 (1 + o(1) − e −t/E[T ] )µe −µt dt = 1 µE[T ] + 1 + o(1).
(28)Using (25) and recalling that µ = 1/E[L i ], we obtain (23) as the asymptotic shape of φ whenE[S i ] → 0.
This model is verified in Figure 2 for the same four cases of search delay S i .
Notice that the asymptotic model is less accurate for the exponential search delays, but provides an almost exact match to the constant delay case (part (b) in the figure).
Also observe that as E[S i ] becomes smaller, all four cases indeed converge to (23) and achieve isolation probability φ ≈ 4.2 × 10 −9 when the expected search time reduces to 1.5 minutes Also note that constant search delays provide the worstcase scenario for isolation, while highly-variable distributions of S i are the best.
This immediately follows from theE[S i ]Model (21) Model (23 non-negative nature of search times and the fact that for a given E[S i ] higher variance of S i implies that more probability mass is concentrated at values well below E[S i ].
We thus obtain that random search delays can only improve the resilience of the system compared to the worst-case scenario (i.e., constant S i ).
This can be observed in Figure 2 where φ in part (b) is the largest among the four cases.
Since constant search delays produce an almost ideal match to the approximate model, the result in (23) can be treated as an upper bound on φ for all cases with exponential lifetimes.To finish this subsection, we examine the convergence of approximation (23) to the exact model (21) in more detail.
Table 6 shows the values of φ produced by both models as E[S i ] becomes very small.
Observe in the table that both models indeed converge and that the relative difference diminishes to zero as E[S i ] becomes small.
Due to the non-Markovian nature of W (t) under Pareto lifetimes and its slowly mixing properties, derivation of φ for this case is very complicated.
Furthermore, the result is expected to be sensitive to the exact value of parameters α and β of the Pareto distribution, which are difficult to measure and may vary from system to system.
We leave the exploration of Pareto φ for future work and instead utilize the exponential metric (23) as an upper bound on φ in systems with sufficiently heavy-tailed lifetime distributions.
The re-1.
E-101.
E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-021.
E-011.
E-021.
E-01 1.
E+00 mean search time E[S] (hours) isolation probability simulations bound (a) uniform S i1.E-101.
E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-021.
E-011.
E-021.
E-01 1.
E+00 mean search time E[S] (hours) isolation probability simulations bound (b) constant S i1.E-101.
E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-021.
E-011.
E-021.
E-01 1.
E+00 mean search time E[S] (hours) isolation probability simulations bound (c) exponential S i1.E-101.
E-091.
E-081.
E-071.
E-061.
E-051.
E-041.
E-031.
E-021.
E-011.
E-021.
E-01 sult below follows from the fact that heavy-tailed L i imply stochastically larger residual lifetimes R i and that (23) provides an upper bound for all search delay distributions.
For an arbitrary distribution of search delays and any lifetime distribution F (x) with an exponential or heavier tail, which includes Pareto, lognormal, Weibull, and Cauchy distributions, the following upper bound holds:φ ≤ ρk (1 + ρ) k + ρk − 1 ,(29)whereρ = E[L i ]/E[S i ]is the ratio of the mean user lifetime to the mean search delay.For example, using 30-minute average lifetimes, 9 neighbors per node, and 1-minute average node replacement delay, the upper bound in (29) equals 1.02 × 10 −11 , which allows each user in a 100-billion node network to stay connected to the graph for his/her entire lifespan with probability 1 − 1/n.
Using the uniform failure model of prior work and p = 1/2 [38], each user requires 37 neighbors to achieve the same φ regardless of the actual dynamics of the system.To confirm that the upper bound (29) holds in practice, Figure 3 shows φ in simulations with Pareto lifetimes with E[L i ] = 0.5 and k = 8.
Observe in the figure that Pareto systems are in fact more resilient than those with exponential lifetimes.
Also notice that constant search delays once again provide the worst-case resilience for a given E[S i ] and that the difference between the Pareto and exponential φ is by a constant factor (i.e., the two curves become paral-lel as E[S i ] → 0).
Even though exponential φ is often several times larger than the Pareto φ (the exact ratio depends on shape α), it turns out that the difference in node degree needed to achieve a certain level of resilience is usually negligible.
To illustrate this result, Table 7 shows the minimum degree k that ensures a given φ for different values of search time E[S i ] and Pareto lifetimes with α = 3, β = 1 (E[L i ] = 0.5 hours).
The column "uniform p = 1/2" contains degree k that can be deduced from the p-percent failure model (for p = 1/2) discussed in previous studies [38].
Observe in the table that the exponential case in fact provides a tight upper bound on the actual minimum degree and that the difference between the two cases is at most 1 neighbor.
We now apply the newly acquired model for the probability of isolation φ to (7) and examine its accuracy in simulations.
Re-writing (7), the dynamic resilience of a graph G is lower-bounded by:P (Z > N ) ≥ 1 − ρk (1 + ρ) k + ρk − 1 N ,(30)where Z is the number of user joins before the first disconnection of the system.
and that the graph never partitions without having at least one isolated node (i.e., q(G) = 1).
To further illustrate the gravity of (30) when used as a lower bound on the performance of lifetime-based P2P systems, consider the example first mentioned in the introduction.
In a k-regular P2P system with k = 12 for each neighbor, search delay E[S i ] = 1 minute, and average lifetime E[L i ] = 0.5 hours, the probability of isolation is φ = 4.57 × 10 −16 .
When φ is applied to (30) in which 35 million users join and leave the system each week, the probability that the network survives for 10, 000 years without disconnecting is at least 99.2%.
Model (30) further implies that the mean delay between disconnections is lowerbounded by 1/φ user joins, or 1.2 million years.Relatively small systems are also very resilient based on this analysis.
A system with k = 8, a search delay of 30 seconds, average lifetime E[L i ] = 0.5 hours, and 50, 000 users join each day will survive for 100 years without disconnection with probability no less than 99.5%.
These two examples show that both large and small-scale systems can easily achieve a high level of resilience.
While the models described in this paper have shown that most current P2P systems are very resilient to node isolation and disconnection under many practical conditions, our results can also be exploited to develop even more resilient systems.
As the average lifetime of users in the system cannot generally be influenced by system designers, they must focus on the elements within their control.
The two basic ways to increase resilience without modifying the graph topology are to increase k or decrease E[S i ].
However, changes to these parameters often cause increased network overhead in terms of keep-alive messages, state kept at each node, and processing complexity.A more cost-effective goal is to ensure that each node has a high probability of obtaining a neighbor with a large residual lifetime either upon join or during its stay in the system.
Since the residual lifetime of each node is not known, the node's age (an easily obtainable metric) can be used instead.
In fact, it can be shown that given a Pareto distribution of lifetimes, nodes with large age are expected to survive longer and possess stochastically larger residual lifetimes R i than those with small age.
We propose intentionally monitoring the age of each node and giving more preference during neighbor selection to the nodes with a larger value of this metric, which causes the system to achieve a twofold effect: short-lived nodes do not attract a large number (if any) neighbors and long-lived nodes are given a bigger responsibility over the structure of the graph.
Preliminary simulation results of this method indicate that E[R i ] of chosen neighbors increases by several times over uniformly random selection of neighbors and leads to much lower φ.
This paper tackled the problem of P2P graph connectivity under both static and dynamic node-failure methods by establishing that almost every sufficiently large network remains connected if and only if it has no isolated nodes, a result from random graph theory that we confirm applies to P2P networks under both independent uniform node failure and lifetime-based node departure.
We used this powerful result to derive models of graph connectivity for both the static and dynamic node failure cases that are much more accurate than previous efforts and are easily calculable.
Our results show that most current P2P systems are extremely resilient to disconnections when the ratio of average lifetime to average search delay is non-trivial.
Future work includes deriving an exact model for dynamic node failure using Pareto and other heavy-tailed lifetimes, extending the lifetime model to degree-irregular networks, and constructing more resilient P2P networks.
