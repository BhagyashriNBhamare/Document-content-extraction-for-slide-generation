We study the interaction between an MIMD (Multiplicative Increase Multiplica-tive Decrease) congestion control algorithm and a Drop Tail buffer.
We consider the problem in the framework of deterministic hybrid models.
We first show that the hybrid model of the interaction between the MIMD congestion control and bottleneck router always converges to a cyclic behavior that can be of only two different types.
Second, we characterize the minimum buffer size required such that the bottleneck link is fully utilized.
In particular, our analysis indicates that an MIMD algorithm requires smaller buffer sizes than AIMD in order to fully utilize the link capacity.
Most traffic in the Internet is governed by TCP/IP (Transmission Control Protocol and Internet Protocol) [Allman et al 1999;Jacobson 1988].
Data packets of an Internet connection travel from a source node to a destination node via a series of routers.
Some routers, particularly edge routers, experience periods of congestion when packets spend a non-negligible time waiting in the router buffers to be transmitted over the next hop.
The TCP protocol tries to adjust the sending rate of a source to match the available bandwidth along the path.
During the principle Congestion Avoidance phase, standard TCP uses an AIMD (Additive Increase Multiplicative Decrease) binary feedback congestion control scheme.
In the absence of congestion signals from the network, TCP increases the congestion window linearly in time, and upon the reception of a congestion signal TCP reduces the congestion window by a multiplicative factor.It has been shown that the AIMD algorithm underutilizes the resources in High-Speed networks [Floyd 2003].
Thus, in recent years researchers have proposed and studied different versions of congestion control for the Internet such as HS-TCP [Floyd 2003] and Scalable TCP [Kelly 2003].
These algorithms have in common that in the absence of congestion, the sources increase the congestion window in a much more aggressive fashion than does standard TCP.
We note that Scalable TCP is a particular instance of an MIMD (Multiplicative Increase Multiplicative Decrease) congestion control algorithm, and thus, in the absence of congestion signals, the algorithm increases the congestion window exponentially.On the other hand, most of the routers in the Internet are of Drop-Tail type.
In basic Drop Tail routers, apart from the router capacity, the buffer size is the only parameter to tune.
In fact, the buffer size is one of the few parameters of the TCP/IP network that can be managed by network operators.
This makes the choice of the router buffer size a very important problem in the TCP/IP network design.
This choice has recently received considerable attention [Appenzeller et al 2004;Avrachenkov et al 2002;Dhamdhere et al 2005;Gorinsky et al 2005;Vu-Brugier et al 2007;Avrachenkov et al 2007].
All these works assume an AIMD congestion control protocol.In this paper we study the interaction of MIMD congestion control algorithms with Drop-Tail buffers.
We consider the problem in the framework of deterministic hybrid models.
Dynamical systems that combine both discrete and continuous behavior are known as Hybrid Systems.
Recently, hybrid models have been successfully applied to the modeling of communication networks [Hespanha et al 2001;Bohacek et al 2003].
We show that the hybrid model of the interaction between the MIMD congestion control and bottleneck router always converges to a cyclic behavior that can be of only two different types.
Then we characterize the minimum buffer size required such that the bottleneck link is fully utilized.
In particular, our analysis indicates that an MIMD algorithm requires smaller buffer sizes than AIMD in order not to waste resources.The remainder of the paper is organized as follows.
In Section 2 we develop the hybrid model.
In Section 3 we present the main results.
Section 4 contains sketches of the various proofs, and Section 5 contains some numerical experiments.
Let n long-lived TCP connections share a bottlenecked Internet router with buffer size B and transmission capacity µ.
Denote by λ i (t) the instantaneous sending rate of connection i = 1, ..., n at time t ∈ [0, ∞).
We consider a fluid model.
Namely, data is represented by a fluid that flows into the buffer with rate λ(t) = 񮽙 n i=1 λ i (t), and it leaves the buffer with constant rate µ, if there is a backlog in the buffer.
Denote by x(t) the amount of data in the buffer at time t ∈ [0, ∞).
Then, the evolution of x is described by the following differential equation˙ x(t) = 񮽙 λ(t) − µ, if x(t) > 0, or if x(t) = 0 and λ(t) > µ, 0, if x(t) = 0 and λ(t) ≤ µ.
(1)If x(t) < B, the sending rate of connection i increases exponentially in time with rate r i .
We assume that r i ≡ r. Thus, if x(t) < B,˙ λ(t) = n 񮽙 i=1 ˙ λ i (t) = rλ(t).
(2)When x(t) reaches B, a congestion signal is sent to one or several TCP connections.
Upon the reception of the congestion signal at time t, the TCP connection reduces its sending rate by a multiplicative factor β 0 ∈ (0, 1), that is,λ i (t + 0) = β 0 λ i (t − 0) = β 0 λ i (t): we assume that all the functions are leftcontinuous.
For example, in Scalable TCP, r i = 0.01/'RTT' and β 0 = 0.875 [Kelly 2003], where 'RTT' denotes the round-trip-time of the corresponding TCP connection.
We assume that the sending rates of connections at the congestion moment are distributed uniformly and that congestion signals are sent to {1, ..., ˜ n} ⊂ {1, ..., n} connections.
Then we haven 񮽙 i=1 λ i (t + 0) = ˜ n 񮽙 i=1 λ i (t + 0) + n 񮽙 i=ñ+1 λ i (t + 0) = β 0 ˜ n 񮽙 i=1 λ i (t − 0) + n 񮽙 i=ñ+1 λ i (t − 0) = (β 0 − 1) ˜ n 񮽙 i=1 λ i (t − 0) + n 񮽙 i=1 λ i (t − 0) = n 񮽙 i=1 λ i (t − 0) 񮽙 (β 0 − 1) 񮽙ñ񮽙˜ i=1 λ i (t − 0) 񮽙 n i=1 λ i (t − 0) + 1 񮽙 ≈ n 񮽙 i=1 λ i (t − 0) 񮽙 (β 0 − 1) ˜ n n + 1 񮽙 ,and the total sending rate is reduced on average by the factorβ = 1 − (1 − β 0 ) ˜ n n .
(3)Since in the fluid model all variables stand for average values, we can write that λ(t + 0) = βλ(t − 0), where t is a moment of congestion.
We call such moments 'jump moments' (of component λ).
Let us now formulate performance criteria.
On one hand, we are interested in obtaining as large throughput as possible.
That is, we are interested to maximize the average sending rate¯ λ = lim t→∞ 1 t 񮽙 t 0 λ(s)ds.On the other hand, we are interested to make the delay of data in the buffer as small as possible.
That is, we are also interested in minimizing the average amount of data in the buffer¯ x = lim t→∞ 1 t 񮽙 t 0 x(s)ds.Clearly, these two objectives are contradictory, and the goal of the current research is to construct the Pareto set for this multicriteria problem.
We accept that all the parameters of the system are fixed, and only the buffer size B is under control.
Clearly, if B is big enough the average sending rate ¯ λ is close to µ, but in this case ¯ x can become too big.
If we reduce the value of B, the average amount of data ¯ x decreases, but ¯ λ also decreases because the (small) buffer can be empty during long time intervals.
Remind that Pareto set is the collection of all non-dominated solutions to a multiple-objective problem.
Its graphical representation is known as a trade-off curve on the plane ( ¯ λ, ¯ x).
For the sake of simplicity we put r = 1, µ = 1.
In the general case, one should make change of variables:˜ t = rt, ˜ x = (r/µ)x, ˜ λ = λ/µ.
Clearly, ¯ λ and ¯ x must be multiplied by µ and by µ/r respectively.
In what follows, we investigate the trajectories of dynamical system (1), (2) which turn to converge to (stable) cycles.
Remember that λ(t+0) = βλ(t−0), where t is such that x(t − 0) = B, λ(t − 0) > 1, and in principle there can be several instant jumps meaning that β above should be replaced by β k .
Actually, a cycle is a one period of the vector-valued periodic function (x(t), λ(t)), but it is better to represent it graphically as a phase portrait: x(t) against λ(t).
For clipped cycles, ¯ λ and ¯ x both increase as B increases.
The trade-off of ¯ x versus ¯ λ is described in Theorem 3.
As it will be shown in Theorem 2, only a simple cycle can exist which is clipped/unclipped depending on the values of parameters B and β.
t ∈ [0, T ] is called a cycle if x(0) = B, λ(0) < 1, x(T ) = B, λ(T ) ≥ 1 and λ(0) = β k λ(T ), where k ≥ 1 is such that β k−1 λ(T ) > 1.
AIf x(0) = B, λ(0) = λ ∞ is the starting point of a cycle then obviously x(kT + 0) = B, λ(kT + 0) = λ ∞ for all integer k ≥ 0.
It will be also shown that for fixed values of B and β, only one (simple) cycle exists which is stable in the following sense.
Suppose x(0) and λ(0) are arbitrary and let λ i be the value of λ(t) immediately after the i-th jump.
Then lim i→∞ λ i = λ ∞ .
To put it different, any trajectory converges to the cycle which will be sometimes called 'limiting cycle'.
B 0 񮽙 = ln β − 1 β ln β − β ln β 1 − β − 1.
(4)Then unclipped (clipped) cycle exists iff B ≥ B 0 (B < B 0 ).
The duration of the cycle equals T = − ln β, for all B ≥ 0.
B 0 denotes the minimal buffer size such that the queue is never empty, see Figure 11.1.
Thus it is natural to call B 0 'critical' buffer size.
In the desynchronized case, i.e. ˜ n = 1, from equation (3) meaning that B 0 decreases to zero as 1 n 2 .
Theorem 2 Let λ k be the value of λ(t) immediately after the k-th jump.
Then, starting from any initial value λ 0 , lim k→∞ λ k = λ ∞ .
(a) If B ≥ B 0 then λ ∞ = −β ln β 1−β .
(b) If B < B 0 then λ ∞ = βe θ ,¯ λ = 1; ¯ x = B + ln β 2 + β ln β 1 − β + 1.
If B < B 0 then ¯ λ = e θ (β − 1) ln β ; ¯ x = − δe θ (1 − β) − 1 2 (δ + θ) 2 ln β ,where θ is defined in Theorem 2 and δ is the minimal positive solution to βe θ e δ − βe θ − δ + B = 0.
Corollary 1 Let B < B 0 .
Then θ, δ, ¯ λ and ¯ x monotonously increase with B.
If B approaches zero then¯ x → 0; ¯ λ → β − 1 ln β .
If B approaches B 0 then ¯ x → ln β − 1 β ln β + ln β 2 ; ¯ λ → 1.
Now it is clear that the Pareto set for objectives (¯ x, ¯ λ) is realized for 0 ≤ B ≤ B 0 : the minimal value of ¯ x equals zero and corresponds to B = 0; the maximal value of ¯ λ equals 1 and corresponds to B = B 0 .
If B > B 0 then ¯ x increases with B and ¯ λ = 1 remains the same.
Thus, solutions on the vertical dashed line (Fig.11.2), when B > B 0 , are obviously dominated.
As the term "scalable" suggests, the cycle duration T for the MIMD scheme does not depend on the capacity of the link (see Theorem 1).
We recall that the cycle duration for the AIMD scheme does depend on the link capacity [ Avrachenkov et al 2005].
In the case of a general link capacity µ 񮽙 = 1, from equation (4) and Remark 1 we see that the 'critical' buffer size (4) depends linearly on the value of µ.
In contrast, the expression for B 0 in the AIMD case has the factor µ 2 .
This shows that MIMD not only scales well with the capacity of the link but that also requires smaller buffer size in high speed networks.
In particular, for the Scalable TCP flavor, when there is only one connection (n = 1 β = β 0 = 0.875 and r = 0.01/'RTT'), from (4) and Remark 1 we get˜Bget˜ get˜B 0 = 0.22µ · 'RTT'.
The most important rule-of-thumb for dimensioning buffers on the Internet suggests that the size of the queues should be equal to the bandwidth-delay product, that is, µ · 'RTT' [Villamizar and Song 1994].
Thus, the fluid model suggests that a single Scalable TCP connection requires a 78% smaller buffer than what the previous rule-of-thumb indicated.
The simulation results of Section 4 suggest that in practice the value of˜Bof˜ of˜B 0 could even be smaller.The performance of several synchronized MIMD connections with the same 'RTT' are equivalent to a single MIMD connection [Altman et al 2005].
If the MIMD connections are not synchronized, from Lemma 1 we know that B 0 decreases to zero as 1/n 2 .
As in the AIMD congestion control scheme (see ), the multiplexing of non-synchronized MIMD connections helps to reduce significantly the minimal required buffer space for the full utilization of the link capacity.When B → 0, from Corollary 1 we know that ¯ λ → µ(β − 1)/ ln(β).
When n = 1 β = β 0 = 0.875, and we obtain that ¯ λ = 0.94µ, that is, with Scalable TCP, the minimal guaranteed link utilization will be equal to 94%.
We perform network simulations with the help of NS-2, the widely used open-source network simulator [Network Simulator].
We consider the following benchmark example of a TCP/IP network with a single bottleneck link.
The topology may for instance represent an access network.
The capacity of the bottleneck link is denoted by µ and its propagation delay is denoted by d.
The capacities of N links leading to the bottleneck link are supposed to be large enough (or the load on each access link is small enough) so that they do not hinder the traffic.
Each of these N links has a propagation delay d i .
We assume that in each access link there is one persistent TCP connection.In the NS simulations we use the following values for the network parameters: bottleneck capacity is µ = 100Mbps, bottleneck link propagation delay d = 1ms, the access link capacity and delay are 100Mbps and 1ms, respectively.
The packet size is 500bytes.
As examples of AIMD and MIMD congestion control schemes, we consider New Reno [Allman et al 1999] and Scalable TCP [Kelly 2003] flavors, respectively.
The number of access links is equal to the number of connections.
The fact that the delays in the access links are the same implies that the TCP connections will be synchronized.
In Figure 11.3 we depict the Pareto set for the cases of AIMD with N = 2, N = 5 and N = 20 connections, and MIMD with just one connection.
We recall that several symmetric synchronized MIMD connections are equivalent to a single MIMD connection.
The qualitative shape of the curves agrees with what our model predicts (Figure 11.2).
In particular, MIMD achieves the full link utilization with a much smaller buffer size than in the case of AIMD.We also display the theoretical trade-off curve for the mathematical model with parameters β = 0.875, 'RTT'= 4 ms, r = 0.01/'RTT'= 2.5 ms −1 , µ = 10 8 b/s.
It turns to be close to the curve coming from simulations.
Anyway, when comparing the results obtained from the analytical model and from simulations we have observed differences.
For example, when the buffer size is zero, the simulated average sending rate is smaller than the one obtained with the fluid model.
Similarly, in the simulated scenario the minimal buffer size that guarantees full utilization of the link is larger than the one the fluid model predicts.
These differences can be explained by the fact that the aggregated traffic in the simulations is not as smooth as the fluid model that we have used.
In this paper we have formulated the problem of choosing the buffer size of routers in the Internet as a multi-criteria optimization problem.
A rigorous mathematical analysis of the interaction between the DropTail buffer and an MIMD congestion control algorithms have been provided.
In agreement with previous works for AIMD congestion control, our model suggests that as the number of long-lived MIMD connections sharing the common link increases, the minimal buffer size required to achieve full link utilization reduces.
Furthermore, our model suggests that MIMD congestion control scheme requires much less buffer space than AIMD.
The Pareto set obtained with the help of our model could allow to dimension the IP router buffer size to accommodate real time traffic as well as data traffic.
Proof of Theorem 1.
Clearly, the first jump (or the first instant series of jumps) of the trajectory starting from λ(0) = λ 0 , x(0) = x 0 results in the value λ 1 ∈ [β, 1).
Assuming the trajectory is not clipped and has no jumps on [0, t], equations (1), (2) imply .
Therefore an unclipped cycle exists iffλ(t) = λ 0 e t , x(t) = λ 0 e t − t + x 0 − λ 0 .
x min = x(t * ) = B − B 0 ≥ 0.
In what follows, we use denotation λ∞ = −β ln β 1−β since the initial value λ0 may be arbitrary.
In case B < B 0 , starting from (λ 0 = 1, x 0 = 0), the trajectory reaches level x(θ) = B at moment θ satisfying equation e θ − 1 − θ = B, and initial values (λ 0 = βe θ , x 0 = B) generate the trajectory with xmin < 0 meaning that we have constructed the clipped cycle.
Conversely, if the clipped cycle exists then the above reasoning must lead to x min < 0 which is equivalent to B < B0.
Note that the duration of the cycle equals T = − ln β for any B ≥ 0.
Proof of Lemma 1.
(β) = β 2 e T (β) < 1 meaning that in fact ϕ : [β, ϕ(β)] → [β, ϕ(β)].
Another important consequence: starting from λ1, instant series of more than one jump are never realized.
(See Item (c).)
In case the trajectory is clipped, component x(t) reaches the value of B earlier, the new value λ 2 ≤ ϕ(λ 1 ) and again λ 2 ∈ [β, ϕ(β)].
One can show that the trajectory starting from (λ 2 , x 0 = B) cannot be clipped.Since ϕ is decreasing, the double iteration ψ(λ 0 ) 񮽙 = ϕ(ϕ(λ 0 )) is an increasing function meaning that the sequence λ2, λ4, λ6, . . . is monotonous and hence converges to λ∞ such that ψ(λ ∞ ) = λ ∞ .
We intend to prove that ϕ(λ ∞ ) = λ ∞ .
Suppose ϕ(λ ∞ ) = λ 񮽙 ∞ 񮽙 = λ ∞ and let T1 and T2 be non-negative solutions to equationsλ∞e T 1 − λ∞ − T1 = 0, λ 񮽙 ∞ e T 2 − λ 񮽙 ∞ − T2 = 0.
(11.
A.4) We know that β 2 λ ∞ e T 1 +T 2 = λ ∞ , hence β = e −(T 1 +T 2 )/2 .
Since λ 񮽙 ∞ = ϕ(λ∞) = βλ∞e T 1 = βe T 1 T 1 e T 1 − 1 , we have from (11.
A.4): λ 񮽙 ∞ = T 2 e T 2 −1 = βT 1 e T 1 e T 1 −1.
Finally, using the formula for β we conclude thatT 1 e T 1 /2 e T 1 − 1 = T 2 e T 2 /2 e T 2 − 1 .
But function g(τ ) = τ e τ /2 e τ −1 is monotonous, hence T 1 = T 2 and λ ∞ = λ 񮽙 ∞ .
Equation ϕ(λ ∞ ) = λ ∞ results in formulae T = ln 1 β (the duration of the cycle) ; λ∞ = −β ln β 1 − β ,and no other unclipped cycle exists.
Sincedϕ dλ0 = βe T (T − e T + 1) T e T − e T + 1 ,where T is given by (11.
A.3), we conclude that at the stable pointdϕ dλ 0 񮽙 񮽙 񮽙 λ∞ = β − 1 − β ln β β − 1 − ln β > −1 meaning that 񮽙 񮽙 dϕ dλ 0񮽙 񮽙 < 1 in the neighborhood of λ ∞ , so that the limiting cycle is stable.
(b) If B < B0 then, maximum after one jump (starting from λ1), the trajectory is clipped, because otherwise we would have faced a sequence λ 1 , λ 2 , . . . resulting in unclipped trajectories and, according to (a), there would have existed an unclipped limiting cycle.
Therefore, λ2 = λ3 = . . . = λ∞, and the value λ∞ = βe θ follows from equation x(θ) = e θ − 1 − θ = B describing the trajectory starting from (λ 0 = 1, x 0 = 0).
(c) The last statement follows from the previous reasoning.
Proof of Theorem 3.
According to Theorems 1,2, the trajectories converge to a single cycle with initial values (λ 0 = λ ∞ , x 0 = B).
Hence¯ λ = 1 T 񮽙 T 0 λ(t)dt, ¯ x = 1 T 񮽙 T 0 x(t)dt.In case B ≥ B0, the further calculations are straightforward having in mind formulae (11.
A.1) and T = − ln β.Case B < B0.
Here one has to calculate the integrals along branches a-b, b-c and c-d (Fig.11.1).
Equation for δ comes from condition x(δ) = 0 for trajectory starting from (λ 0 = λ ∞ = βe θ , x 0 = B).
One can show that it has exactly two positive solutions.
The further calculations are routine.Proof of Corollary 1.
The monotonicity of θ follows directly from its equation.
δ is the first moment when coordinate x(t) becomes zero.
As B and λ∞ = βe θ increase, the value x(t) at an arbitrary t corresponding to the part a-b (Fig.11.1) increases with B meaning that δ increases.
The reasoning presented implies that the value of the integral
