This paper analyzes the asymptotic behavior of packet-train probing over a multi-hop network path P carrying arbitrarily routed bursty cross-traffic flows.
We examine the statistical mean of the packet-train output dispersions and its relationship to the input dispersion.
We call this relationship the response curve of path P.
We show that the real response curve Z is tightly lower-bounded by its multi-hop fluid counterpart F , obtained when every cross-traffic flow on P is hypothetically replaced with a constant-rate fluid flow of the same average intensity and routing pattern.
The real curve Z asymptotically approaches its fluid counterpart F as probing packet size or packet train length increases.
Most existing measurement techniques are based upon the single-hop fluid curve S associated with the bottleneck link in P.
We note that the curve S coincides with F in a certain large-dispersion input range, but falls below F in the remaining small-dispersion input ranges.
As an implication of these findings, we show that bursty cross-traffic in multi-hop paths causes negative bias (asymptotic underestimation) to most existing techniques.
This bias can be mitigated by reducing the deviation of Z from S using large packet size or long packet-trains.
However, the bias is not completely removable for the techniques that use the portion of S that falls below F .
End-to-end estimation of the spare capacity along a network path using packet-train probing has recently become an important Internet measurement research area.
Several measurement techniques such as TOPP [14], Pathload [6], IGI/PTR [5], Pathchirp [16], and Spruce [17] have been developed.
Most of the current proposals use a single-hop path with constant-rate fluid cross-traffic to justify their methods.
The behavior and performance of these techniques in a multi-hop path with general bursty cross-traffic is limited to experimental evaluations.
Recent work [9] initiated the effort of developing an analytical foundation for bandwidth measurement techniques.
Such a foundation is important in that it helps achieve a clear understanding of both the validity and the inadequacy of current techniques and provides a guideline to improve them.
However, the analysis in [9] is restricted to single-hop paths.
There is still a void to fill in understanding packet-train bandwidth estimation over a multi-hop network path.Recall that the available bandwidth of a network hop is its residual capacity after transmitting cross-traffic within a certain time interval.
This metric varies over time as well as a wide range of observation time intervals.
However, in this paper, we explicitly target the measurement of a longterm average available bandwidth, which is a stable metric independent of observation time instances and observation time intervals [9].
Consider an N -hop network path P = (L 1 , L 2 , . . . , L N ), where the capacity of link L i is denoted by C i and the long-term average of the cross-traffic arrival rate at L i is given by λ i , which is assumed to be less than C i .
The hop available bandwidth of L i is A i = C i − λ i .
The path available bandwidth A P is given byA P = min 1≤i≤N (C i − λ i ).
(1)The hop L b , which carries the minimum available bandwidth, is called the tight link or the bottleneck link 1 .
That is, b = arg min1≤i≤N (C i − λ i ).
(2)The main idea of packet-train bandwidth estimation is to infer A P from the relationship between the inter-packet dispersions of the output packet-trains and those of the input packet-trains.
Due to the complexity of this relationship in arbitrary network paths with bursty cross-traffic flows, previous work simplifies the analysis using a single-hop path with fluid 2 cross-traffic, while making the following two assumptions without formal justification: first, crosstraffic burstiness only causes measurement variability that can be smoothed out by averaging multiple probing sam-ples and second, non-bottleneck links have negligible impact on the proposed techniques.The validity of the first assumption is partially addressed in [9], where the authors use a single-hop path with bursty cross-traffic to derive the statistical mean of the packettrain output dispersions as a function of the input probing dispersion, referred to as the single-hop response curve.
Their analysis shows that besides measurement variability, cross-traffic burstiness can also cause measurement bias to the techniques that are based on fluid analysis.
This measurement bias cannot be reduced even when an infinite number of probing samples are used, but can be mitigated using long packet-trains and/or large probing packet size.This paper addresses further the two assumptions that current techniques are based on.
To this end, we extend the asymptotic analysis in [9] to arbitrary network paths and uncover the nature of the measurement bias caused by bursty cross-traffic flows in a multi-hop network path.
This problem is significantly different from previous single-hop analysis due to the following reasons.
First, unlike singlehop measurements, where the input packet-trains have deterministic and equal inter-packet separation formed by the probing source, the input packet-trains at any hop (except the first one) along a multi-link path are output from the previous hop and have random structure.
Second and more importantly, the multi-hop probing asymptotics are strongly related to the routing pattern of cross-traffic flows.
This issue never arises in a single-hop path and it has received little attention in prior investigation.
However, as we show in this paper, it is one of the most significant factors that affect the accuracy of bandwidth measurement in multi-hop paths.To characterize packet-train bandwidth estimation in its most general settings, we derive the probing response curve Z of a multi-hop path P assuming arbitrarily routed bursty cross-traffic flows.
We compare Z with its multi-hop fluid counterpart F , which is a response curve obtained when every cross-traffic flow in P is hypothetically replaced with a fluid flow of the same average intensity and routing pattern.
We show, under an ergodic stationarity assumption for each cross-traffic flow, that the real curve Z is tightly lower bounded by its fluid counterpart F and that the curve Z asymptotically approaches its fluid bound F in the entire input range as probing packet size or packet-train length increases.Most of the existing techniques are based on the singlehop fluid response curve S associated with the bottleneck link in P. Therefore, any deviation of the real curve Z from the single-hop curve S can potentially cause measurement bias in bandwidth estimation.
Note that the deviation Z −S can be decomposed asZ − S = (Z − F) + (F − S).
(3)The first term Z − F is always positive and causes asymptotic underestimation of A P for most of the existing techniques.
This deviation term and its resulting measurement bias are "elastic" in the sense that they can be reduced to a negligible level using packet-trains of sufficient length 3 .
For the second deviation term F − S, we note that both S and F are piece-wise linear curves.
The first two linear segments in F associated with large input dispersions coincide with S (i.e., F − S = 0).
The rest of the linear segments in F associated with small input dispersions appear above S (i.e., F − S > 0).
The amount of deviation and the additional negative measurement bias it causes are dependent on the routing patterns of cross-traffic flows, and are maximized when every flow traverses only one hop along the path (which is often called one-hop persistent crosstraffic routing [4]).
Furthermore, the curve deviation F − S is "non-elastic" and stays constant with respect to probing packet size and packet-train length at any given input rate.
Therefore, the measurement bias it causes cannot be overcome by adjusting the input packet-train parameters.
Among current measurement techniques, pathload and PTR operate in the input probing range where F coincides with S, and consequently are only subject to the measurement bias caused by the first deviation term Z − F. Spruce may use the probing range where F − S > 0.
Hence it is subject to both elastic and non-elastic negative measurement biases.
The amount of bias can be substantially more than the actual available bandwidth in certain common scenarios, leading to negative results by the measurement algorithm and a final estimate of zero by the tool.The rest of the paper is organized as follows.
Section 2 derives the multi-hop response curve F assuming arbitrarily routed fluid cross-traffic flows and examines the deviation term F − S.
In Section 3 and 4, we derive the real response curve Z of a multi-hop path and show its relationship to its fluid counterpart F .
We provide practical evidence for our theoretical results using testbed experiments and real Internet measurements in Section 5.
We examine the impact of these results on existing techniques in Section 6 and summarize related work in Section 7.
Finally, we briefly discuss future work and conclude in Section 8.
Due to limited space, most of the proofs in this paper are omitted, and we refer interested readers to [10] for more technical details.
It is important to first thoroughly understand the response curve F of a network path carrying fluid cross-traffic flows, since as we show later, the fluid curve F is an approachable bound of the real response curve Z. Initial investigation of the fluid curves is due to Melandar et al. [13] and Dovrolis et al. [3].
However, prior work only considers two special cross-traffic routing cases (one-hop persistent routing and path persistent routing).
In this section, we formulate and solve the problem for arbitrary cross-traffic routing patterns, based on which, we discuss several important properties of the fluid response curves that allow us to obtain the path available bandwidth information.
We first introduce necessary notations to formulate a multihop path and the cross-traffic flows that traverse along the path.An N -hop network path P = (L 1 , L 2 , . . . , L N ) is a sequence of N interconnected First-Come First-Served (FCFS) store-and-forward hops.
For each forwarding hop L i in P, we denote its link capacity by C i , and assume that it has infinite buffer space and a work-conserving queuing discipline.
Suppose that there are M fluid cross-traffic flows traversing path P.
The rate of flow j is denoted by x j and the flow rate vector is given by x = (x 1 , x 2 , . . . , x M ).
We impose two routing constraints on cross-traffic flows to simplify the discussion.
The first constraint requires every flow to have a different routing pattern.
In the case of otherwise, the flows with the same routing pattern should be aggregated into one single flow.
The second routing constraint requires every flow to have only one link where it enters the path and also have only one (downstream) link where it exits from the path.
In the case of otherwise, the flow is decomposed into several separate flows that meet this routing constraint.
Definition 1 A flow aggregation is a set of flows, represented by a "selection vector" p = (p 1 , p 2 , . . . , p M ) T , where p j = 1 if flow j belongs to the aggregation and p j = 0 if otherwise.
We use f j to represent the selection vector of the aggregation that contains flow j alone.There are several operations between flow aggregations.
First, the common flows to aggregations p and q form another aggregation, whose selection vector is given by p⊙q, where the operator ⊙ represents "element-wise multiplication."
Second, the aggregation that contains the flows in p but not in q is given by p − p ⊙ q. Finally, note that the traffic intensity of aggregation p can be computed from the inner product xp.We now define several types of flow aggregation frequently used in this paper.
First, the traversing flow aggregation at link L i , denoted by its selection vector r i , includes all fluid flows that pass through L i .
The M × N matrix R = (r 1 , r 2 , . . . , r N ) becomes the routing matrix of path P. For convenience, we define an auxiliary selection vector r 0 = 0.
The second type of flow aggregation, denoted by e i , includes all flows entering the path at link L i , which can be expressed as e i = r i − r i ⊙ r i−1 given the second routing constraint stated previously.
The third type of flow aggregation, which includes flows that enter the path at link L k and traverse the downstream link L i , is denoted as Γ k,i = e k ⊙ r i , where k ≤ i.The cross-traffic intensity at link L i is denoted by λ i .
We assume λ i < C i for 1 ≤ i ≤ N .
Since none of the links in P is congested, the arrival rate of flow j at any link it traverses is x j .
Consequently, we haveλ i = xr i < C i , 1 ≤ i ≤ N.(4)We further define the path configuration of P as the following 2 × N matrixH = C 1 C 2 . . . C N λ 1 λ 2 . . . λ N .
(5)The hop available bandwidth of L i is given by A i = C i − λ i .
We assume that every hop has different available bandwidth, and consequently that the tight link is unique.
Sometimes, we also need to refer to the second minimum hop available bandwidth and the associated link, which we denote as A b2 = C b2 − λ b2 and L b2 , respectively.
That isb2 = arg min 1≤i≤N,i񮽙 =b (C i − λ i ),(6)where b is the index of the tight hop.
We now consider a packet-train of input dispersion (i.e., inter-packet spacing) g I and packet size s that is used to probe path P.
We are interested in computing the output dispersion of the packet train and examining its relation to g I .
Such a relation is called the gap response curve of path P.
It is easy to verify that under fluid conditions, the response curve does not depend on the packet-train length n. Hence, we only consider the case of packet-pair probing.
We denote the output dispersion at link L i as γ i (g I , s) or γ i for short, and again for notational convenience we let γ 0 = g I .
Note that γ N (g I , s) corresponds to the notation F we have used previously.
Based on our formulations, the gap response curve of path P has a recursive representation given below.Theorem 1 When a packet-pair with input dispersion g I and packet size s is used to probe an N -hop fluid path with routing matrix R and flow rate vector x, the output dispersion at link L i can be recursively expressed asγ i =    g I i = 0 max γ i−1 , s + Ω i C i i > 0 ,(7)where Ω i is 4Ω i = i k=1 γ k−1 xΓ k,i .
(8)Proof: Assumes that the first probing packet arrives at link L i at time instance a 1 .
It gets immediate transmission service and departs at a 1 +s/C i .
The second packet arrives at a 1 +γ i−1 .
The server of L i needs to transmit s+Ω i amount of data before it can serve the second packet.
If this is done before time instance a 1 + γ i−1 , the second packet also gets immediate service and γ i = γ i−1 .
Otherwise, the sever undergoes a busy period between the departure of the two packets, meaning that γ i = (s + Ω i )/C i .
Therefore, we haveγ i = max γ i−1 , s + Ω i C i .
(9)This completes the proof of the theorem.
As a quick sanity check, we verify the compatibility between Theorem 1 and the special one-hop persistent routing case, where every flow that enters the path at link L i will exit the path at link L i+1 .
For this routing pattern, we haveΓ k,i = 0 i 񮽙 = k r i i = k .
(10)Therefore, equation (8) can be simplified asΩ i = γ i−1 xr i = γ i−1 λ i ,(11)which agrees with previous results [3], [13].
Theorem 1 leads to several important properties of the fluid response curve F , which we discuss next.
These properties tell us how bandwidth information can be extracted from the curve F , and also show the deviation of F , as one should be aware of, from the single-hop fluid curve S of the tight link.Property 1 The output dispersion γ N (g I , s) is a continuous piece-wise linear function of the input dispersion g I in the input dispersion range (0, ∞).
Let 0 = α K+1 < α K < . . . < α 1 < α 0 = ∞ be the input dispersion turning points that split the gap response curve to K + 1 linear segments 5 .
Our next result discusses the turning points and linear segments that are of major importance in bandwidth estimation.
The first turning point α 1 corresponds to the path available bandwidth in the sense that A P = s/α 1 .
The first linear segment in the input dispersion range (α 1 = s/A P , ∞) has slope 1 and intercept 0.
The second linear segment in the input dispersion range (α 2 , α 1 ) has slope λ b /C b and intercept s/C b , where b is the index of the tight link:γ N (g I , s) =    g I α 1 ≤ g I ≤ ∞ g I λ b + s C b α 2 ≤ g I ≤ α 1 .
(12)These facts are irrespective of the routing matrix.It helps to find the expression for the turning point α 2 , so that we can identify the exact range for the second linear segment.
However, unlike α 1 , the turning point α 2 is dependent on the routing matrix.
In fact, all other turning points are dependent on the routing matrix and can not be computed based on the path configuration matrix alone.
Therefore, we only provide a bound for α 2 .
Property 3 For any routing matrix, the term s/α 2 is no less than A b2 , which is the second minimum hop available bandwidth of path P.The slopes and intercepts for all but the first two linear segments are related to the routing matrix.
We skip the derivation of their expressions, but instead provide both a lower bound and an upper bound for the entire response curve.
S(g I , s) =      g I g I > s A P s + g I λ b C b 0 < g I < s A P .
(13)It is upper bounded by the gap response curve associated with one-hop persistent routing.We now make several observations regarding the deviation of γ N (g I , s) (i.e., F ) from S(g I , s).
Combing (12) and (13), we see that γ N (g I , s) − S(g I , s) = 0 when g I ≥ α 2 .
That is, the first two linear segments on F coincide with S.
When g I < α 2 , Property 4 implies that the deviation γ N (g I , s) − S(g I , s) is positive.
The exact value depends on cross-traffic routing and it is maximized in one-hop persistent routing for any given path configuration matrix.Also note that there are three pieces of path information that we can extract from the gap response curve F without knowing the routing matrix.
By locating the first turning point α 1 , we can compute the path available bandwidth.
From the second linear segment, we can obtain the tight link capacity and cross-traffic intensity (and consequently, the bottleneck link utilization) information.
Other parts of the response curve F are less readily usable due to their dependence on cross-traffic routing.
To extract bandwidth information from the output dispersion γ N , it is often more helpful to look at the rate response curve, i.e., the functional relation between the output rate r O = s/γ N and the input rate r I = s/g I .
However, since this relation is not linear, we adopt a transformed version first proposed by Melander et al. [14], which depicts the relation between the ratio r I /r O and r I .
Denoting this rate response curve by˜Fby˜ by˜F (r I ), we have˜Fhave˜ have˜F (r I ) = r I r O = γ N (g I , s) g I .
(14)This transformed version of the rate response curve is also piece-wise linear.
It is easy to see that the first turning point in the rate curve is s/α 1 = A p and that the rate curve in the input rate range (0, s/α 2 ) can be expressed as˜Fhave˜ have˜F (r I ) = r I r O = γ N (g I , s) g I .
(14)Finally, it is also important to notice that the rate response curve˜Fcurve˜ curve˜F (r I ) does not depend on the probing packet size s.
This is because, for any given input rate r I , both γ N (g I , s) and g I are proportional to s. Consequently, the ratio between these two terms remains a constant for any s.
We use a simple example to illustrate the properties of the fluid response curves.
Suppose that we have a 3-hop path with equal capacity C i = 10mb/s, i = 1, 2, 3.
We consider two routing matrices and flow rate settings that lead to the same link load at each hop.In the first setting, the flow rate vector x = (4, 7, 8) and the routing pattern is one-hop persistent, i.e., R = diag(1, 1, 1).
In the second setting, the flow rate vector x = (4, 3, 1) and the routing pattern is path persistent.
That is,R =   1 1 1 0 1 1 0 0 1   .
(16)Both of the settings result in the same path configuration matrixH = 10 10 10 4 7 8 .
(17)The probing packet size s is 1500 bytes.
The fluid gap response curves for the two routing patterns are plotted in Fig. 1(a).
In this example, both curves have 4 linear segments separated by turning points α 1 = 6ms, α 2 = 4ms, and α 3 = 2ms.
Note that part of the curve for pathpersistent routing appears below the one for one-hop persistent routing.
The lower bound S identified in Property 4 is also plotted in the figure.
This lower bound is the gap response curve of the single-hop path comprising only the tight link L 3 .
The rate response curves for the two examples are given in we adopted, the rate curve for one-hop persistent routing still remains as an upper bound for the rate curves associated with the other routing patterns.
From Fig. 1(b), we also see that, similar to the gap curves, the two multi-hop rate response curves and their lower bound˜Sbound˜ bound˜S(r I ) (i.e., the transformed rate version of S(g I , s)) share the same first and second linear segments.
We conclude this section by discussing several major challenges in extending the response curve analysis to a multihop path carrying bursty cross-traffic flows.
First, notice that with bursty cross-traffic, even when the input dispersion and packet-train parameters remain constant, the output dispersion becomes random, rather than deterministic as in fluid cross-traffic.
The gap response curve Z, defined as the functional relation between the statistical mean of the output dispersion and the input dispersion, is much more difficult to penetrate than the fluid curve F .
Second, unlike in the fluid case, where both packet-train length n and probing packet size s have no impact on the rate response curve˜Fcurve˜ curve˜F (r I ), the response curves in bursty cross-traffic are strongly related to these two packet-train parameters.
Finally, a full characterization of a fluid flow only requires one parameter -its arrival rate, while a full characterization of a bursty flow requires several stochastic processes.
In what follows, we address these problems and extend our analysis to multi-hop paths with bursty cross-traffic.
We keep most of the notations the same as in the previous section, although some of the terms are extended to have a different meaning, which we explain shortly.
Since crosstraffic flows now become bursty flows of data packets, we adopt the definitions of several random processes (Definition 1-6) in [9] to characterize them.
However, these definitions need to be refined to be specific to a given router and flow aggregation.
In what follows, we only give the definitions of two random processes and skip the others.
The notations for all six random processes are given in Table 3.1.
The cumulative traffic arrival process of flow aggregation p at link L i , denoted as {V i (p, t), 0 ≤ t < ∞} is a random process counting the total amount of data (in bits) received by hop L i from flow aggregation p up to time instance t. flow aggregation p, denoted as {W i (p, t), 0 ≤ t < ∞} indicates the sum at time instance t of service times of all packets in the queue and the remaining service time of the packet in service, assuming that flow aggregation p is the only traffic passing through link L i .
We next make several modeling assumptions on crosstraffic flows.
First, we assume that all flows have stationary arrivals.Assumption 1 For any cross-traffic flow j that enters the path from link L i , the cumulative traffic arrival process {V i (f j , t)} has ergodic stationary increments.
That is, for any δ > 0, the δ-interval traffic intensity process {Y i,δ (f j , t)} is a mean-square ergodic process with timeinvariant distribution and ensemble mean x j .
We explain this assumption in more details.
First, the stationary increment assumption implies that the increment process of {V i (f j , t)} for any given time interval δ,namely {V i (f j , t + δ) − V i (f j , t) = δY i,δ (f j , t)}, has a time-invariant distribution.This further implies that the δ-interval traffic intensity process {Y i,δ (f j , t)} is identically distributed, whose marginal distribution at any time instance t can be described by the same random variable Y i,δ (f j ).
Second, the mean-square ergodicity implies that, as the observation interval δ increases, the random variable Y i,δ (f j ) converges to x j in the mean-square sense.
In other words, the variance of Y i,δ (f j ) decays to 0 as δ → ∞, i.e.,lim δ→∞ E Y i,δ (f j ) − x j 2 = 0.
(18)Our next assumption states the independent relationship between different flows that enter path P at the same link.
Cumulative arrival process at Li w.r.t. p {Y i,δ (p, t)} Cross-traffic intensity process at Li w.r.t. p {Wi(p, t)} Hop workload process at Li w.r.t. p {D i,δ (p, t)} Workload-difference process at Li w.r.t. p {Ui(p, t)} Hop utilization process at Li w.r.t. p {B i,δ (p, t)} Available bandwidth process at Li w.r.t. p Table 1: Random process notations Assumption 2 For any two flows j and l that enter the path at link L i , the two processes {V i (f j , t)} and {V i (f l , t)} are independent.
Specifically, for any two time instances t 1 and t 2 , the two random variables V i (f j , t 1 ) andV i (f l , t 2 ) are independent.As a consequence of the two assumptions we made, the ergodic stationary property also holds for any flow aggregations at their entering link.Corollary 1 For any flow aggregation p that enters the path at link L i , i.e., p ⊙ e i = p, the process {V i (p, t)} has ergodic stationary increments.
Consequently, the traffic intensity random variable Y i,δ (p) converges to xp in the mean-square senselim δ→∞ E Y i,δ (p) − xp 2 = 0.
(19)Due to Szczotka [18], [19], the workload process {W i (p, t)} will "inherit" the ergodic stationarity property from the traffic arrival process {V i (p, t)}.
This property is further carried over to the δ-interval workload-difference process {D i,δ (p, t)} and the available bandwidth process {B i,δ (p, t)}.
This distributional stationarity allows us to focus on the corresponding random variables W i (p), D i,δ (p), and B i,δ (p).
It is easy to get, from their definitions, that the statistical means of D i,δ (p) and B i,δ (p) are 0 and C i − xp, respectively 6 .
Further, the ergodicity property leads to the following result.Lemma 1 For any flow aggregation p that enter the path at link L i , the random variable B i,δ (p) converges in the mean-square sense to C i − xp as δ → ∞, i.e.,lim δ→∞ E B i,δ (p) − (C i − xp) 2 = 0.
(20)On the other hand, notice that unlike {Y i,δ (p, t)} and {B i,δ (p, t)}, the workload-difference process {D i,δ (p, t)} is not a moving average process by nature.
Consequently, the mean-square ergodicity of {D i,δ (p, t)} does not cause the variance of D i,δ (p) to decay with respect to the increase of δ.
Instead, we have the following lemma.
D i,δ (p) converges to 2V ar[W i (p)] as δ increases: lim δ→∞ E D i,δ (p) − 0 2 = 2V ar [W i (p)] .
(21)To obtain our later results, not only do we need to know the asymptotic variance of Y i,δ (p), D i,δ (p) and B i,δ (p) when δ approaches infinity, but also we often rely on their variance being uniformly bounded (for any δ) by some constant.
This condition can be easily justified from a practical standpoint.
First note that cross-traffic arrival rate is bounded by the capacities of incoming links at a given router.
Suppose that the sum of all incoming link capacities at hop L i is C+ , then Y i,δ (p) is distributed in a finite interval [0, C + ] and its variance is uniformly bounded by the constant C 2 + for any observation interval δ.
Similarly, the variance of B i,δ (p) is uniformly bounded by the constant C 2 i .
The variance of D i,δ (p) is uniformly bounded by the constant 4V ar[W i (p)] for any δ, which directly follows from the definition of D i,δ (p).
Finally, we remind that some of the notations introduced in Section 2.1 now are used with a different meaning.
The rate of the bursty cross-traffic flow j, denoted by x j , is the probabilistic mean of the traffic intensity random variable Y i,δ (f j ), which is also the long-term average arrival rate of flow j at any link it traverses.
The term λ i = xr i becomes the long-term average arrival rate of the aggregated crosstraffic at link L i .
The term A i = C i − λ i is the longterm average hop available bandwidth at link L i .
Again recall that we explicitly target the measurement of longterm averages of available bandwidth and/or cross-traffic intensity, instead of the corresponding metrics in a certain time interval.
We now consider an infinite series of packet-trains with input inter-packet dispersion g I , packet size s, and packettrain length n.
This series is driven to path P by a point process Λ(t) = max{m ≥ 0 : T m ≤ t} with sufficient large inter-probing separation.
Let d 1 (m, i) and d n (m, i) be the departure time instances from link L i of the first and last probing packets in the m th packet-train.
We define the sampling interval of the packet-train as the total spacing ∆ = d n (m, i) − d 1 (m, i), and the output dispersion as the average spacing G = ∆/(n − 1) of the packet-train.
Both ∆ and G are random variables, whose statistics might depend on several factors such as the input dispersion g I , the packet-train parameters s and n, the packet-train index m in the probing series, and the hop L i that the output dispersion G is associated with.
Therefore, a full version of G is written as G i (g I , s, n, m).
However, for notation brevity, we often omit the parameters that have little relevance to the topic under discussion.We now formally state the questions we address in this paper.
Note that a realization of the stochastic process {G N (g I , s, n, m), 1 ≤ m < ∞} is just a packet-train probing experiment.
We examine the sample-path time-average of this process and its relationship to g I when keeping s and n constant.
This relationship, previously denoted by Z, is called the gap response curve of path P.Notice that the ergodic stationarity of cross-traffic arrival, as we assumed previously, can reduce our response curve analysis to the investigation of a single random variable.
This is because each packet-train comes to see a multi-hop system of the same stochastic nature and the output dispersion process {G N (m), 1 ≤ m < ∞} is an identically distributed random sequence, which can be described by the output dispersion random variable G N .
The samplepath time average of the output dispersion process coincides with the mean of the random variable G N 7 .
Therefore, in the rest of the paper, we focus on the statistics of G N and drop the index m.In our later analysis, we compare the gap response curve of P with that of the fluid counterpart of P and prove that the former is lower-bounded by the latter.
From this definition, we see that for every flow j in P, there is a corresponding fluid flow j ′ in the fluid counterpart of P such that flow j ′ have the same average intensity and routing pattern as those of flow j. Note that the third condition in Definition 4 is made to allow the two flows have different indices, i.e., to allow j 񮽙 = j ′ .
A second focus of this paper is to study the impact of packet-train parameters s and n on the response curves.
That is, for any given input rate r I and other parameters fixed, we examine the convergence properties of the output dispersion random variable G N (s/r I , s, n) as s or n tends to infinity.
We keep input packet-train parameters g I , s, and n constant and next obtain a basic expression for the output dispersion random variable G N .
Lemma 3 Letting G 0 = g I , the random variable G i has the following recursive expression This result is very similar to Lemma 5 in [9].
However, due to the random input packet-train structure at L i , all but the term s/C i in (22) G i = i k=1 Y k,∆ k−1 (Γ k,i )G k−1 C i + s C i + ˜ I i n − 1 = G i−1 + D i,∆i−1 (e i ) n − 1 + R i n − 1 ,(22) In this section, we first show that the gap response curve Z = E[G N (g I , s, n)] of a multi-hop path P is lower bounded by its fluid counterpart F = γ N (g I , s).
We then investigate the impact of packet-train parameters on Z.
Our next lemma shows that passing through a link can only increase the dispersion random variable in mean.
G i−1 .
That is, E[G i ] ≥ E[G i−1 ].
Using the first part of (22), our next lemma shows that for any link L i , the output dispersion random variable G i is lower bounded in mean by a linear combination of the output dispersion random variables G k , where k < i. E[G i ] ≥ 1 C i i k=1 xΓ k,i E[G k−1 ] + s .
(23)From Lemma 4 and Lemma 5, we getE[G i ] ≥ max E[G i−1 ], i k=1 xΓ k,i E[G k−1 ] + s C i .
(24) This leads to the following theorem.Theorem 2 For any input dispersion g I , packet-train parameters s and n, the output dispersion random variable G N of path P is lower bounded in mean by the output dispersion γ N (g I , s) of the fluid counterpart of P:E[G N (g I , s, n)] ≥ γ N (g I , s).
(25)Proof: We apply mathematical induction to i.
When i = 0, E[G 0 ] = γ 0 = g I .
Assuming that (25) holds for 0 ≤ i < N , we next prove that it also holds for i = N .
Recalling (24), we haveE[G N ] ≥ max E[G N −1 ], N k=1 xΓ k,N E[G k−1 ] + s C N ≥ max γ N −1 , N k=1 xΓ k,N γ k−1 + s C N = γ N ,where the second inequality is due to the induction hypothesis, and the last equality is because of Theorem 1.
Theorem 2 shows that in the entire input gap range, the piece-wise linear fluid gap response curve F discussed in Section 2 is a lower bound of the real gap curve Z.
The deviation between the real curve Z and its fluid lower bound F , which is denoted by β N (g I , s, n) or β N for short, can be recursively expressed in the following, where we let β 0 = 0:β i =      β i−1 + E[R i ] n − 1 γ i = γ i−1 1 C i i k=1 xΓ k,i β k−1 + E[ ˜ I i ] n − 1 γ i > γ i−1 .
(26)In what follows, we study the asymptotics of the curve deviation β N when input packet-train parameters s or n becomes large and show that the fluid lower bound F is in fact a tight bound of the real response curve Z.
We now demonstrate that for any input probing rate r I , the curve deviation β N (s/r I , s, n) vanishes as probing packet size s approaches infinity.
We prove this result under the condition of one-hop persistent cross-traffic routing.
We also justify this conclusion informally for arbitrary crosstraffic routing and point out the major difficulty in obtaining a rigorous proof.
First, we make an additional assumption as follows.
Denoting by P i,δ (x) the distribution function of the δ-interval available bandwidth process {B i,δ (e i , t)}, we assume that for all 1 ≤ i ≤ N , the following holds       P i,δ (r) = o 1 δ 2 r < C i − xe i P i,δ (r) = 1 − o 1 δ 2 r > C i − xe i .
(27)Recall that the mean-square ergodicity assumption we made earlier implies that as the observation interval δ gets large, the random variable B i,δ (e i ) converges in distribution to C i − xe i .
Assumption 3 further ensures that this convergence is fast in the sense of (27).
Even though this condition appears cryptic at first, it is valid in a broad range of cross-traffic environments.
The next theorem shows the validity of this assumption under the condition of regenerative 9 link utilization.
Theorem 3 When hop utilization process {U i (e i , t)} is regenerative, condition (27) holds.Note that regenerative queue is very common both in practice and in stochastic modeling literature.
In fact, all the four traffic types used in [9] lead to regenerative hop workload and consequently lead to regenerative link utilization.
We also conjecture that (27) holds under a much milder condition, but we leave its identification as future work.Our next theorem states formally the convergence property of the output dispersion random variable G N (s/r I , s, n) when s increases.Theorem 4 Given one-hop persistent cross-traffic routing and the three assumptions made in the paper, for any input rate r I , the output dispersion random variable G N of path P converges in mean to its fluid lower bound γ N :lim s→∞ E G N s r I , s, n − γ N s r I , s = 0.
(28)The asymptotic variance of G N when s increases is upper bounded by some constant K N :lim s→∞ E G N s r I , s, n − γ N s r I , s 2 ≤ K N .
(29)Note that the bounded variance, as stated in (29), is an inseparable part of the whole theorem.
This is because Theorem 4 is proved using mathematical induction, where the mean convergence of G N to γ N can be obtained only when the mean of G N −1 converges to γ N −1 and when the variance of G N −1 remains bounded, as probing packet size s → ∞.
We further point out that by assuming one-hop persistent cross-traffic routing, we have avoided analyzing the departure processes of cross-traffic flows.
When a traversing flow of link L i enters the path from some upstream link of L i , the arrival process of the flow at L i is its departure process at L i−1 .
Unfortunately, in the queueing theory literature, there is no exact result for departure processes in FCFS queueing models if one goes beyond the assumption of Poisson arrivals.
Motivated by the intractability of this problem, researchers have focused their attentions on approximations [12], [15].
To accommodate arbitrary cross-traffic routing patterns, we also need an approximation assumption which says that any cross-traffic flow that traverses link L i (regardless of wether it enters the path from L i or some upstream link of L i ) exhibits ergodic stationary arrival at L i .
Under this assumption, which we call "stationary departure approximation," it becomes easy to extend Theorem 4 to cover arbitrary cross-traffic routing patterns.
We skip the details of this step and next apply the stationary departure approximation to examine the impact of packet-train length n on the response curve Z.Theorem 5 Under the first two assumptions and the "stationary departure approximation", for any N -hop path P with arbitrary cross-traffic routing, for any input dispersion g I ∈ (0, ∞) and any probing packet size s, the random variable G N converges to its fluid lower bound γ N in the mean-square sense as n → ∞,lim n→∞ E (G N (g I , s, n) − γ N (g I , s)) 2 = 0.
(30)Let us make several comments on the conditions of this result.
First note that Assumption 3 is not necessary in this theorem.
Also notice that in a single-hop path (i.e., N = 1), the theorem can be proved without the stationary departure approximation.
However, in the multi-hop cases, the approximation is needed even when cross-traffic routing is one-hop persistent.
The reason is that when n is large, the probing packet-train is also viewed as a flow, whose arrival characteristics at all but the first hop are addressed by the stationary departure approximation.Theorem 5 shows that when the packet-train length n increases while keeping s constant, not only E[G N ] converges to its fluid bound γ N , but also the variance of G N decays to 0.
This means that we can expect almost the same output dispersion in different probings.
Among the assumptions in this paper, some are critical in leading to our results while others are only meant to simplify discussion.
We point out that the distributional stationarity assumption on cross-traffic arrivals can be greatly relaxed without harming our major results.
However, this comes at the expense of much more intricate derivations.
This is because when cross-traffic arrivals are allowed to be only second-order stationary or even non-stationary, the output dispersion process {G N (m)} will no longer be identically distributed.
Consequently, the analysis of probing response curves cannot be reduced to the investigation of a single output dispersion random variable.
Moreover, we also have to rely on an ASTA assumption on packettrain probing [9] to derive the results in this paper, which we have avoided in the present setting.Also note that the inter-flow independence assumption is made to maintain the distributional stationarity of crosstraffic arrivals at a flow aggregation level.
It only helps us avoid unnecessary mathematical rigor and is insignificant in supporting our major conclusions.On the other hand, the mean-square ergodicity plays a central role in the (omitted) proofs for Theorem 4 and Theorem 5.
A cross-traffic flow with mean-square ergodicity, when observed in a large timescale, has an almost constant arrival rate.
This "asymptotically fluid like" property, is very common among the vast majority of traffic models in stochastic literature, and can be decoupled from any type of traffic stationarity.
Consequently, our results have a broad applicability in practice.Next, we provide experimental evidence for our theoretical results using testbed experiments and real Internet measurement data.
In this section, we measure the response curves in both testbed and real Internet environments.
The results not only provide experimental evidence to our theory, but also give quantitative ideas of the curve deviation given in (26).
To obtain the statistical mean of the probing output dispersions, we rely on direct measurements using a number of probing samples.
Even though this approach can hardly produce a smooth response curve, the bright side is that it allows us to observe the output dispersion variance, reflected by the degree of smoothness of the measured response curve.
In our first experiment, we measure in the Emulab testbed [1] the response curves of a three-hop path with the following configuration matrix (all in mb/s) and one-hop persistent cross-traffic routing H = 96 96 96 20 40 60 .
We generate cross-traffic using three NLANR [2] traces.
All inter-packet delays in each trace are scaled by a common factor so that the average rate during the trace duration becomes the desired value.
The trace durations after scaling are 1-2 minutes.
We measure the average output dispersions at 100 input rates, from 1mb/s to 100mb/s with 1mb/s increasing step.
For each input rate, we use 500 packettrains with packet size 1500 bytes.
The packet train length n is 65.
The inter-probing delay is controlled by a random variable with sufficiently large mean.
The whole experiment lasts for about 73 minutes.
All three traffic traces are replayed at random starting points once the previous round is finished.
By recycling the same traces in this fashion, we make the cross-traffic last until the experiment ends without creating periodicity.
Also note that the packet-trains are injected with their input rates so arranged that the 500 trains for each input rate is evenly separated during the whole testing period.This experiment not only allows us to measure the response curve for n = 65, but also for any packet-train length k such that 2 ≤ k < n = 65, by simply taking the dispersions of the first k packets in each train.
Fig. 2(a) shows the rate response curve˜Zcurve˜ curve˜Z(r I , s, n) for k = 2, 9, 33 and 65 respectively.
For comparison purposes, we also plot in the figure the multi-hop fluid curve˜Fcurve˜ curve˜F (r I ), computed from Theorem 1, and the single-hop fluid curve˜Scurve˜ curve˜S(r I ) of the tight link L 3 .
The rate response curves˜Zcurves˜ curves˜Z(r I , s, n) is defined as follows˜Zfollows˜ follows˜Z(r I , s, n) = r I s/E[G N (s/r I , s, n)] .
(32)First note that the multi-hop fluid rate curve comprises four linear segments separated by turning points 36mb/s, 56mb/s, and 76mb/s.
The last two linear segments have very close slopes and they are not easily distinguishable from each other in the figure.
We also clearly see that the rate curve asymptotically approaches its fluid lower bound as packet-train length n increases.
The curves for n = 33 and n = 65 almost coincide with the fluid bound.
Also note that the smoothness of the measurement curve reflects the variance of the output dispersion random variables.
As the packet train length increases, the measured curve becomes smoother, indicating the fact that the variance of the output dispersions is decaying.
These observations are all in agreement with those stated in Theorem 5.
Unlike single-hop response curves, which have no deviation from the fluid bound when the input rate r I is greater than the link capacity, multi-hop response curves usually deviate from its fluid counterpart in the entire input range.
As we see from Fig. 2(a), even when the input rate is larger than 96mb/s, the measured curves still appear above˜Fabove˜ above˜F .
Also observe that the single-hop fluid curve˜Scurve˜ curve˜S of the tight link L 3 coincides with the multi-hop fluid curve˜Fcurve˜ curve˜F within the input rate range (0, 56) but falls below˜Fbelow˜ below˜F in the input rate range (56, ∞).
Finally, we explain why we choose the link capacities to be 96mb/s instead of the fast ethernet capacity 100mb/s.
In fact, we did set the link capacity to be 100mb/s.
However, we noticed that the measured curves can not get arbitrarily close to their fluid bound˜Fbound˜ bound˜F computed based on the fast ethernet capacity.
Using pathload to examine the true capacity of each Emulab link, we found that their IP layer capacities are in fact 96mb/s, not the same as their nominal value 100mb/s.
In our second experiment, we change the cross-traffic routing to path-persistent while keeping the path configuration matrix the same as given by (31).
Therefore, the flow rate vector now becomes (20,20,20).
We repeat the same packet-train probing experiment and the results are plotted in Fig. 2(b).
The multi-hop fluid rate curve˜Fcurve˜ curve˜F still coincides with˜Swith˜ with˜S in the input rate range (0, 56).
When input rate is larger than 56mb/s, the curve˜F curve˜ curve˜F positively deviates from˜Sfrom˜ from˜S.
However, the amount of deviation is smaller than that in one-hop persistent routing.
The measured curve approaches the fluid lower bound˜F bound˜ bound˜F with decaying variance as packet-train length increases.
For n = 33 and n = 65, the measured curves become hardly distinguishable from˜Ffrom˜ from˜F.We have conducted experiments using paths with more hops, with more complicated cross-traffic routing patterns, and with various path configurations.
Furthermore, we examined the impact of probing packet size using ns2 simulations, where the packet size can be set to any large values.
Results obtained (not shown for brevity) all support our theory very well.
We conducted packet-train probing experiments on several Internet paths in the RON testbed to verify our analysis in real networks.
Since neither the path configuration nor the cross-traffic routing information is available for these Internet paths, we are unable to provide the fluid bounds.
Therefore, we verify our theory by observing the convergence of the measured curves to a piece-wise linear curve as packettrain length increases.In the first experiment, we measure the rate response curve of the path from the RON node lulea in Sweden to the RON node at CMU.
The path has 19 hops and a fastethernet minimum capacity, as we find out using traceroute and pathrate.
We probe the path at 29 different input rates, from 10mb/s to 150mb/s with a 5mb/s increasing step.
For each input rate, we use 200 packet-trains of 33 packets each to estimate the output probing rate s/E[G N ].
The whole experiment takes about 24 minutes.
Again, the 200 packet-trains for each of the 29 input rates are so arranged that they are approximately evenly separated during the 24-minute testing period.
The measured rate response curves associated with packet-train length 2, 3, 5, 9, 17, and 33 are plotted in Fig. 3(a), where we see that the response curve approaches a piece-wise linear bound as packet-train length increases.
At the same time, response curves measured using long trains are smoother than those measured using short trains, indicating the decaying variance of output dispersions.
In this experiment, the curve measured using probing trains of 33-packet length exhibits sufficient smoothness and clear piece-wise linearity.
We have observed two linear segments from the figure.
A further investigation shows that the fluid bound of this 19-hop path only has two linear segments.Based on (15), we apply linear regression on the second linear segment to compute the capacity C b and the crosstraffic intensity λ b of the tight link and get C b = 96mb/s and λ b = 2mb/s.
Using these results, we retroactively plot the single-hop fluid bounds and observe that it almost overlaps with the measured curve using packet-trains of 33-packet length.
Notice that the bottleneck link is under very light utilization during our 24-minute measurement period.
We can also infer based on our measurement that the available bandwidth of the path is constrained mainly by the capacity of the bottleneck link and that the probing packettrains have undergone significant interaction with crosstraffic at non-bottleneck links.
Otherwise, according to Theorem 3 in [9], the response curves measured using short train lengths would not have appeared above the single-hop fluid bound when the input rate is larger than the tight link capacity 96mb/s.
We believe that the tight link of the path is one of the last-mile lightly utilized fast-ethernet links and that the backbone links are transmitting significant amount of cross-traffic even though they still have available bandwidth much more than the fast-ethernet capacity.
Also notice that similar to our testbed experiments, fast-ethernet links only have 96mb/s IP-layer capacity.We repeat the same experiment on another path from the RON node pwh in Sunnyvale California to the NYU RON node.
This path has 13 hops and a fast-ethernet minimum capacity.
Due to substantial cross-traffic burstiness along the path, we use packet-trains of 129-packet length in our probing experiment.
The other parameters such as the input rates and the number of trains used for each rate are the same as in the previous experiment.
The whole measurement duration is about 20 minutes.
The measured response curves are plotted in Fig. 3(b).
As we see, the results exhibit more measurement variability compared to the lulea→CMU path.
However, as packet-train length increases, the variability is gradually smoothed out and the response curve converges to a piece-wise linear bound.
We again apply linear regression on the response curve with packet-train length 129 to obtain the tight link information.
We get C b = 80mb/s and λ b = 3mb/s, which does not agree with the minimum capacity reported by pathrate.
We believe that pathrate reported the correct information.
Our underestimation is most probably due to the fact that there are links along the path with very similar available bandwidth.
Consequently, the second linear segment become too short to detect.
The linear segment we are acting upon is likely to be a latter one.
This experiment confirms our analysis, at the same time shows some of the potential difficulties in exacting tight link information from the response curves.
We now discuss the implications of our results on existing measurement proposals.
Except for pathChirp, all other techniques such as TOPP, pathload, PTR, and Spruce are related to our analysis.
TOPP is based on multi-hop fluid rate response curve˜Fcurve˜ curve˜F with one-hop persistent cross-traffic routing.
TOPP uses packet-pairs to measure the real rate response curve˜Zcurve˜ curve˜Z, and assumes that the measured curve will be the same as˜Fas˜ as˜F when a large number of packet-pairs are used.
However, our analysis shows that the real curve˜Zcurve˜ curve˜Z is different from˜Ffrom˜ from˜F , especially when packet-trains of short length are used (e.g., packet-pairs).
Note that there is not much path information iñ Z that is readily extractable unless it is sufficiently close to its fluid counterpart˜Fcounterpart˜ counterpart˜F .
Hence, to put TOPP to work in practice, one must use long packet-trains instead of packetpairs.
Using the notations in this paper, we can write spruce's available bandwidth estimator as followsC b 1 − G N (s/C b , s, n) − s/C b s/C b ,(33)where the probing packet size s is set to 1500bytes, the packet-train length n = 2, and the bottleneck link capacity C b is assumed known.r I r I /r O A P C b s/α 2 C ′ b ˜ Z ˜ F ˜ S Elastic Deviation Elastic DeviationNon-elastic Deviation Figure 4: Illustration of two types of curve deviations.It is shown in [9] that the spruce estimator is unbiased in single-hop paths regardless of the packet-train parameters s and n.
This means that the statistical mean of (33) is equal to A P for any s > 0 and any n ≥ 2.
In a multi-hop path P, a necessary condition to maintain the unbiasedness property of the spruce estimator is˜Zis˜ is˜Z(C b , s, n) = λ b + C b C b = ˜ S(C b ).
(34)This means that at the input rate point C b , the real rate response of path P must be equal to the single-hop fluid rate response at the tight link of P.
This condition is usually not satisfied.
Instead, due to Theorem 2 and Property 4, we have˜Zis˜ is˜Z(C b , s, n) = λ b + C b C b = ˜ S(C b ).
(34)This implies that (33) is a negatively biased estimator of A P .
The amount of bias is given byC b ˜ Z(C b , s, n) − ˜ F(C b ) + C b ˜ F (C b ) − ˜ S(C b ) .
(36)The first additive term in (36) is the measurement bias caused by the curve deviation of˜Zof˜ of˜Z from˜Ffrom˜ from˜F at input rate C b , which vanishes as n → ∞ due to Theorem 5.
Hence we call it elastic bias.
The second additive term is the portion of measurement bias caused by the curve deviation of˜F of˜ of˜F from˜Sfrom˜ from˜S at input rate C b , which remains constant with respect to the packet-train parameters s and n. Therefore it is non-elastic.
We illustrate the two types of curve deviations in Fig. 4.
Note that when C b < s/α 2 , non-elastic bias is 0.
Further recall that s/α 2 ≥ A b2 as stated in Property 3.
Hence, a sufficient condition for zero non-elastic bias is C b ≤ A b2 .
Conceptually, elastic deviation stems from cross-traffic burstiness and non-elastic deviation is a consequence of multi-hop effects.In Table 2, we give the amount measurement bias caused by the two types of curve deviations in both the Emulab testbed experiments and the real Internet probing measurement on the path from lulea to CMU.
Note that in the experiment elastic bias non-elastic bias total bias Emulab-1 testbed experiment using a 3-hop path with one-hop persistent routing, spruce suffers about 74mb/s measurement bias, which is twice as much as the actual path available bandwidth 36mb/s.
In the second Emulab experiment using path-persistent cross-traffic, the measurement bias is reduced to 38.8mb/s, which however is still more than the actual available bandwidth.
In both cases, spruce estimator converges to negative values.
We used spruce to estimate the two paths and it did in fact give 0mb/s results in both cases.
For the Internet path from lulea to CMU, spruce suffers 24mb/s negative bias and produces a measurement result less than 70mb/s, while the real value is around 94mb/s.
We also use pathload to measure the three paths and observe that it produces pretty accurate results.
The way to reduce elastic-bias is to use long packettrains instead of packet-pairs.
In the lulea→CMU experiment, using packet-trains of 33-packet, spruce can almost completely overcome the 24mb/s bias and produce an accurate result.
However, there are two problems of using long packet-trains.
First, there is not a deterministic train length that guarantees negligible measurement bias on any network path.
Second, when router buffer space is limited and packet-train length are too large, the later probing packets in each train may experience frequent loss, making it impossible to accurately measure˜Fmeasure˜ measure˜F (C b ).
After all, spruce uses input rate C b , which can be too high for the bottleneck router to accommodate long packet-trains.
On the other hand, note that non-elastic bias is an inherit problem for spruce.
There is no way to overcome it by adjusting packet-train parameters.
PTR searches the first turning point in the response curve˜Z curve˜ curve˜Z(r I , s, n) and takes the input rate at the turning point as the path available bandwidth A P .
This method can produce accurate result when the real response curve˜Zcurve˜ curve˜Z is close tõtõ F , which requires packet-train length n to be sufficiently large.
Otherwise, PTR is also negatively biased and underestimates A P .
The minimum packet-train length needed is dependent on the path conditions.
The current version of PTR use packet train length n = 60, which is probably insufficient for the Internet path from pwh to CMU experimented in this paper.Pathload is in spirit similar to PTR.
However, it searches the available bandwidth region by detecting one-way-delay increasing trend within a packet-train, which is different from examining whether the rate response˜Zresponse˜ response˜Z(r I , s, n) is greater than one [7].
However, since there is a strong statistical correlation between a high rate response˜Zresponse˜ response˜Z(r I , s, n) and the one-way-delay increasing tend within packettrains, our analysis can explain the behavior of pathload to a certain extent.
Recall that, as reported in [6], pathload underestimates available bandwidth when there are multiple tight links along the path.
Our results demonstrate that the deviation of˜Zof˜ of˜Z(r I , s, n) from˜Ffrom˜ from˜F in the input rate range (0, A P ) gives rise to a potential underestimation in pathload.
The underestimation is maximized and becomes clearly noticeable when non-bottleneck links have the same available bandwidth as A P , given that the other factors are kept the same.Even through multiple tight links cause one-way-delay increasing trend for packet-trains with input rate less than A P , this is not an indication that the network can not sustain such an input rate.
Rather, the increasing trend is a transient phenomenon resulting from probing intrusion residual, and it disappears when the input packet-train is sufficiently long.
Hence, it is our new observation that by further increasing the packet-train length, the underestimation in pathload can be mitigated.
Besides the measurement techniques we discussed earlier, Melander et al. [13] first discussed the rate response curve of a multi-hop network path carrying fluid cross-traffic with one-hop persistent routing pattern.
Dovrolis et al. [3], [4] considered the impact of cross-traffic routing on the output dispersion rate of a packet-train.
It was also pointed out that the output rate of a back-to-back input packet-train (input rate r I = C 1 , the capacity of the first hop L 1 ) converges to a point they call "asymptotic dispersion rate (ADR)" as packet-train length increases.
The authors provided an informal justification as to why ADR can be computed using fluid cross-traffic.
They demonstrated the computation of ADR for several special path conditions.
Note that using the notations in this paper, ADR can be expressed aslim n→∞ s G N (s/C 1 , s, n) = s γ N (s/C 1 , s) .
(37)Our work not only formally explains previous findings, but also generalizes them to such an extent that allows any input rate and any path conditions.
Kang et al. [8] analyzed the gap response of a singlehop path with bursty cross-traffic using packet-pairs.
The paper had a focus on large input probing rate.
Liu et al. extended the single-hop analysis for packet-pairs [11] and packet-trains [9] to arbitrary input rates and discussed the impact of packet-train parameters.
This paper provides a stochastic characterization of packettrain bandwidth estimation in a multi-hop path with arbitrarily routed cross-traffic flows.
Our main contributions include derivation of the multi-hop fluid response curve as well as the real response curve and investigation of the convergence properties of the real response curve with respect to packet-train parameters.
The insights provided in this paper not only help understand and improve existing techniques, but may also lead to a new technique that measures tight link capacity.There are a few unaddressed issues in our theoretical framework.
In our future work, we will identify how various factors, such as path configuration and cross-traffic routing, affect the amount of deviation between Z and F .
We are also interested in investigating new approaches that help detect and eliminate the measurement bias caused by bursty cross-traffic in multi-hop paths.
Dmitri Loguinov was supported by NSF grants CCR-0306246, ANI-0312461, CNS-0434940.
