Hundreds of millions of people still live beyond the coverage of basic mobile connectivity, primarily in rural areas with low population density.
Mobile network operators (MNOs) traditionally struggle to justify expansion into these rural areas due to the high infrastructure costs necessary to provide service.
Community cellular networks, networks built "by and for" the people they serve, represent an alternative model that, to an extent, bypasses these business case limitations and enables sustainable rural coverage.
Yet despite aligned economic incentives, real deployments of community cellular networks still face significant regulatory, commercial and technical challenges.
In this paper, we present CommunityCellularManager (CCM), a system for operating community cellular networks at scale.
CCM enables multiple community networks to operate under the control of a single, multi-tenant controller and in partnership with a traditional MNO.
CCM preserves flexibility for each community network to operate independently , while allowing the mobile network operator to safely make critical resources such as spectrum and phone numbers available to these networks.
We evaluate CCM through a multi-year, large-scale community cellular network deployment in the Philippines in partnership with Globe, the largest MNO in the country, providing basic communication services to over 2,800 people in 17 communities without requiring changes to the existing regulatory framework, and using existing handsets.
We demonstrate that CCM can support independent community networks with unique service offerings and operating models while providing a basic level of MNO-defined service.
To our knowledge, this represents the largest deployment of community cellular networks to date.
Despite the global expansion of mobile networks, millions still live without access to basic voice and SMS connectivity.A key reason for this is that most countries effectively allow only a small set of nation-scale actors to hold the necessary operating and spectrum licenses, as well as interconnection infrastructure, to provide commercial mobile service.
In spite of their size, incumbent mobile network operators (MNOs) are capital constrained and struggle to justify investment in rural areas with marginal business cases when compared to more profitable and lower-risk urban markets.Community cellular networking provides one alternative approach for bringing mobile connectivity to these underserved populations [2,28].
Community networks, networks built "by and for" the people they serve in a communitycentric, often cooperative, fashion [8,52,58], allow for creative localized schemes for sustainable operation that work even when covering low-income, remote, or sparse communities.
The strength of the community network model is its ability to flexibly adapt to local needs using local resources and local insights.
A network serving one community can provide services suited to that community, and can institute their own policies that would not make sense in a nationscale network (for example, free local SMS mailing lists).
They can also tailor their network deployments to leverage local capacity, such as existing towers and power systems, lowering deployment costs.
Yet even where communities could run profitable networks, they face high barriers to entry in acquiring expensive and exclusive spectrum licenses, as well as operating licenses necessary to secure phone numbers and interconnection with the global phone network.We are left with an unfortunate market failure: incumbent MNOs hold resources and capabilities, in the form of licenses and interconnect, necessary to provide rural coverage, but can't justify investment in underserved areas.
Concurrently, community networks could provide sustainable service, but lack a combination of the commercial, legal, and technological capacity to operate in a telecommunications regime designed for large carriers.
We argue that rather than standing in opposition to each other, incumbent operators and community networks have an opportunity for cooperative interaction, leveraging the strengths of each to fulfill mutually beneficial business and social goals.
Fundamentally, such a partnership requires a technology stack enabling collaborative resource management and provisioning of com-mon services between MNOs and community networks.In this paper, we present CommunityCellularManager (CCM), a solution for operating community cellular networks at scale within the existing telecom ecosystem.
CCM enables multiple community networks to operate under the control of a single, multi-tenant controller, preserving flexibility for each community network to implement their own unique services while allowing them to share MNO resources, such as spectrum and phone numbers.
For MNOs, CCM resolves the administrative problems they face granting many small third parties access to their core network by aggregating their traffic behind one logical point of interconnection, while providing a point of control to mitigate the risk they take on by sharing their resources and licenses.
We evaluate CCM in a deployment to expand the service of an MNO into unserved areas via community networks using the MNO's spectrum and interconnect (Section 5).
The contributions of this paper are as follows.
First, we describe the design and implementation of CommunityCellularManager, a system for deploying rural community cellular networks at scale by facilitating cooperation and resource sharing with traditional mobile network operators.
Second, we present a multi-year, large-scale community network deployment in the Philippines that provides basic communications service to 17 communities and over 2,800 monthly active users, powered by CCM and in partnership with Globe, the largest MNO in the country.
We further demonstrate CCM's ability to support key use cases necessary for rural community cellular networks, such as offline operation, as well as its ability to support independent local services on a subset of the community networks in our deployment.
Rural Access.
Access to connectivity supports numerous services, such as health [37], education [35], and finance [9].
However, access remains unequal, with connectivity significantly better in dense, urban, and developed environments than in sparse, rural, and developing ones.
In attempts to resolve this disparity, researchers have proposed a variety of novel technologies such as long-distance WiFi [47], delay tolerant networking [16], and "sneaker" nets [22,48,24].
Although these technologies were all successes from a research perspective, they have had limited impact on the global problem of access.
These technologies exist alongside an array of other important infrastructure, and innovations at the network layer alone will be insufficient.
Surana et al. [56] find that looking at the system holistically is critical for its success [55].
This includes both physical infrastructure such as power and the social structures and people surrounding the technology.
We take these lessons to heart in CCM, bringing issues like local ownership and customization to the forefront of the system design.Community Networks.
Researchers have explored wireless community networks [31] for years with contributions such as specific wireless technologies [18], topologies [59,58], and mesh protocols [5] more appropriate for their unique constraints.
The above systems all use WiFi for access, primarily because of low cost and use of unlicensed spectrum.
While these networks have shown to have the potential to empower local communities [14] and create more resilient networks [8], this limits these networks to higher-end devices and small coverage areas without mobility.More recently, researchers and practitioners have built community cellular networks [2,28,51,12].
Ideologically aligned with the goals of community networking, these networks use cellular protocols to provide wide-area coverage to basic phones at lower cost.
Unfortunately, they remain limited by the technical affordances of cellular, including the need for licensed spectrum, phone numbers, and interconnect with the global phone network.
CCM provides a platform for community cellular that resolves these concerns.Mobile cores.
Cellular core network standards are developed by the 3GPP [46]; recent work focused on improving scalability and reliability of core networks [50,6,49].
Similar to SoftCell [33], CCM is a clean-slate architecture, and was designed for public cloud environments like ECHO [42].
CCM differs in its focus on shifting administrative boundaries of the mobile core to enable cooperation between MNO and community networks.
CCM is targeted to a specific but important use case: extending mobile network service provided by an incumbent MNO in a cooperative partnership with community cellular networks.
Prior work [28,51] has shown that community cellular networks can effectively serve areas unserved by MNOs.
Such cooperative arrangements [11,39] promise to unblock regulatory and commercial barriers faced by community cellular networks, such as access to spectrum.
The architectural rigidity of mobile networks, however, makes achieving our federated use case challenging, since it provides no affordance for having multiple administrative domains providing service in a loosely coupled fashion.The 3GPP specifications [46] define the architecture of traditional mobile networks.
Although these specifications continue to evolve, the network architecture prioritizes (1) mobility, (2) operator control of subscribers and network policy, and (3) efficient utilization of radio resources as firstorder priorities.
To do this, 3GPP networks tunnel traffic between end-user devices and a (logically) centralized "core network", which provides services such as voice calling, messaging, and data service.
These logical services are offered over the physical radio access network (RAN), which is responsible for providing users with physical connectivity to the core network and ensuring efficient use of the limited radio resource.
The two components of the network -the core and the RAN -are tightly coupled: without a core network, the RAN is not capable of providing network services to end users.
This approach stands in stark contrast to that of the Internet [10], with its focus on supporting datagram services among independent networks.Both architectural approaches -3GPP's centralized control and the Internet's decentralized flexibility -have clearly enabled successful networks, but the 3GPP architecture has several significant drawbacks for community networks in rural areas.
First, the strength of community cellular networks is their adaptability to their local context, providing customized services that are relevant to users in the local community.
Centralized core networks make a single entity responsible for all service provisioning, preventing innovation at the local level.
Second, community cellular networks are heterogeneous and administratively decentralized, with diverse IP transport and transit configurations and different sets of actors responsible for network operation and maintenance at each site.
Tightly coupling the RAN equipment deployed in a community to a core network requires coordination between the community network and the MNO's core network.
Fundamentally, this requires the MNO to expose their most critical network assets -their core network -to a third party, so they need ways to mitigate the risk of doing so.
As a result, this interaction incurs high administrative overhead due to the configuration required for each new site and the extensive security reviews required when connecting third-party infrastructure to MNO core networks.These challenges suggest the following design goals: 1.
Enable community networks to autonomously deploy services within their footprint, while providing a basic set of services from the mobile network operator.
2.
Minimize the cost and risk of adding new cell sites and community networks for both the MNO and the community network operator.
3.
Provide service at low incremental cost beyond that required for RAN deployment, even in small networks.
To achieve these goals, CCM builds upon our experience building and operating an early community cellular network [28,27].
We implemented the first version of the software that would evolve into CCM on location during our fieldwork in Papua, Indonesia, and the constraints of that environment -reliance on satellite Internet and reliably unreliable power -shaped our design.
In CCM, each network node can provide service autonomously, even without a connection to the Internet.
CCM is broadly divided into two components (Figure 1).
The first is the CCM Client, which is co-located with a community network's RAN equipment and fills the role typically played by a 3GPP core network, terminating the logical connection from a user's phone and providing services to the end user.To support voice and SMS services, we translate all 3GPP voice and SMS to SIP and SMPP at the Client, which allows us to perform call and message routing at the Client (also knon as local breakout).
By making each network node a logically independent cellular network, CCM elegantly supports autonomous service deployment in each community network and allows core network capacity to scale up and down with the deployed RAN network.The second component, the CCM Controller, provides a set of common services across community networks, such as RAN configuration and network management tools, including a web application that serves as the primary user interface for both MNO staff and community network operators.
Importantly, the Controller also manages state distribution across the different networks: rather than centralizing both policy and network state in on-path devices, we synchronize application state among network nodes.
The Controller also provides interconnection between community networks and the MNO network, regulating access to one of the most important resources the MNO owns: globally routable phone numbers for voice calls and SMS.This decomposition bridges the centralized world of traditional mobile networks with the decentralized world of community networks and IP.
Network management functionssubscriber provisioning, device management, network policy, and necessarily integration with Globe (Section 4.2.1) -are all highly centralized.
In contrast, user traffic and signalling (the data and control planes, from a 3GPP perspective) and service provision are decentralized where traffic doesn't interact with Globe.
This hierarchy enables scale by allowing individual community networks to take advantage of common infrastructure while preserving their ability to deploy new services.
It also reflects a pattern we have observed in other scaled (non-cellular) community networks, with "second level organizations" solving expensive or complicated problems once while more local groups operate network infrastructure [3].
CCM is designed for GSM (2G) networks and provides only voice and SMS service, not data (though we do rely on IP data for management, we do not provide data service to users' phones), as the plurality of devices in our deployment only supports 2G [54].
Similarly, we emphasize that our particular decomposition of responsibilities represents just one point in a wider design space with its own political and technical tradeoffs.
Section 7 discusses extensions toward LTE and further exploration of this design space.
The CCM Client is responsible for all operation at the community network site.
It has two key responsibilities: provide connectivity services to users at the site, and manage the site itself.
Physically, the CCM Client is a suite of software tools Figure 1: The CCM high level architecture, consisting of Clients, the Controller, and the interconnect with Globe.
Phone numbers, licenses, and spectrum [1] are provided by Globe, with a number block manually allocated into the Controller's subscriber database (SubDB).
The CCM Controller [3] manages network configuration and status, provides a point of control for Globe to enforce global network policies and perform administrative tasks, and a web interface for network management.
The CCM Controller also interconnects with Globe's core for routing traffic between many individual community networks and Globe's network [2].
Clients communicate with the Controller via an HTTPS API [5], which is also used to determine call and SMS routing [4].
Note that CCM utilizes local breakout at each component, so traffic may be handled as the SMPP/SIP gateways closest to the two users.
CCM is multitenant, so Clients in many communities [6] can have unique local services and operate asynchronously if the backhaul is unavailable.
that runs on a off-the-shelf x86 PC co-located with the radio equipment of a rural cellular site.
In our deployments, this PC is either located physically within the RAN enclosure or located nearby in a separate enclosure.
Figure 3 shows the components of one example install.The Client is the primary element in our system responsible for delivering communication service (in our case, voice and SMS) to end users.
We designed CCM to work with the two most popular open-source GSM network implementations, OpenBTS [44] and Osmocom [45], each of which implements a complete GSM core network and, importantly, translates cellular traffic and signalling to VOIP (SIP, RTP, and SMPP).
CCM extends this translation and implements the business logic to properly route calls and SMS, implement local services, and provide basic business support services such as charging and user provisioning.User management and billing.
In GSM networks, the SIM card holds a unique IMSI number, the user's identity on the network.
Each IMSI corresponds to a particular subscriber's profile in CCM, which associates both a phone number and an account balance with the subscriber.
Similar to previous work [28], we provide basic SMS-based applications for provisioning a new SIM card (i.e., associating it with a subscriber profile and assigning a phone number) and transferring network credit between users.
The network operator may add or remove credit directly to a subscriber's account via the CCM Controller as well.
CCM implements a simple prepaid billing system in which operators can set the price of different network actions (e.g., price per minute for a voice call to a certain number prefix); time-based account balances are also supported.
This user profile is one of the key elements of network state in our system, which we discuss further in Section 4.2.
Local breakout.
We run a SIP softswitch [19] on each CCM Client to route calls and SMS.
Because CCM leverages local breakout, this softswitch can fully route and connect local calls and messages without having any traffic (signalling or media) leaving the site.
This gives CCM the ability to support arbitrary local services, including custom interactive voice response applications or SMS shortcodes.
Any outbound traffic addressed to a user not currently active on a site is routed to the CCM Controller, which allows the MNO to set policy for these communications and potentially route them between different sites as well as to the global telephony network (Section 4.2.1).
Site provisioning.
Community networks are built and operated by ordinary people, not specialized technical staff.
As a result, we focused on automating as much of site provisioning and setup as possible: our goal was to make setup at least as easy as installing a home WiFi router.
To provision a site, each CCM Client generates and assigns itself a unique identifier during a "manufacturing" phase; we expect that either the vendor or experts assembling the unit will perform this step.
The unique identifier is printed on the outside of the hardware to be deployed at the site.Devices start in an unprovisioned state; CCM prevents the radio equipment from transmitting while unprovisioned.
To provision the device, installation technicians or community members register the device by inputting the unique identifier into the CCM Controller's web interface.
Once the device is powered on and connected to the Internet, it connects to the CCM Controller to provision itself.
If the device has been registered with the CCM Controller, the device will receive VPN configuration information and a secret API token for future requests to the CCM Controller.
1 Using the API token, the site can begin a process of generating secondary credentials required for operation, such as a VPN keypair.
Once the Client establishes secure connectivity to the Controller, configuration and network state information is synchronized and the device is ready to begin operation.Under nominal conditions, the only user interaction re- 1 The gap between when a device is registered with the CCM Controller and when it actually connects could allow an attacker with knowledge of the unique ID to register a fake device with the CCM Controller.
To mitigate this, we instruct users to register the device only after they've verified it is powered on and connected to the Internet.
In practice, this is done in a "staging" lab environment prior to field installation, thus minimizing the window of opportunity for an attacker.
This attack could be completely mitigated if the device-specific secret API tokens or a keypair were pre-provisioned with a CCM Controller prior to associating a device with a user's account; however, doing this would require coordination between device manufacturers and the entity operating the CCM Controller, which was not feasible in our deployment.
quired to provision a site is entering the unique ID into the web UI (see Figure 4).
No prior coordination is required between equipment providers, the CCM Controller operator, and the community network team actually deploying the site.
This is in contrast to traditional 2G networks, which typically require RAN, core, and network management software from the same vendor to be manually provisioned by one entity.
The CCM Controller is responsible for managing traffic among the collection of community networks it manages, as well as with the outside world.
Moreover, while in practice CCM supports geographically distinct cell sites without overlapping coverage, users can move between networks and CCM must be able to coordinate state across networks; the Controller also handles this task.
Internally, CCM routes all calls and SMS between SIP switches at each CCM Client site.
Within the administrative domain of a single CCM Controller, we can assign phone numbers to subscribers much like an enterprise can assign extensions to internal users or RFC1918 addresses for private networks.
However, for users of CCM networks to make and receive communication from the global phone network, we need to interconnect CCM sites with an entity that has been assigned globally-routeable phone numbers and has the ability to route voice and SMS communication.
CCM is capable of interconnecting with wholesale VOIP providers (such as Nexmo [40] or Bandwidth [4]) as well as an MNO's VOIP infrastructure; we will focus on the latter in this work, though the mechanism is similar for both.CCM interconnects with an MNO through its VOIP gateway (typically used for supporting enterprise customers) as well as the MNO's SMPP gateway, an industry standard for SMS exchange.
In this arrangement, the MNO allocates the CCM Controller blocks of phone numbers to be used exclusively by users of CCM sites.
On the CCM side, we run a corresponding SIP switch and SMPP gateway, as well as any VPN infrastructure required for connecting to the MNO's systems.
The CCM SIP and SMPP infrastructure is stateless, and determines inbound call routing by querying the CCM Controller API to determine subscriber location; all billing and charging is handled on the CCM Client.The integration architecture we use has two consequences.
First, since the CCM Controller handles multi-tenancy, there is a single point of interconnection between the MNO and potentially many community networks.
This is crucial: setting up our initial integration with Globe took just over four months from start to finish, and required the team we were working with at Globe to obtain approvals and request configuration changes with a number of different teams within their organization.
Further, the technical work required to set up this interconnection, while simple in theory, is complicated by the fact that MNOs rely on custom and legacy systems that must be carefully managed to prevent downtime.
Going through this process for dozens of community networks would be impossible, so while our integration approach creates a single point of failure, the benefits of a onetime integration outweigh the risks.Second, this tightly ties CCM networks to the MNO who assigns phone numbers: the MNO can at any point shut off service to these users; users would need new phone numbers if the partner MNO changed.
This is advantageous from the perspective of the MNO, since they retain ultimate control over their users, which was important for gaining approval from Globe to allow community networks to operate under their spectrum and operating licenses.
While other approaches [25,17,51] enable community cellular without hard dependencies on third parties, our MNO partnership approach required no regulatory change; the project would not have been feasible in the Philippines in the timeframe we've taken otherwise.
System state in CCM consists of per-site configuration, network policy, and subscriber authentication, billing and location data.
In order to support disconnected operation, CCM needs to ensure this state is distributed across all sites administered by a CCM Controller.Checkin.
The fundamental mechanism for state distribution in CCM is the "checkin".
At least once per minute, each CCM Client sends a HTTPS request to an API endpoint on the Controller.
The content of this request includes the site ID, usage logs (also known as call data records, or CDRs), diagnostic information (such as CPU utilization), and subscriber data to the Controller.
Based on the computed configuration for the site, the Controller's response to this checkin request is the desired state of the system's configuration and the set of subscribers a site should be able to serve.Both the request and response are JSON dictionaries divided into independent sections: for example, billing records are stored in the usage section.
Only changed state is transferred in the server response after the initial checkin.
The Client and Controller each maintain a shared context of previously received configuration by tracking a hash of the contents of each checkin section; the Client includes the last hash of each section it has received in its subsequent requests.
If the Client hash matches the last recorded Controller hash, it only sends the difference between the last state and the current one.
Otherwise, it sends the full contents of the section.
Because most configuration changes rarely, this minimizes received checkin response sizes.
Subscriber data.
Subscriber data consists of authentication information, location (i.e., which Client a user is currently attached to), and billing information.
The first two of these are straightforward to handle.
Authentication information consists of SIM card keys as well as whether a subscriber is allowed or not allowed on the network; the network operator can add users via the Controller or through an SMS-based short code application in the field.
In both cases, this information is directly written to the Controller and replicated to all sites in the network.
Each CCM Client reports the list of subscribers currently attached to the site during checkin; this allows the Controller to have a global view of subscriber location for routing inbound traffic and traffic between sites.Billing state is more complicated, as it can be mutated both at any particular site (e.g., decremented after a subscriber makes a call) as well as at the CCM Controller (e.g., when an operator adds credit to a subscriber's account directly).
A site may also be disconnected from the CCM Controller for arbitrary lengths of time, while still providing communications services within its coverage area.
Nevertheless, we need to be able to apply network policies around charging to local calls while disconnected from the tower.To achieve this, we restrict modifications to subscriber balance to commutative operations (add or subtract), and then represent subscriber balances as a CRDT [38].
Subscriber balances are synchronized across the network during the checkin process: as each site checks in, the Controller merges its subscriber balance state with what the site reports, and provides the merged state back to the site in the response if it differs.
This enables each node of the system to both read and write subscriber balance independently -when a site is disconnected, users can continue to communicate locally and transfer balance between each other, and balance will converge once the site comes back online.
Users can also move between multiple offline sites and communicate locally on each.
In our current implementation, this raises the possibility of double spending, but our partners made the business decision to allow this to facilitate usage.
The risk of this particular attack is low in practice because of the substantial distances between different sites, and could be further mitigated by setting a threshold for spending during disconnected operation at each site.Site Management All other configuration state is similarly managed by the Controller.
We provide a web-based UI for viewing network-wide state (including user activity) and defining network policy and configuration.
While some information must be manually defined by the network operator (such as pricing plans), other information is automatically generated to simplify operation (such as the radio channel that each site uses).
Outside this controller-based interface, we do not support any other means of configuring devices.
2 The UI provides fine-grained permissions and control, allowing the operator of the Controller (Globe) to determine which types of users may access different aspects of the UI.
In our deployment, spectrum usage is controlled by Globe, and access to Globe sites is restricted to their staff.
Globe has allocated a separate "network" for a set of sites run directly by communities, but has restricts what administrators of these networks can do.
The superuser has view and edit access to change configuration across sites, networks, and subscribers, as well as the ability to adjust credit and download activity reports.
The superuser can also create additional users based on predefined roles: business analyst (view-only), partner (view-only + manage subscriber) and loader (view-only + manage subscriber + adjust credit).
The system allows Globe to adjust specific permissions per user.
We deployed CCM as part of a long-term partnership between the researchers, the University of the Philippines and Globe Telecom [20], the largest MNO in the Philippines with over sixty million subscribers.
The researcher-driven portion of the project, conducted in the Aurora province, is funded by the Philippine Government and focuses on bringing the benefits of community cellular to remote parts of the Philippines; we refer to these as the "UP sites".
The MNO created two different administrative domains for their subnetworks, one owned entirely by Globe and another for the UP sites.
For both of these networks, users are using phone numbers from Globe, though the service is branded separately from their main service bundles to make clear to users that the services and quality expectations on these extremely rural sites are different from Globe's main network.
In this section we describe each of these subnetworks including their pricing, interconnect, and context.
For site deployment dates and locations, please see the Appendix.
UP selected the province of Aurora for their CCM installations.
Aurora is a coastal province of Luzon, the main island of the Philippines, on the Pacific Ocean and the Philippine Sea.
The capital, Baler, is a relatively affluent town with readily available connectivity and robust land routes to urban areas such as Metro Manila.
Further south down the coast, dozens of fishing communities lie outside of any existing connectivity.
In these areas, people travel by boat to Baler for any needs that cannot be met in their home communities, including device repair and connectivity.
Despite the distance from coverage, initial site surveys done in 2016 found that mobile phones were prevalent and demonstrated demand by uncovering a variety of existing (though complex) connectivity solutions [7].
These communities were selected by the UP team for (1) their relative proximity to Metro Manila, (2) lack of connectivity, and (3) connection to a local university for assistance in deployments.
These deployments began in late 2017, with all seven planned sites launched as of February 2019.
The community GSM sites provide voice and SMS access to over 1,500 subscribers.Structure and Context.
The Aurora networks are organized in line with most definitions of community networks [58].
The operation and maintenance of the community network is handled by local cooperatives, in partnership with the local government units (LGUs), the local state college and the UP research team.
These partners were identified during the initial site surveys.
The LGU facilitated the legal appropriation of land for towers and helped expedite the permits and clearances required for civil works at each site.
In addition, the LGUs extended assistance to mobilize local labor for installation and deployment activities.The cooperatives conduct the day-to-day operations, business management, and maintenance of the network.
They are in charge of pre-paid credit distribution from Globe to the community retailers, who are mostly existing sari-sari (general merchandise) store owners.
The cooperative orders credit from Globe at least once a month.
After payment has been sent through a bank deposit and verified, Globe tops up the cooperative's accredited mobile number via the CCM Controller web interface.
From here, the cooperative distributes it to their authorized retailers via a locally-hosted SMS-based credit transfer application.
The cooperative receives a wholesale discount from Globe, part of which is passed on to the retailers.
The retailers earn additional income by charging a small "convenience" fee per sale.
Finally, the gross revenue from all charged calls and texts on the network is split based on a revenue sharing scheme between Globe and the cooperative, where the cooperative gets 80% and 20% goes to Globe.
Earnings are used by the cooperative to pay personnel and as savings.In terms of maintenance, the researchers employ a threetier support system.
The first tier, L1, is composed of local maintenance personnel hired by the cooperative and residing in the community.
They are assigned to do daily upkeep and basic troubleshooting of the cell site.
Any issues that are not resolved at the L1 tier are escalated to the local state college and/or the LGU, the L2 tier, which can provide intermediatelevel technical assistance.
Finally all other issues that are not resolved at the L1 or L2 tiers are escalated to the research team, which provides L3 support.Prior to launch, the researchers facilitated social enterprise training sessions with cooperatives that had no prior experience in conducting business-related activities pertaining to operations of a community network, and technical training with community maintenance personnel.
During the network launch, the researchers held a forum with the broader community where the unique properties of their networks were explained (e.g., lack of roaming to Globe's main networks) to the subscribers.
The event was also a venue for the community to raise questions and concerns regarding the network and services, and distribute SIM cards.
The distribution of SIMs in the UP networks is currently tightly controlled as part of an ongoing randomized control trial [15] on the impact of cellular networks on rural communities.
Concurrent to the installation of the UP sites, Globe also installed CCM Client access points in eleven other rural communities throughout the Philippines.
Of these, the first two were "proof of concept" (PoC) sites installed in Tanay, Rizal province (60km from Manila) and another in Talisay, Quezon province (130km from Manila).
Following the successful trials of CCM in these two PoC sites, a further eight networks were deployed in Eastern Visayas.
All of the sites are rural and lack any existing network coverage, with populations ranging from one to five thousand people.
Though census information for rural areas in the Philippines is spotty, the demographics and economics of Tanay have been described in detail in other work [54].
Another twenty networks are planned with rollouts expected throughout 2019.
Structure and Context.
The MNO's sites consist of two groups: the PoC sites in Luzon and partner sites in Visayas.
Both are organized in a more traditional fashion with Globe handling marketing, credit distribution, and installation.
For the PoC sites, Globe agents conducted selection interacting with the LGUs to procure locations and timings amenable to the local community.
For the Visayas sites, Globe instead partnered with a non-governmental organization (NGO) to find partner communities and negotiate installations.
This NGO has a long history of projects in Visayas and was able to find suitable communities in rural areas as well as assist in the day-to-day operations of the sites.
The NGO also handles the SIM card and pre-paid credit distribution from Globe to the community retailers.
The installations were done by Globe's tower deployment team using their standard site equipment, aside from the custom RAN equipment itself.
The sites use a two-tiered maintenance system with one level of lightweight local support and the main support provided by Globe staff in Manila.
One local community member is selected by the deployment team and tasked with using the network to send messages back to Globe's technical team in case of ongoing issues.
If any failures disable the network, Globe's engineers use the CCM Controller's web interface to observe the network failures and send engineering staff out to resolve the issue.
Credit sellers buy their credits by depositing money into Globe's account at a nearby (but outside of the community) bank.
They then take a small premium when distributing these credits throughout the community.
Rural connectivity projects do not lend themselves to neat stories, and this deployment was no exception.
Our deployment of CCM originated from discussions between Globe and the researchers' company, Endaga, in early 2015, and implementation work began in the summer of 2015.
Originally, Endaga operated both the CCM Controller and directly supported all field equipment running the CCM Client software.
After Endaga joined Facebook in late 2015, CCM was released by Facebook as an open source project to enable continued development by Globe and others.
At the same time, we interconnected the CCM Controller with Globe's core and then transferred administrative control of the CCM Controller to Globe in mid-2017 after a successful early proof-of-concept.
While the researchers continued to be involved in the development and aspects of the deployment of CCM, day-to-day operation of the service passed to Globe; this continues today.
In practice, this means that Globe controlled access to the CCM Controller (including software updates), and the researchers could only deploy local services on the sites we directly had access to: the UP sites.
While this wasn't the deployment configuration we originally designed CCM for, CCM was able to continue providing an interconnection abstraction towards different groups of com-munity networks, even while the administrative boundaries between system elements shifted.
Our team completed interconnection between CCM and Globe's network in mid-2016, with two trial sites launched in early 2017.
After a year of evaluation, Globe launched nine additional sites and granted permission to the UP to launch seven community networks that year (launch dates are provided in the appendix), of which six are live as of December 2018.
While a total of 17 sites have been launched throughout the project, only 9 were in operation as of December 2018 due to hardware failures; the failed sites are being replaced with new hardware that is currently undergoing testing.
The UP sites used a mix of hardware (including some self-assembled), and their deployments have not been impacted as severely as Globe's sites, which used a single vendor for their deployments.
Supporting heterogeneous hardware was not an explicit goal of CCM, but its ability to do so proved useful in our challenging rural context.
As of December 2018, CCM supports a total of about 2,800 monthly active users across 17 launched sites ( Figure 6).
Spikes in the number of active users are due to site launches, which are typically accompanied by marketing campaigns to raise awareness for the launch of service in a new town.
Table 1 provides an overview of traffic volumes across the network.
Across all sites, we observed that inbound call traffic is much more common than outbound call traffic, and is in fact the predominant form of usage on both networks.
This is indicative of "call-me" or "flashing" [13] behavior as subscribers are aware that they can save money by letting their contacts call them instead; on all networks in our deployment, subscribers are only charged for user-initated calls and SMS.
Narrowing our analysis to only user-initiated traffic, we find that SMS is the predominant form of communication, with roughly 7x more messages sent than minutes spent on calls, and over 13x the number of calls made.
This is in line with the fact that SMS rates are significantly lower than per-minute rates and extremely popular in the Philippines (the "texting capital of the world" [23]).
We observed more local traffic among the UP sites than the Globe sites.
Interviews conducted by the team suggest that one contributing factor is the fact that communities served by the UP sites can be clustered into two groups where the sites are located relatively near each other, and because the community networks support existing locally relevant services.
In the UP sites in San Luis, Aurora, locals frequently conduct trade activities and have personal connections with residents from the other sites, relationships which existed before the arrival of the community cellular network.
In another example, the only high school in the area is located in Dikapinisan and students from the nearby sites need to relocate temporarily for their studies.
Parents used the community cellular network to call their children and get updated on other current events.
We note though that for these "inter-cove" (the sites are located in a series of coves) transactions, although they are classified as local traffic for billing purposes, these communications are routed through the Controller's SIP switch.
Community members also told our team that they used the network for local events, such as a community beauty contest that used SMS for voting.
Figure 7 depicts the launch date and uptime for each site.
Downtime was a common case in our extremely rural sites.
All sites use satellite backhaul, and even where grid power is available, its poor reliability necessitates battery backups or fully off-grid solar systems; some sites were also turned off on a nightly basis to conserve power.
Overall, the mean site uptime is only 35% across all sites, with a median of 27% for Globe sites and 40% for UP sites.
3 This reality motivated our need to prioritize disconnection and downtime as common cases to be handled by CCM.To understand whether users benefited from CCM's disconnected operation support, we examined CDRs from time periods while sites were offline.
We only considered userinitiated "local" communications and credit transfers, since communication out of a site is not possible while it does not have a connection to the CCM Controller.
This is still a conservative assumption, since communication between two sites in the same network (such as between two different UP sites) is also considered "local".
We include credit transfer as well since it is a crucial utility used by all users of the network to buy service: if credit transfer breaks, sales are directly impacted, hurting network sustainability.We find that overall, offline local traffic accounts for 16% of the total local traffic, comprising 7% of local traffic in the MNO sites and 23% of local traffic in the UP sites.
This accounts for 4,678 minutes of calls, 81,434 SMS messages, and 11,970 credit transfers representing approximately US$4,600 worth of transfer activity.
These credit transfers are largely top-up sales to end users and themselves represent 14% of the transfer volume across all sites, benefiting Globe, retailers, and the community networks at large.
Without effective support for offline operation, these sites would have been completely down during backhaul outages, further complicating the already difficult business and sustainability cases for these rural network sites.The primary cost CCM incurs for supporting offline operation is the overhead of state synchronization, carried by the checkin protocol.
Figure 8 shows the distribution of checkin request and response sizes before and after our optimization.
The median checkin request and response is 2.6kB and 283B, respectively, corresponding to median "unoptimized" request and response sizes of 14.4kB and 283B.
Our optimization is much more effective at the tails: 99th percentile request and responses sizes are reduced by 86.3% and 91.2% respectively.
The optimized checkins place minimal burden on our networks: even at the 99th percentile, a checkin consumes less bandwidth than a single 6 second call (using a 64kbps codec).
We note that these sizes are prior to gzip compression over the wire, further reducing overhead.
A consequence of CCM's decentralized architecture, and one that differentiates it from traditional centralized cellular networks, is that it allows customization of the individual networks to local needs, requirements, and desires.
During our deployment, we and our partners took advantage of this capability to implement a number of unique services in the UP sites.
Specifically, we implemented (1) a local repair support tool aiming to empower lay actors from within the community to conduct routine maintenance and repair, (2) a custom local billing solution to allow our team to explore the demand curves for rural communication access without requiring costly changes to Globe's billing systems, and (3) a local "outage hotline" connecting users directly to the UP team.
These applications demonstrate CCM's ability to support flexible and dynamic community networks.Repair.
Repair is central to sustainable rural networking interventions [56,29].
Further, in rural areas, we have the unique advantage that rural users are natural repairers [30].
While Globe installations use traditional maintenance practices, the UP community networks sought to address network repair and maintenance through a local-only repair support service that leveraged latent skills and abilities present in the community [32].
The researchers implemented a set of services leveraging the fact that community networks interact directly with users and can help guide them in conducting repair.
The service consisted of digital "repair manuals" embedded into the community cellular infrastructure.
Network components are labeled with small codes (e.g., "ANT" for antenna) and an SMS shortcode (e.g., 777) that, when texted, provides background and debugging information about that particular system element.
Labels are printed on a large poster in a community building near the tower.
For instance, a user texting "hot" to the shortcode will receive a message instructing them to turn off the system to allow it to cool.
This system was implemented on the Client's local softswitch (see Figure 2), and provides a unique, local mechanism for repair that is particularly appropriate for the UP sites, which don't have dedicated commercial technicians.Billing.
The UP sites also have unique requirements for their billing system.
Though CCM handles tariffs between Globe and the community network, the community sets their prices within their domain for their users.
For the UP systems, the billing system was extended to enable promos, a well-known local pricing scheme among Filipino MNOs.
Unlike the per-minute and per-SMS fees charged by default, users pay up-front for a set of network functions, usually a discrete volume of SMS and voice minutes.
These services were implemented in CCM as Client-only databases storing current promo offerings and promo counts for each subscriber.
The implementation also allows the administrator to grant promos to subscribers, similar to a rewards system.Promos exist at a per-site level and are not synchronized across sites; quotas or discounted tariffs are stored locally.
These are defined when the network administrator creates the promos via a web form or a CSV file upload.
The system supports multiple promos per user.
It also offers a SMS interface for users to check their promo status and usage.Outage Hotline.
The UP sites also offer an SMS-based outage hotline.
This free service accepts questions, comments, reports and other service-related inquiries from the communities.
The hotline logs received messages to a file on the CCM Client's storage, which are synchronized to a remote server (distinct from the Controller) at regular intervals.
The hotline also helps the researchers in the detection of technical issues in the field as community members can easily report any problems that they may experience on the ground.
This is also the mechanism that local maintenance personnel utilize to send network status updates.
Network downtime is common in our deployment.
According to one user at the start of our deployment, "I'm OK even if [the network] is turned off at night.
At least now, we have something that we can use to communicate.
Unlike before, we totally have none."
This attitude changed during the course of the deployment; despite the utility of disconnected operation, users still came to expect continuous, reliable operation from these networks: "Why don't we have signal during the night?
They shouldn't turn it off during the night, because it is still important in case something bad happens here."
In our deployments, outages occurred at the boundaries of the network's physical infrastructure: power systems, backhaul networks, and site hardware.
While we were able to mitigate these to an extent, we regard reliability in community cellular networks as a open challenge.
All sites use satellite backhaul, and unreliable or nonexistent grid power requires use of battery backups or offgrid solar systems.
While we do not have ground truth for all site outages, outage records from the UP sites provide an approximate distribution of outage causes (Table 2).
At these sites, the most common cause of outage was backhaul failure, followed by power outages, collectively accounting for about 66% of the downtime, with hardware or RF issues accounting for the remainder.
Backhaul failures had minor impact since they tended to be transient and since CCM gracefully handles offline operation, but power failures were more serious, often resulting in extended downtime.
Improving resilience to power failures is hard, as increasing battery capacity adds to site cost; approaches like "virtual coverage" [26] address this challenge to an extent, but require non-standard hardware.
To reduce long-term outages, sites are shut down at night to reduce power utilization during off-peak hours, either manually or via an automatic switch.
All significant offline periods at Globe sites ( Figure 7) were due to hardware failure; this impacted 9 of 11 launched sites.
When Globe took on operation of the CCM Controller, they selected a new hardware vendor to provide equipment for Globe sites.
This vendor included the CCM Client into their existing mature rural base station product, which promised to allow Globe sites to use proven hardware already being produced at scale, reducing cost.
This hardware used an SD card as a disk, which was used in read-only mode in the vendor's standard product offering; this is a best practice for rural networking hardware [56].
To support CCM, which requires mutable persistent storage to support offline operation and local applications, the vendor continued to use the SD card, but in a writeable mode.
This led to a pernicious failure mode where devices would fail after several months' successful operation in the field due to disk corruption driven by power failures and excessive writes.
Community networks benefit from applications like CCM and those outlined in Section 6.3 that require mutable persistent storage, but supporting these applications in rural environments remains a challenge.
Towards LTE.
The rapidly maturing ecosystem of open source telecom software and newly-affordable RAN equipment designed for rural cellular networks makes community cellular networks technically and financially feasible.
As noted, CCM only supports GSM (2G) service because basic GSM-only phones are still the plurality in the rural areas we target [54].
However, CCM's architecture represents a framework for MNOs and community networks to partner and share resources.
We expect the shift towards LTE (4G) to make community LTE networks viable in the coming years and we are actively pursuing this agenda [53].
The shift to LTE creates new opportunities for community networks.
While GSM networks are essentially deployed in four spectrum bands globally, LTE devices support dozens of band combinations, some of which support spectrum sharing (such as Band 48 [17]) and others that fall within "digital dividend" bands (e.g., Band 71); the latter is ideal for rural networks due to improved propagation of low band spectrum.
Even without shared spectrum, demand for LTE spectrum for capacity in urban areas is likely to result in substantial underutilization in rural geographies, opening up opportunities for partnership and spectrum re-use as we've done in our deployment.
Driven by use cases like private LTE networks for enterprises and industrial "Internet of Things" deployments, as well as applications like mobile edge computing, the LTE base station ecosystem is already larger than that for GSM, lowering costs for community networks.
Radio equipment of varying degrees of openness is under development [57,1], and multiple open source software core networks, analogous to OpenBTS and Osmocom, are available [41,21,43].
Given this progress, community LTE networks could provide broadband service independently of MNOs, connecting to the Internet just as a small ISP would.
Recognizing this, we recently proposed a decentralized LTE architecture [34] that does not require a telecom's (or any centralized organization's) participation.
We expect a fully distributed architecture should ease deployment and empower community networks at the cost of increased difficulty scaling.
Exploration of the political and technical tradeoffs across the centralized/decentralized and telecom partnership/independent network design spaces remain open research questions.Fault diagnosis.
Community cellular networks rely on a collection of systems to provide service to end users; just to send an SMS, a user's traffic interacts with a radio implementation (proprietary hardware, or a software radio), a GSM stack (OpenBTS or Osmocom), a SIP engine (Freeswitch [19]), an SMPP gateway (Kannel [36]), and of course CCM.
Even for experts, diagnosing faults in the mobile stack is challenging due to the the need to manage state across layers and components.
We relied on regular automated end-to-end health checks of the CCM Client to identify and rectify faults; automated failure diagnosis will be essential for community networks.Sustainability.
As of today, only a few of the UP sites (and none of the MNO sites) are financially sustainable, taking into account the ongoing operating costs for the sites.
This was expected for the unsustainable UP sites, as they were too small to provide enough revenue.
We are hopeful that future research endeavors into novel business models and cost structures will resolve this issue.
The MNO sites were designed to all be sustainable but poor system reliability hurt usage.
We remain hopeful that stability improvement will increase revenue to sustainable levels.Repeatability.
One of our broader objectives is to develop a scalable and repeatable model for community cellular networks.
We were fortunate that our project did not require any significant regulatory changes and that spectrum sublicensing was permissible under existing Filipino regulations.
This is not always the case, and where MNOs are unable to allow third parties to use their spectrum, they may not be able to engage in this particular business model.
Nevertheless, CCM reduces the challenge of starting many community networks to a commercial negotiation rather than a regulatory discussion (or even legislative action), often a much lower bar.
For the millions who live outside of basic mobile coverage, community cellular networks present a way to sustainable mobile coverage.
Finding ways to remove the regulatory and commercial barriers to their growth is key to realizing this potential.
Working with MNOs provides a straightforward, if not necessarily easy, path to doing this that requires neither major regulatory changes in many jurisdictions nor any of the actors involved to act contrary to their first order interests.
The challenge that remains is building the platform to connect these different entities together.Our work shows that these challenges are surmountable, and provides an example of ways to deploy community networks at scale.
We identified critical design goals for such a system -autonomous services, minimal transaction costs and risk, and minimal absolute deployment costs -and implemented CCM to realize these goals.
Through a large-scale deployment, we demonstrate CCM's ability to effectively support these community network -MNO partnerships, connecting 17 communities and thousands of users.
Our system is open source, 4 and we hope others will find it useful for replicating this model.
Table 3 depicts launch dates and locations for each site, and Figure 9 shows the locations of deployed sites.Site costs.
The below tables provide an example of site fixed costs and operating expenses for a typical site in our deployment.
Note that prices are in USD, and are approximate.
These prices are estimates that reflect cost of equipment once it has already cleared customs and is in country.
Similarly, civil and telecom works costs can vary depending on the difficulty of access to a particular site.Globe preferred to have a single vendor for each component, with the goal of standardizing their deployments and reducing costs.
In contrast, the UP installations used different setups and vendors due to a combination of funding limitations, procurement difficulties and delays.
For example, we experienced challenges in the procurement and importation of GSM radio hardware.
As such, some sites used equipment assembled from spare components we already had in stock.The monthly backhaul subscription constitutes the bulk of the OpEx costs.
Since the sites are very remote, the only feasible option is VSAT (a satellite Internet technology) which is also expensive.
Backhaul prices vary significantly depending on the provider; Globe has existing bulk contracts for capacity as well as their own VSAT hub and network infrastructure, lowering costs compared to end-to-end VSAT providers.
Other OpEx components include transportation costs by the local cooperative for credit distribution and collection, and monthly honoraria for maintenance staff.Infrastructure re-use -for example, using an existing tower or building to mount equipment -can reduce costs significantly when possible.
For the UP sites, the lack of existing towers or other high structures required constructing new towers from scratch.
We identified a local metalworker to fabricate of towers, which we expect will reduce transportation costs compared to shipping tower components from Manila.
Moreover, while grid power is provided in Aurora by a local electric cooperative, the grid infrastructure was deemed unreliable by the locals, who recommended that we use an off-grid solar power system instead.
The local cooperative also favored this to avoid paying for the site's electrical consumption.In our deployments, we used equipment that ran on several different voltages: 24VDC (common for low-power wireless equipment), -48VDC (common for telecom equipment), and 220VAC (grid voltage in the Philippines).
This not only required additional equipment to perform the necessary conversions, but also led to decreased power efficiency for the entire site, driving up the cost of power, the second-largest component of site CapEx after the radio itself.These costs also do not include fees for permits, as they were waived by the partner local government.
As the project's main intention is research and not profitability, the local government units recognized the project's potential to help their constituents.
While we do not have direct knowledge of what these fees cost, anecdotally we understand that they can both vary significantly by municipality and can constitute a significant portion of site costs; the permitting process is a point of leverage for local governments.
Although fees were waived in our case, we still have to submit requisite documents such as construction plans and electrical plans.
Table 4: An example breakdown of a deployed site cost for a Globe site.
Two different power systems are considered, one for fully off-grid sites and another for sites with grid power.
The radio vendor is anonymous due to a non-disclosure agreement with Globe.
Cost Notes GSM Radio (Endaga CCN1) US$ 4,700 Locally-assembled, 2x10W.
GSM Radio (NuRAN LiteCell 1.5) US$ 6,000 2x10W.
We thank the anonymous reviewers and our shepherd Keith Winstein for their helpful comments which improved the quality of this work.
CCM was developed over many years at xSite launch dates.
Sites were launched throughout the three year duration of the project.
While initial testing at "proof of concept" sites began as early as 2016, the bulk of sites were deployed in late 2017 and throughout 2018.
We note that while the UP sites were deployed at a rate of less than once per month, Globe sites were deployed in bursts, with as many as four sites being deployed within the same week.
Site launch dates.
Sites were launched throughout the three year duration of the project.
While initial testing at "proof of concept" sites began as early as 2016, the bulk of sites were deployed in late 2017 and throughout 2018.
We note that while the UP sites were deployed at a rate of less than once per month, Globe sites were deployed in bursts, with as many as four sites being deployed within the same week.
