The Botnet threats, such as server attacks or sending of spam email, have been increasing.
A method of using a blacklist of domain names has been proposed to find infected hosts.
However, not all infected hosts may be found by this method because a blacklist does not cover all black domain names.
In this paper, we present a method for finding unknown black domain names and extend the blacklist by using DNS traffic data and the original blacklist of known black domain names.
We use co-occurrence relation of two different domain names to find unknown black domain names and extend a blacklist.
If a domain name co-occurs with a known black name frequently, we assume that the domain name is also black.
We evaluate the proposed method by cross validation, about 91 % of domain names that are in the validation list can be found as top 1 %.
The Botnet [21,5,18] threats have been increasing.
When infected hosts receive a command from a Command & Control (C&C) server, they launch a distributed denial-of-service (DDoS) attack, send spam email, and steal personal information [1,22].
Moreover, a bot propagates through networks [7].
Therefore, network operators are required to find infected hosts in their networks to stop malicious activities.To find infected hosts, methods of monitoring DNS traffic has been proposed [10,4,6].
When a bot attempts to connect to a C&C or malware-hosting server, it sends a DNS query to resolve domain names of these server.
Therefore, given domain names of C&C or malwarehosting servers, we can find infected hosts by monitoring DNS traffic and finding the hosts that send queries of these domain names.
In the rest of this paper, a black domain name denotes a domain name of a C&C or malware-hosting server.
To stop malicious activities of bots, we should block connections from infected hosts to black domain names.A blacklist can be created by analyzing bots.
We need to capture bots to analyze them, and honeypots [2,16,14] have been proposed to capturing bots.
A honeypot, e.g., operating system without applying security patches, is a vulnerable system.
When a bot attempts to infect other hosts, it uses the vulnerabilities of the target host.
Therefore, a honeypot can capture bots effectively.However, it is hard to create a blacklist that covers all black domain names because of following reasons:• The large number of new bots are observed in a day, honeypots can hardly capture all bots and we need the large amount of time to analyze bots.
• There is a bot that sends queries of many different black domain names (e.g., Conficker worm [15]), we can hardly take hold of all black domain names.Therefore, we can not block all connections from infected hosts to black domain names and stop malicious activities with the blacklist.
Our objective of study is to stop malicious activities that can not be stopped with the blacklist.In this paper, we propose a method for finding unknown black domain names in order to stop malicious activities of bots.
We focus on DNS queries sent by infected hosts.
One bot may send several queries of black domain names because of a C&C server redundancy.
Therefore, we assume as follows:Assumption: If two different queries of domain names that are sent by many hosts exist and one is black, the other domain name is also black.Using this assumption, we attempt to find unknown black domain names and extend a blacklist by using cooccurrence relation [11] between two different domain names.
We define the co-occurrence relation between domain names as different domain names in queries sent by the same host.
If a domain name co-occurs with a known black domain name frequently, we assume that the domain name is an unknown black domain name.
We define the score of a domain name by using cooccurrence relation with domain names of a given blacklist.
However, when we applied the scoring method by using naive co-occurrence relation, we found that we did not classify domain names as black or not correctly.
Therefore, we improved the scoring method by using weight of the number of hosts or domain names in queries sent by hosts.
If the score of a domain name is large, we classify the domain name as black and extend the blacklist by adding the domain name to the original blacklist.
Moreover, when we find hosts that send queries of unknown black domain names, we expect that we can find unknown infected hosts.
Finding unknown infected hosts is our secondary objective of study.
We applied the proposed method to DNS traffic data and blacklist of known black domain names.
The results show that we can validate our assumption and find unknown black domain names that are not in the blacklist to extend the blacklist.
As a result, we can find unknown infected hosts by using the extended blacklist.The rest of this paper is organized as follows.
Section 2 describes related works.
Section 3 describes the proposed method for finding unknown black domain names.
Evaluation and experimental results are presented in Section 4.
Section 6 summarizes our study.
In order to find botnets, many approaches of monitoring or analyzing DNS traffic data have been proposed.
Our previous work [10] proposed method based on Bayes estimation [8,20] for finding mass-mailing worm infected hosts by using a blacklist of known black domain names.
This method calculate the black degree of a DNS query by using a ratio of the number of infected hosts that send the query or the number of non-infected hosts that send the same.
Moreover, a black degree of a query sent by many infected hosts is large and a black degree of a query sent by many non-infected hosts is small.
However, the number of non-infected hosts that send a query of an unknown black domain name may be greater than the number of infected hosts that send the same.
In this case, a black degree of the unknown black domain name is small.
Our proposed method may classify the domain as black because the method focuses on only infected hosts mainly.
Therefore, we believe that our proposed method can find infected host more efficiently.
In order to find botnets, Choi et al. [4] calculated the score of a domain name by comparing hosts that sent query of the domain name with hosts that sent the same query at a different time.
However, in order to reduce calculation cost, if the number of hosts that send a query of a domain name is smaller than a threshold, a score of the domain name is not calculated and classified as legitimate.
Therefore, this method may classify an unknown black domain name in query sent by a few hosts as legitimate.
Our proposed method may find an unknown black domain name in a query sent by a few hosts because we do not determine this threshold.In our previous work [9], we proposed a method for improving accuracy of a blacklist and finding unknown black domain names by using the DNS query graph that represents a relation between hosts and a domain name.
A blacklist created by analyzing bots often includes legitimate domain names because bots send a query of legitimate domain name to confirm network connectivity.
Therefore, we must remove legitimate domain names from a blacklist.
Using this method with our proposed method, we expect that we can find more unknown infected hosts because legitimate domain names are removed from a blacklist and black domain names are added to the blacklist.
In this section, we describe our method of finding unknown black domain names and infected hosts to stop malicious activities of bots.
In order to find unknown black domain names and infected hosts, we use DNS traffic data and a blacklist of known black domain names.
In this paper, DNS traffic data denotes DNS user queries that hosts send to a DNS cache server.
Monitoring DNS user queries, we can obtain source IP address of hosts and domain names.
Our proposed method is to extend the blacklist and consists of following three steps: 1) Classify all hosts as infected or non-infected.
2) Find unknown black domain names in queries sent by infected hosts to extend the blacklist.
3) Find unknown infected hosts.
Details of these steps follows:Step 1: We classify all hosts H (set of source IP address) appeared in the traffic data as infected hosts H I or non-infected hosts H N by using a blacklist of known black domain names.
If a host sends a query of domain name that is in the blacklist, the host is classified as H I .
Other is classified as H N .
An overview of this step is shown in Fig. 1.
Step 2: We find unknown black domain names in queries sent by H I to extend the blacklist by using a method based on the co-occurrence relation.
If a domain name d co-occurs with a black domain name frequently, we assume that d is an unknown black domain name.
An overview of this step is shown in Fig. 2, and a detail of this step is described in Section 3.2.
Step 3: Finally, we find unknown infected hosts.
We find hosts which send a query of a black domain name found in the extended blacklist.
An overview of this step is described in Figure 3.
As mentioned step 2, we attempt to find unknown black domain names in queries sent by H I .
However, a user of a infected host may use a DNS server (e.g., browsing web sites, sending email) or a bot to confirm network connectivity.
Therefore, domain names in queries sent by H I consist not only of black domain names but also legitimate domain names.
Here, a legitimate domain name are not domain names of a C&C server or malware hosting server.
We must be careful not to classify a legitimate domain name as black.
Therefore, we need to define the criterion for classifying domain names as black or legitimate.
The criterion is whether a score is higher or lower than a threshold.
In this section, we describe a scoring method for classifying domain names.First, we define a degree of co-occurrence relation based on Jaccard index [11] between two domain names C(d i , d j ) as follows:C(d i , d j ) = ∑ {h | di∈D h ∧dj ∈D h } 1 {h | d i ∈ D h ∨ d j ∈ D h } .
(1)Here, H denotes all hosts, D denotes a set of domain names, and D h denotes domain names in queries sent by h ∈ H.
The numerator of Equation (1) represents cooccurrence frequency between d i and d j , the denominator of Equation (1) represents the total number of hosts that send queries ofd i or d j .
C(d i , d j ) represents co- occurrence rate between d i and d j .
If C(d i , d j )is large, we assume that the relation between d i and d j is strong.
Next, we define a score S of a domain name by using Equation (1).
When D B denotes black domain names, the score of a domain name d ∈ D is described as follows: S(d) = ∑ d b ∈DB C(d b , d).
(2 As mentioned above, we define the black degree for a domain name as S. However, when we apply the scoring method S based on co-occurrence relation to a DNS traffic and a blacklist in order to find unknown domain names, we may find that some high-scored legitimate domain names.
Therefore, we need to improve scoring method that is defined in Section 3.2.
We describe types of high-scored legitimate domain names as follows:Popular domain names: Popular domain names, e.g., www.google.com, are those in queries sent by many hosts (Fig. 4).
A user of a infected host sends queries of these domain names to a DNS server to browse or sends email, or a bot may send them to confirm network connectivity.
Therefore, a popular domain name may cooccur with a black domain name frequently, and thus S of a popular domain name may be large.Domain names in queries sent by infected heavy user: A heavy user is a host that sends many queries to a DNS server.
When we monitor DNS traffic data and use a blacklist, we may find infected heavy users (Fig.
4).
Due to these users, many domain names may cooccur with a black domain name.
However, not all domain names in queries sent by an infected heavy user are black.
Because these problematic domain names impact the accuracy of classifying black domain names, we must eliminate their influence.
In the rest of this section, we describe methods for doing so.
We need to reduce the score of popular domain names to prevent classifying those names as black.
Here, we consider the popularity of domain names from the perspective of infected or non-infected hosts.
While legitimate popular domain names are popular with both infected and non-infected hosts, black domain names are popular with only infected hosts.
Therefore, we focus on the number of non-infected hosts that send a query of a domain name.The weight of a domain name W (d) is described as follows:W (d) = {h | h ∈ H I ∧ d ∈ D h } {h | h ∈ H ∧ d ∈ D h } .
(3)Equation (3) (d b ) because a numerator of W (d b ) is greater than a numerator of W (d p ).
Now, we define a weighted score S w by using Equation (3).
S w (d) = S(d) × W (d).
(4)Using S w , we can reduce the scores of popular domain names.
An overview of this is shown in Fig. 5.
According to past surveys of the ratio of infected hosts to non-infected hosts, a ratio is about 1% [3].
Therefore, if a score of popular domain name S(d) is high, W (d) is very small because the denominator is much greater than the numerator.
As a result, the weighted score of the popular domain name S w (d) is very small.
We need to reduce the score of a domain name in a query sent by an infected heavy user to prevent classifying this domain name as black.
Here, we consider two cases of a relation between a domain name d and a known black domain name d b .
One is a relation between d and d b sent by a heavy user, the other is a relation between d and d b sent by a non-heavy user.
We assume that the former relation is clearly weaker than the latter.
However, calculating a relation between d i and d j by using C based on the naive co-occurrence relation, increment of C is the same in each case.
As a result, a score S of a legitimate domain name in a query sent by an infected heavy user is large.Therefore, we focus on the number of domain names sent by a host and define weighted degree of co-occurrence relation between two domain names C ′ (d i , d j ) as follows:C ′ (d i , d j ) = ∑ {h | di∈D h ∧dj ∈D h } 1/ D h {h | d i ∈ D h ∨ d j ∈ D h } .
(5)The numerator of this equation is weighted by the number of domain names in queries sent by a host (|D h |).
Therefore, if a heavy infected user send queries of a domain name and a black domain name, co-occurrence frequency may fairly increase.
Using Equation (5), we define a new score of the domain name S ′ (d) as follows:S ′ (d) = ∑ d b ∈DB C ′ (d b , d).
(6)Using Equation (6), we can reduce a score of a domain name in a query sent by an infected heavy user.
An overview of this is shown Fig. 6.
Using Equations (3) and 5, we can eliminate problems related to popular domain names and infected heavy users.
Finally, we define a score S ′ w as follows:S ′ w (d) = ( ∑ d b ∈DB C ′ (d b , d) ) × W (d).
(7)We evaluate the effectiveness of these scoring methods (Equations (2), (4), and (7)) in next section.
In this section, we describe evaluation of our proposed method.
In order to evaluation our proposed method, we used DNS traffic data captured during an hour on February, 2009.
We also used a blacklist of about 270 known domain names create by a honeypot during the same period.
Our proposed method is based on the assumption in Section 1.
We used 10-fold cross validation [12] to validate this assumption.
Firstly, we split a blacklist into 10 lists, we create a learning list by using 9/10 of the lists and a validation list by using 1/10 of the rest.
We can create ten types of learning and validation lists.
Secondly, we applied our proposed method to DNS traffic data and each learning list and took average of each scores of ten validations.
Finally, we extracted domain names in top n % of average scores and calculated each ratio of the number of these domain names in the validation list to the total number of domain names in the validation list.
If our assumption is correct, this ratio will be high.
The results of the validation are shown in Fig. 7.
Fig. 7 shows that each ratio of the number of domain names in top n % of scores to the total number domain names in validation list.
This result shows that scoring method S ′ w can find unknown black domain names effectively.
Moreover, the greatest difference of effectiveness is appeared in about top 1 % of scores.
Table 1 shows that a ratio of the number of domain names in top 1 % of scores.The result shows that when we score a domain name by using naive scoring method S, we find only about 23 % of domain names in validation list.
In Section 3, we describe that score of problematic domain names is large.
Therefore score of domain names in validation list is relatively small.
As a result, the ratio is also small.
While we find about 27 % of domain names in validation list by using the scoring method S w which reduce scores of popular domain names only, we find about 65 % of domain names in validation list by using the scoring method S ′ which reduce scores of domain names in queries sent by heavy infected hosts only.
This result shows that when we use the scoring method S, many high-scored domain names are in queries sent by infected heavy hosts.
Moreover, we find that only a few infected heavy hosts send queries of these domain names.
When we score a domain name by using the scoring method S ′ w which reduce scores of popular domain names and domain names in queries sent by infected heavy hosts, we find about 91 % of domain names in the validation list.
This result shows that if we reduce scores of problematic domain names, we can find unknown black domain names.
As mentioned Section 4.2, we found that the scoring method S ′ w was most effective to find unknown black domain names.
Therefore, we applied S ′ w to DNS traffic data and all known black domain names to validate our proposed method.
We classified high-scored domain names as black, legitimate, unclear by using a web search engine.
If information sites about threats [13] are included in the search results for a domain name, we classify the domain name as black, and if web sites, e.g., company sites, are include in the search results for a domain name, we classify the domain name as legitimate.Other domain names are classified as unclear.When we classified domain names that have the top 100 score by using a web search engine, we found that these domain names consisted of 39 % black, 4 % legitimate, and 57 % unclear.
In domain names classified as black, there were domain names including malformed characters.
If bots sends queries of these domain names to DNS server, responses from DNS server may be NXDOMAIN (no such domain).
Therefore, the bots can not connect C&C server and perform malicious activities.
However, our secondary objective of study is to find infected hosts.
We thus classify these domain names as black to find infected hosts.
Detail of these domain names are described as follows:<black domain names>:<port number>: We found, e.g., "helsinki.fi.eu.undernet.org: 6669", domain names including port number.
Moreover, we found that all port number appeared in these domain names were used for Internet Relay Chat (IRC) protocol.
When a C&C server attempt to send command to a bot, IRC protocol is often used.
Therefore, we assumed that the left side of ":" was a domain name of a C&C server.
<black domain name>/<directory name>: We found a domain name that was like URL ("google-analitucs.com/loader/").
When we examined "google-analitucs.com" by using a web search engine, we found that the domain name was black.Therefore, we assumed that "google-analitucs.com/loader/" was black.We believe that unknown black domain names are included in unclear domain names.
When we examined unclear domain names, we found that there were suspicious domain names in unclear as follows:1.
Domain names whose subdomain differ from a subdomain of a known black domain name: We found, e.g., "china.alwaysproxy.info", domain names whose subdomain differ from a subdomain of a known black domain name.
For example, "{newss|ofat|ports}.
alwaysproxy.info" are known black domain names.
As mentioned Section 1, one bot may be send several queries of black domain names.
Therefore, we assumed that a domain name of this case was one of domain names of C&C servers.
However, we must be careful, e.g., "xxx.3322.org" domain names by using hosting service.
There are many subdomain of domain names by using hosting service.
Therefore, if "xxx.3322.org" is black, "yyy.
3322.org" may not be black.
We did not classify these domain names in unclear as black.2.
<black domain name>.
<legit domain name>: We found, e.g., "www.h7smcnrwlsdn34fgv.
info.
<legit domain name>", domain names that a legit domain name followed a known black name.
In this case, we found that all black domain names that were a left side of the above format were domain names that the bot (Sality.Q) attempt to connect.3.
Domain names in queries for DNSBL lookups: DNSBL (DNS Blacklist) [17] is a DNS-based database consisting of malicious IP address and often used for spam filter.
Sending a query of a domain name including IP address of a sender to a DNS server, we can check whether received email is spam or not.
We found, e.g., "<IP address>.
zen.spamhaus.org", domain names in queries for DNSBL lookups.
Bots may send queries for DNSBL lookups to check that the bots themselves are in blacklist [19].
Therefore, a possibility exists that these domain names are black domain names.In this validation, we classified only suspicious domain names in case 1 as black.
A possibility exists that these domain names are true unknown black domain names because these domain names are not appeared in search results.
Domain names in case 2 and 3 also may be true unknown black domain names, we will validate whether these domain names are black or legit in our future work.
Table 2 shows the classification results for domain names that have the top 20 score.
These results show that 80 % of the domain names in top 20 scores are black domain names that are not in the given blacklist and that no legitimate domain name is included in top 20.
This indicates that our proposed method can find unknown black domain names.Our secondary objective of study was to find unknown infected hosts.
Therefore, we created an extended blacklist by adding unknown black domain names that had the top 100 scores to original blacklist.
We then compared the number of infected hosts found by using the extended blacklist with the number of hosts found by using the original blacklist.
The results showed that the number of infected hosts found by using the extended blacklist was 3 % higher than the number found by using the original blacklist.
We consider that this rate is not enough to achieve our secondary objective of study.
In this section, we discuss a possibility of countermeasure against our proposed method, as well as the evaluation results for our two objectives; finding unknown black domain names and finding unknown infected hosts.As mentioned Section 4, our proposed method can find black domain names effectively.
However, if bots send the large number of queries of legitimate domain names, our proposed method can be polluted.
This is because we reduce co-occurrence frequency between a domain name and a black domain name in queries sent by a infected heavy host in Equation (5).
Even though a domain name co-occurs with known black domain names frequently, the score of the domain name is small and classified as legitimate when many bots send the large number of queries.
Considering these cases, we will improve our proposed method in our future work.As for our primary objective, finding unknown domain names, our experimental results shows that a bot send several queries of black domain names which is not included in original blacklist.
Therefore, we can stop malicious activities of bots by using extended blacklist more effectively because extended blacklist includes more domain names of C&C servers than original blacklist.
However, it remains that we have 4 % of false positives (legitimate domains) when we manually inspect domain names whose scores are in top 100.
Though we can not inspect all the domain names of top 1 % (1600) domain names with which we can achieve 91.2 % coverage, the false positive ratio may increase.
It is a future work to tune the threshold on how many high-scored domains to be used to find unknown infected hosts.As for our secondary objective, finding unknown infected hosts by using extended blacklist, we found that the number of unknown infected hosts is relatively small compared to the number of unknown black domain names.
While a rate of increase in the number of unknown domain names is 18 %, a rate of increase in the number of unknown infected hosts is 3 %.
In this paper, we focus on domain names in queries sent by infected hosts to extend blacklist.
Therefore, although unknown black domain names can be found, most hosts which send those domain names are known infected hosts found by using original blacklist.
We should improve our proposed method to find unknown infected hosts more effectively and achieve secondary objective of study.
In this paper we proposed a method for finding unknown black domain names and infected hosts by using DNS traffic data and a blacklist of known black domain names.
Our proposed method based on the cooccurrence relation extends the blacklist.
Using the extended blacklist, we can find unknown infected hosts.We applied our proposed method to DNS traffic data and a blacklist.
The results of cross validation show that about 91 % of domain names that are in the validation list can be found.
The results of effectiveness of the method show that the number of hosts found by the extended blacklist is 3 % higher than the number found by the original blacklist.We will set a threshold to determine whether a domain name is black or legit and improve our proposed method to find more unknown infected hosts in our future work.
