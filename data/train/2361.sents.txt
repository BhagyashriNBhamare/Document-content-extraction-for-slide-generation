Modern storage systems orchestrate a group of disks to achieve their performance and reliability goals.
Even though such systems are designed to withstand the failure of individual disks, failure of multiple disks poses a unique set of challenges.
We empirically investigate disk failure data from a large number of production systems, specifically focusing on the impact of disk failures on RAID storage systems.
Our data covers about one million SATA disks from 6 disk models for periods up to 5 years.
We show how observed disk failures weaken the protection provided by RAID.
The count of reallocated sectors correlates strongly with impending failures.
With these findings we designed RAIDSHIELD, which consists of two components.
First, we have built and evaluated an active defense mechanism that monitors the health of each disk and replaces those that are predicted to fail imminently.
This proactive protection has been incorporated into our product and is observed to eliminate 88% of triple disk errors, which are 80% of all RAID failures.
Second, we have designed and simulated a method of using the joint failure probability to quantify and predict how likely a RAID group is to face multiple simultaneous disk failures, which can identify disks that collectively represent a risk of failure even when no individual disk is flagged in isolation.
We find in simulation that RAID-level analysis can effectively identify most vulnerable RAID-6 systems, improving the coverage to 98% of triple errors.
Storage systems have relied for decades on redundancy mechanisms such as RAID to tolerate disk failures, assuming an ideal world with independent and instantaneous failures as well as exponential distributions of the time to failure [3,11,18,36].
However, some assumptions no longer hold given the fault model presented by modern disk drives.
Schroeder and Gibson [42] analyzed 100,000 disks and rejected the hypothesis of the time between disk replacements following an exponential distribution.
Further, in addition to whole-disk failures that make an entire disk unusable, modern drives can exhibit latent sector errors in which a block or set of blocks become inaccessible [6,29].
Such sector faults in otherwise working disks further weaken the RAID reconstruction capability.
Not only were sector errors previously ignored in the early RAID reliability model, these errors may worsen over time due to increasing drive complexity [4] and the common use of less reliable disks in storage systems [6,17,38].
In short, RAID protection is no longer enough; however, given its prevalence in the storage industry, a mechanism to shield RAID systems from unreliable disks would have a wide audience.System designers have realized the new threats caused by these disk faults and built additional mechanisms to improve data reliability.
While the original RAID system would protect against the loss of data from one disk (either an unavailable sector or the failure of the entire disk), the trend has been to use additional redundancy to guard against related data loss on multiple disks.
For example, some storage arrays incorporate extra levels of parity, such as RAID-6, which can tolerate two simultaneous whole or partial disk failures [2,12,13,19,22,23]; others add redundancy with CPU-intensive erasure coding [14,25].
Throughout this paper we focus on "triple-disk failures," or "triple failures" for short, which refer to any combination of losing related data from three disks simultaneously, due to bad sectors or an entire disk.
If a RAID-6 system encounters a triple failure it will lose data, but additional layers of redundancy (such as replication) can further protect against catastrophic data loss.Many storage systems apply disk scrubbing to proactively detect latent sector errors; i.e., they read data from disk specifically to check for media errors, rather than because an application has requested the data [28,43].
File systems also incorporate techniques such as replication and parity to improve data availability [10,37,41]; replication is critical because the failure of a disk group (DG) can be rectified, at high overhead, with a separate replica accessible via a LAN or WAN.
Finally, even when primary storage systems are backed up onto separate dedicated backup systems, those backup systems can them-selves be replicated [27].
Unfortunately, improvements to the basic RAID architecture are still based on certain assumptions given the limited understanding of disk fault modes.
For example, empirical observations show both the sector error rate and the whole-disk failure rate grow over time [6,42], causing RAID availability to continuously degrade.
It is possible for multiple disks in the same RAID DG to fail simultaneously while other working disks have developed a number of latent sector errors [16].
Such multiple combined faults can overcome RAID protection and affect data availability.
Unfortunately, little data is publicly available that quantifies such correlated faults.To address this knowledge gap with respect to storage system reliability, we collected and analyzed disk error logs from EMC Data Domain backup systems.
The data cover periods up to 60 months and include about 1 million SATA disks from deployed systems at customer and internal sites.
To our knowledge, this is the first study of this magnitude to focus on analyzing disk faults (e.g., whole-disk failures and sector errors) that influence data reliability.
The logs report when a disk failure is detected, at which point a system can automatically initiate data recovery onto a spare drive using available data from within that system.
They also report larger-scale outages, when too many drives fail simultaneously for data to be accessible.
We define a recovery-related incident as a failure that requires the retrieval of data from another system, such as a backup or disk replica.Our analysis reveals that many disks fail at a similar age and the frequency of sector errors keeps increasing on working disks.
Ensuring data reliability in the worst case requires adding considerable extra redundancy, making the traditional passive approach of RAID protection unattractive from a cost perspective.
By studying numerous types of disk error, we also observe that the accumulation of sector errors contributes to whole-disk failures, causing disk reliability to deteriorate continuously.
Specifically, a large number of reallocated sectors (RS 1 ) indicates a high probability of imminent wholedisk failure or, at a minimum, a burst of sector errors.With these findings we designed RAIDSHIELD, a monitoring mechanism, which proactively identifies and preempts impending failures and vulnerable RAID groups.
RAIDSHIELD consists of two components, PLATE+ARMOR.
First, we have built and evaluated Predict Loss Accumulating in The Enterprise (PLATE), an active defense mechanism that monitors the health of each disk by tracking the number of reallocated sectors, proactively detecting unstable disks and replacing them in advance.
PLATE has been deployed in production systems for nearly a year.
Second, we have de-signed and simulated Assure Redundant Media Or Replace (ARMOR), which uses the joint failure probability of a DG to quantify the likelihood of multiple simultaneous disk failures.
ARMOR has the potential to identify sets of disks that collectively represent a risk of failure even when no individual disk is flagged in isolation.
Given this assessment, unstable disks can then be replaced in advance or the redundancy of a DG can be increased; either approach can improve overall RAID availability.Simulation results for PLATE, the single-disk proactive protection, show it can capture up to 65% of impending whole-disk failures with up to 2.5% false alarms.
After incorporating it into our product, we find its effect on RAID failures is disproportionate: it has been observed to eliminate 70% of the recovery-related incidents caused by RAID failures and 88% of the RAID failures due to triple disk failures.
Its benefits are somewhat limited by the types of errors that it cannot predict: about 20% of DG failures are caused by user errors, hardware faults, and other unknown reasons.
Simulation results indicate that ARMOR, the cross-disk proactive protection, can effectively identify 80% of vulnerable RAID-6 systems in a test of 5500 DGs.
We find that it can predict most of the triple failures not prevented by PLATE, leading to total coverage of 98% of triple failures.The rest of this paper is organized as follows.
We first provide background on partial disk failures and describe our storage system architecture, including an overview of RAIDSHIELD ( §2).
§3 presents our study on the relation between whole-disk failure and sector errors, and it characterizes reallocated sectors, which are found to be highly correlated with whole-disk failures.
§4 describes and evaluates PLATE, demonstrating the substantial reduction in RAID failures after deploying single-disk predictive replacement.
§5 describes the design and evaluation, via simulation, of ARMOR: using joint probabilities to assess the failure risk to a DG as a whole.
§6 discusses related work and §7 concludes.
In this section we define disk partial failures, providing the background to understand our subsequent failure analysis.
We then present an overview of our storage system architecture and describe the two aspects of RAID-SHIELD.
Disks do not fail in a simple fail-stop fashion.
Hence, there is no consensus definition of what constitutes a disk failure [5,8,45].
The production systems we studied define a whole-disk failure as:• The system loses its connection to the disk, • An operation exceeds the timeout threshold, or • A write operation fails.These criteria serve as the bottom line to replace disks that cannot function properly.
However, in addition to whole-disk failures, disk drives can experience various partial failures while they still otherwise function.
Sector-related issues are the major partial failures that endanger data safety [7,31,41].
Disk drives therefore provide a variety of proprietary and complicated mechanisms to rectify some failures and extend drive lifespans.
In this subsection, we briefly describe disk technology, focusing on detection and error handling mechanisms for sector errors; refer elsewhere for more detailed descriptions [6,38].
Failure detection and recovery mechanisms vary by manufacturer, production model, interface and capacity; the mechanisms introduced here cover common SATA disk internal mechanisms.Sector errors can be categorized into different specific types based on how they are detected, as shown in Fig- ure 1.
Operations to the disk can be initiated by file system read() and write() calls as well as by an internal scan process, which systematically checks sector reliability and accessibility in the background.
(These are shown in Figure 1 in blue, magenta, and green respectively.)
Media error: This error occurs when a particular disk sector cannot be read, whether during a normal read or a background disk scan.
Any data previously stored in the sector is lost.
The disk interface reports the status code upon detecting a sector error, specifying the reason why the read command failed.
Pending and Uncorrectable sector: Unstable sectors detected in the background process will be marked as pending sectors, and disk drives can try rectifying these errors through internal protection mechanisms, such as built-in Error Correcting Codes and Refreshment.
These techniques rewrite the sector with the data read from that track to recover the faded data.
Any sectors that are not successfully recovered will be marked as uncorrectable sectors.
Reallocated sector: After a number of unsuccessful retries, disk drives automatically re-map a failed write to a spare sector; its logical block address (LBA) remains unchanged.
Modern disk drives usually reserve a few thousand spare sectors, which are not initially mapped to particular LBAs.
Reallocation only occurs on detected write errors.We also observe that changes to disk technology tend to increase the frequency of sector errors, a major fraction of partial disk failures.
First, the number of sectors on a disk keeps increasing: while the capacity of individual disks may not be increasing at the rate once predicted by Kryder [33,47], they still increase.
Thus, if sector errors occur at the current rate, there would be more sector This figure depicts different responses to sector errors.
A read (shown in blue) will report a media error if target sector is unreadable.
A write (magenta) will attempt to remap a bad sector.
An internal scan (green) will try to identify and rectify unstable sectors.errors per disk.
Second, the disk capacity increase comes from packing more sectors per track, rather than adding more physical platters.
Sectors become increasingly vulnerable to media scratches and side-track erasures [15].
We now briefly describe the context of our storage system with a focus on sector error detection and handling.
At a high level, the storage system is composed of three layers, including a typical file system, the RAID layer, and the storage layer.
The file system processes client requests by sending read and write operations to the RAID layer.
The RAID layer transforms the file system requests into disk logical block requests and passes them to the storage layer, which accesses the physical disks.
Our RAID layer adopts the RAID-6 algorithm, which can tolerate two simultaneous failures.In addition to reporting latent sector errors captured in ordinary I/Os, our storage systems scrub all disks periodically as a proactive measure to detect latent sector errors and data corruption errors.
Specifically, this scan process checks the accessibility of "live" sectors (those storing data accessible through the file system), verifies the checksums, and notifies the RAID layer on failures.Sector error handling depends on the type of disk request.
A failed write is re-directed to a spare sector through the automatic disk remapping process, without reporting the error to the storage layer.
If a read fails, the RAID layer reconstructs data on the inaccessible sector and passes it to the storage layer for rewriting.
Writing to the failed sector will trigger the disk internal mapping process.
Note that given the process of RAID reconstruction and re-issued write, the failed sector detected through read (media error) will eventually lead to an RS.
Therefore, the RS count is actually the number of inaccessible sectors detected in either reads or writes.Finally, the systems evaluated in this paper are backup systems, which are known to have write-heavy workloads with fewer random I/Os than primary storage [46]; this workload may change the way in which disk faults are detected, as write errors may be relatively more common than read errors.
The general conclusions should hold for other types of use.
Despite the expectation that RAID-6 systems should be resilient to disk failures, given a large enough population of DGs there will be errors leading to potential data loss [3].
Indeed, our systems encounter RAID-level errors, but thankfully these are extremely rare.
2 These systems usually rely on extra layers of redundancy such as (possibly off-site) replication to guard against catastrophic failures, but there is a strong incentive to decrease the rate at which RAID failures occur.As we see in §3, disks that are installed together are somewhat likely to fail together, and disks that have partial (media) errors will rapidly accumulate errors until they are deemed to have failed completely.
Our goal for RAIDSHIELD is to identify and replace failing disks before they completely fail, within reason.
In the extreme case, one could use a single disk error as a warning signal and replace any disk as soon as it reported the slightest problem.
However, the cost in time and expense would be prohibitive, especially for large-scale installations like cloud providers.
With RAIDSHIELD, we take two tacks in this regard.
The first is to use statistical information to discriminate between those disks that are likely to fail soon and those that are not.
In the next section we consider a number of disk statistics that might be used for this purpose, finding that the reallocated sectors (RS) metric is an excellent predictor of impending failures.
We show in §4 that after deploying PLATE proactive disk replacement, looking at each disk in isolation, our RAID failures dropped dramatically.Can we do better with ARMOR, our second tack?
We hypothesize that by using the joint failure probability across a DG we can find some additional instances where no single disk is close enough to failure to justify replacing it using the criteria for PLATE, but enough disks are symptomatic that the DG as a whole is in jeopardy.
In §5 we present the probability analysis and some simulation results to justify this approach.
In addition, we speculate that in some environments, it will be undesirable to proactively replace every disk that is showing the possibility of failure; instead, it may be important to prioritize among DGs and first replace disks in the most vulnerable groups.
A single soon-to-fail disk in an otherwise healthy DG is a lower risk than a DG with many disks that have moderate probability of failure.
Figure 2 provides an example of the difference between PLATE and ARMOR.
There are four disk groups; DG2, with two failing disks, is at high risk, while DG3 has a moderate risk due to the large number of partlyfailing disks.
With PLATE, we would replace the red disks, protecting vulnerable DG2 and improving the protection of DG4, but DG4 is already protected by three healthy disks.
With ARMOR, we replace the two failing disks in DG2 but also recognize the vulnerability of DG3 given the large number of at-risk disks.
Understanding the nature of whole-disk failures and partial failures is essential for improving storage system reliability and availability.
This section presents the results of our analysis of about 1 million SATA disks.
First, we describe how we collected the disk data studied in this work.
Second, we present our observations of the new disk failure modes (e.g., simultaneous disk failures and sector errors) which endanger RAID availability.
Third, we analyze the correlation between these two failure modes.
Finally, we analyze characteristics and properties of reallocated sectors, the specific sector error type that is found to predict drive failures.
Population, earliest deployment date and log length of disk models used in this study.
Our storage system has a built-in mechanism to log system status, which can optionally send important events back to a central repository each day [46].
These messages record a variety of system events including disk errors and failures.
The data studied here are collected from these reports over a period of 5 years starting in June, 2008.
Similar to previous work [6], we anonymize disk information to make it possible to compare across disks from a single manufacturer but not across disk families.
We denote each disk drive model as 񮽙family-capacity񮽙.
Family is a single letter representing the disk family and capacity is a single number representing the disk's particular capacity.
Although capacities are anonymized as a single number, relative sizes within a family are ordered by the number representing the capacity.
That is, A-2 and C-2 are larger than A-1 and C-1 respectively.Our entire sample of 1 million disks includes 6 disk models, each of which has a population of at least 30,000.
They have been shipped in our storage systems since June, 2008, giving us a sufficient observation window to study various errors over the full lifespans of many drives.
Details of the drives studied are presented in Table 1.
Note that the recorded period of each disk model varies: the studied data range from 60-month logs of A-1 and A-2 down to 21 months for D-1.
We observe two new disk failure modes that are not predicted by the early RAID reliability model and degrade RAID reliability and availability.
Drives fail at similar ages: We analyze all failed drives and categorize them into different buckets based on their lifetime.
Figure 3 shows that a large fraction of failed drives are found at a similar age.
For example, 63% of A-1 failed drives, 66% of A-2 failed drives and 64% of B-1 failed drives are found in their fourth year.
This failure peak is also observed in the second year of the C-2 model, with 68% of failed drives found in this period.
Given a large population of drives, some drives will fail not only in the same month but occasionally the same week or day, resulting in vulnerable systems.
If a third error (a defective sector or a failed drive) should also occur before drives can be replaced and data reconstructed, the DG will be unavailable.The lifetime distributions of C-1 and D-1 failed drives are comparatively uniform.
However, these drives are 12 15 18 21 24 27 30 33 36 monthsA-1 A-2 B-1 C-1 C-2 D-1Figure 4: Percentage of disks developing sector errors.As disks age, the number with at least one error increases, and the rate of increase is higher the older the disk is.
Note that D-1 has only a 21-month record.
relatively young compared to the drives with long observation intervals, so it is difficult to draw specific conclusions from this uniformity.
We note a degree of "infant mortality" with these drives, with peaks of failures in the first three months.Sector errors exacerbate risk: Figure 4 presents the fraction of disks affected by sector errors as a function of the disk age.
Disks from all models show sector errors by the time they have been in use for 2-3 years, but some have significant errors much earlier.
In addition, the rate at which errors appear increases with the age of the disks: for example, about 5% of A-2 disks get sector errors in the first 30 months, but it only takes an additional 6 months for 10% more to develop sector errors.
Similar trends can be observed with A-1, B-1, and C-2.
To demonstrate the rate of error increase, we select 1000 disks randomly from each disk model, which developed at least one sector in a one-month observation window.
We collect the count of their sector errors one year later.
Figure 5 shows the average number of sector errors in the first and second years.
For all drives with at least one sector error, the number of sector errors for the second year increases considerably, ranging from 25% for the C-2 model to about 300% for A-2.
These new disk failure modes reveal that the traditional RAID mechanism has become inadequate.
The observation that many disks fail at a similar age means RAID systems face a higher risk of multiple whole-disk failures than anticipated.
The increasing frequency of sector errors in working disks means RAID systems face a correspondingly higher risk of reconstruction failures: a disk that has not completely failed may be unable to provide specific sectors needed for the reconstruction.
The disk technology trends introduced in §2.1 exacerbate these risks.
Since both whole-disk failures and sector errors affect data availability, exploring how they are correlated helps us to understand the challenges of RAID reliability.
Here we introduce the statistical methodology used to analyze the data, then we evaluate the correlation between wholedisk failures and sector errors.
Our objective is to compare the sector errors in working disks and failed ones, and to use a measure to reflect their discrimination.
We use quantile distributions to quantitatively evaluate the correlation degree between disk failures and sector errors.
Specifically, we collect the number of sector errors on working and failed disks, summarizing each data set value using deciles of the cumulative distribution (i.e., we divide the sorted data set into ten equal-sized subsets; we normally display only the first nine deciles to avoid the skew of outliers).
Such quantiles are more robust than other statistical techniques, such as mean and cumulative distribution function, to outliers and noise in depicting the value distribution and have been used to analyze performance crises in data centers [9].
As introduced in §2.1, sector errors can be categorized into specific types based on how they are detected.
For example, a sector error detected in a read is regarded as a media error while a sector error captured in a write is counted as an RS.
Those error counts can be collected through the disk SMART interface [1] and are included in our logs.
the working and failed disk sets.
The x-axis represents the Kth deciles, with the error counts on the y-axis.
Reallocated sector: Figure 6 presents the number of RS on failed and working drives.
We observe that the majority of failed drives developed a large number of RS while most that are working have only a few.
For example, 80% of A-2 failed drives have more than 23 RS but 90% of working drives have less than 29 of this error.
Every disk model demonstrates a similar pattern; the only difference is how large the discrimination is.
Failed disks have different RS counts, implying that many disks fail before they use up all spare sectors.
We also find that failed drives with bigger capacity tend to have more RS, though the numbers depend more on the maximum number of reallocations permitted than the total size.
For example, the median count of RS on A-2 failed drives is 327, compared to 171 for A-1; A-2 has both twice the capacity and twice the maximum number of reallocations, so this difference is expected.
On the other hand, C-2 has twice the capacity as C-1 but the same maximum number of RS (2048), and its 9 th decile of RS is only 40% higher than C-1.
(Note that the median RS count for C-1 is zero, implying that many C-1 disks fail for reasons other than reallocated sectors; this is consistent with the large infant mortality shown in Figure 4 and bears further investigation.
D-1 has similar characteristics.)
Media error: Due to the limitation of the logging messages we have on hand, we can analyze this error type only on the A-2 disk model.
The result is presented in Figure 7.
Though failed disks have more media errors than working ones, the discrimination is not that signif- icant compared to RS.
For example, 50% of failed disks have fewer than 15 media errors, and 50% of working ones developed more than 3 errors.
There is a large overlap between them, perhaps because only sector errors detected in read operations are reported as media errors.
Sector errors detected in writes will trigger the reallocation process directly without notifying the upper layer.
Since the RAID layer will re-write the reconstructed data upon a detected media error, which causes the reallocation process, every media error will lead to an RS eventually: the media error count is thus a subset of RS.
More details can be found in §2.
in Figure 8; the figure for uncorrectable sectors is similar and is omitted for space considerations.
Through the comparison we find that for some disk models (such as A-1, A-2, and B-1), a certain fraction of failed disks (usually 30%) develop a similar amount of pending and uncorrectable sectors.
Failed drives of the other disk models, including C-1, C-2, D-1 develop pending sector errors but none of them have uncorrectable sector errors, implying most pending errors have been addressed with drives' internal protection mechanisms.
No working disks show these two types of sector errors, revealing that once disks develop these two types of error, they are very probable to fail.
These experiments characterize the correlation between whole-disk failures and various sector-related errors.
We observe that most failed disks tend to have a larger number of RS than do working disks.
Thus RS are strongly correlated with whole-disk failures.
We infer that reallocation is the last resort to tolerate a defective sector after all other recovery mechanisms have failed; therefore, it avoids the influence of temporary errors which also appear on working disks.
Further, given the process of RAID reconstruction and re-issued writes, inaccessible sectors detected through read and write will both eventually lead to RS.
Therefore, the number of RS represents all inaccessible sectors and is a good indication of the extent to which a disk is wearing out.
The previous subsection revealed that RS appear more frequently in a large population of failed disks than working disks.
Thus the number of RS is highly correlated with whole-disk failures across all disk models studied.
This subsection studies characteristics of RS.The best data set to study the properties of RS over the disk lifetime is disk model A-2.
The reason is that this disk model was deployed for a long enough time period (more than 5 years) with a robust population of failed drives and detailed logging.
Therefore, we use disk model A-2 as an illustration to explain our findings in the following sections.All disks fail eventually, so we define an impending disk failure in our study as the disk failing within a 60-day observation window.
A two-month window gives enough time for the disk to expose latent problems, since disk failure is not a simple fail-stop process.
If a disk does not fail during this observation period, it is regarded as a qualified working disk.We first evaluate how RS counts relate to disk failure rates.
We analyze the percentage of disk failures after they exceed different thresholds of RS.
The results are presented in Figure 9.
The X-axis represents the RS count and the Y-axis depicts the failure percentage.As found by Pinheiro, et al., the failure rate jumps dramatically once the disk starts to develop RS [38].
This rate grows steadily as the count of RS increases; for example, the failure rate of disks without any RS is merely 1.7%, while more than 50% of disks fail after this count exceeds 40.
If the count grows to the range of 500 and 600, the failure rate increases to nearly 95%.
We conclude that the more RS the disk has, the higher probability the disk will fail.Second, we study the failed drives by analyzing the period between the time the disk RS count exceeds a certain value and the time a disk failure happens.
We collect all time-to-fail (TTF) values and summarize the data set with the box-and-whisker plot in Figure 10, showing the 10-25-50-75-90 percentiles.
All values for the time margin shrink as the number of RS grows.
For example, one of every two failed disks would have more than seven days TTF when it exceeds 40 RS.
But when the count of RS grows beyond 200, 50% of those disks that will soon fail are found to fail within just two days.
However, the prediction is not guaranteed: the 90th percentile of failures is measured in weeks rather than days.
We conclude that a larger number of RS indicates a disk will fail more quickly, in most cases just a few days.Third, we analyze working drives, which have developed a certain number of RS, and categorize them into different buckets based on their RS counts.
Figure 11 groups disks into buckets, randomly selecting 1000 disks with 0-100 RS, 1000 disks with 101-200 reallocations, and so on.
We track how many sector errors they have accumulated 30 days later: for each bucket, the first (blue) bar shows the mean RS of the 1000 disks within that bucket as of the first month, and the second (magenta) bar shows the mean reallocations as of the second month.The data shows that drives with less than 100 RS developed another 6 RS on average, while drives with RS in the range of 100 and 200 developed 100 more on average, well more than the aforementioned set.
A similar trend has been observed in other drive sets.
In general, no matter how many existing sectors the disks have, the number of RS grows consistently.Our analysis of other disk models is trending in the same direction of all the observations of model A-2.
A slight difference is that the latest disk models can survive for a longer time with a certain number of RS.
Therefore, the latest disk drives have a greater time margin as the number of RS grows.From these experiments, we conclude that the accumulation of sector errors contributes to the whole-disk failure, causing disk reliability to deteriorate continuously.
The more RS errors the drive has, the higher the probability to fail shortly or suffer a larger burst of sector errors.
Therefore, the number of RS is a good criteria to reflect the disk survivability and sector reliability.
Much of the previous research on RAID has focused on improving redundancy schemes to tolerate more simultaneous failures [13,30,32,39,40].
However, our data analysis reveals that the likelihood of simultaneous whole-disk failures increases considerably with older disks.
Further, the accumulation of sector errors contributes to whole-disk failures, causing the disk reliability to deteriorate continuously.
Hence, ensuring data reliability in the worst case requires adding considerable extra redundancy, making the traditional passive approach of RAID protection unattractive from a cost perspective.Meanwhile, the RS count has been observed to be a good criteria to quantify and predict the degree of deterioration of disk reliability.
Therefore, we can upgrade the passive RAID protection into a proactive defense: PLATE monitors disk health ( §4.1), identifies unreliable disks ( §4.2), and replaces unstable disks in advance to prevent failures.
Since unreliable disks are detected and removed promptly, the likelihood of simultaneous failures also decreases ( §4.3).
Our previous analysis reveals that the number of RS is a good criteria to identify unstable disks.
This expands the role of disk scrubbing: originally, scrubbing aimed to verify data accessibility and proactively detect lost data on failed sectors which could be recovered through RAID redundancy; thus, it only scans "live" sectors (those storing data accessible through the file system).
The new findings show that recognizing all latent sector errors in a timely fashion is invaluable for monitoring the status of a DG, so our scrubbing is being updated to periodically check even unused disk sectors.
We then monitor the status of each disk via daily system logs, and when a disk's RS count exceeds a threshold, its replacement is automatically triggered.
We see that the accumulation of sector errors contributes to whole-disk failures, causing disk reliability to deteriorate continuously.
Hence, using the RS count can predict impending disk failures in advance.
Such proactive protection provides administrators the chance to replace disks before whole-disk failures happen, improving RAID availability.
We evaluate the methodology of the proactive protection through simulations based on historical disk information.
We provide the result of deployment in production systems in §4.3.
If the RS count exceeds the given failure threshold T, the disk is considered to be unreliable.
We evaluate the result using two curves that represent the trade-off between the fraction of failures successfully predicted (i.e., the recall of the prediction), and the false positive amount, which includes qualified working disks identified incorrectly.
The impending whole-disk failure is defined as the disk failing within a 60-day observation window.
If a disk that has more RS than the threshold is still functioning properly after the observation window, it is regarded as a false positive.
Similarly, if a failed disk reports at least the given minimum number of RS within 60 days prior to the failure, the failure is successfully predicted.
By comparing these two curves over the whole range of the identification threshold, we take into account all possible cost-based scenarios in terms of the trade-off between missing impending disk failures versus failing working ones incorrectly.
We measure the proactive protection on a population of 100,000 A-2 disks as reported by autosupport logs, and present the result in Figure 12.
It shows that both the successful prediction rate and the false positive rate decrease smoothly as the RS threshold grows from 20 to 600.
When the threshold is less than 200, it captures nearly 52-70% impending whole-disk failures, with 0.8-4.5% false positive rates.
The majority of the unpredicted failures are caused by hardware faults, user error and other unknown reasons, which are unpredictable from a software perspective; these prediction rates are consistent with the curve for A-2 in Figure6, which depicted the fraction of failed disks that had encountered a given number of RS.
Other disk models demonstrate similar trends in our experiments.System administrators can decide the appropriate threshold to fail disks based on their expectation of captured rate, tolerance of replacing disks prematurely, and the time required to replace disks.
PLATE, the single-disk proactive protection using remapped sector count, has been incorporated into some The distribution of causes of RAID failures, before and after proactive protection was deployed, normalized to the case without protection.
Single disk proactive protection reduces about 70% of RAID failures and avoids 88% of the triple-disk failures previously encountered.
production systems.
In our initial deployment, affecting disks A-1, A-2, and B-1, we set the threshold for predicting failure at 200 RS.
This threshold was based on the "training set" of our analysis prior to deployment and was selected for two reasons: first, replacing disks in production systems may take up to 3 days in the worst case, and second, the median time to failure drops to less than 3 days when the count of RS grows beyond 200.
In other words, setting the threshold less than 200 provides enough time to fix 50% of those impending failures proactively.
In addition, the cost of replacing a working disk by mistake requires us to strive for a false positive rate less than 1% (i.e., < 1% unnecessarily added costs from incorrectly replacing working drives), resulting in a replacement threshold of at least 200.
Figure 13 compares the recovery incidents caused by RAID failures before and after proactive protection was added to our systems.
The graphs are normalized to the average number of RAID failures per month before the deployment, which are dominated by triple failures (80%), the results of some combination of whole-disk failures and sector errors.
Another 5% are due to other hardware faults (for example, errors in host bus adapters, cables and shelves), while the remaining 15% are caused by factors such as user error and other unknown reasons.While it is a challenge to reduce failures due to hardware faults and other errors, single-disk proactive protection detects unstable drives before their reliability is further deteriorated and triggers the DG reconstruction promptly, reducing the likelihood of multiple simultaneous failures.
We find this eliminates about 88% of recovery incidents caused by triple failures, equivalent to about 70% of all disk-related incidents.
This disproportionate reduction in DG errors (relative to the fraction of individual disk failures we can predict) is because we only need to avoid one out of the three disk failures that would disable a RAID-6 DG.
3 The remaining 12% of triple failures are due to sudden failures or multiple "somewhat unreliable" disks, all of which have a number of RS but none of which exceeds the failure threshold; we address these in §5.
All the proactively replaced disks subsequently undergo rigorous testing by our company upon their return; the specialists analyzing these disks have not seen a noticeable number of false positives upon replacement.
Single-disk proactive protection (PLATE) identifies and fails unreliable disks in advance, which can prevent potential data loss by reducing the likelihood of multiple simultaneous failures.
But PLATE will wait patiently for one disk to exceed a threshold before sounding an alarm.
Disks can fail quickly after exceeding that threshold and will sometimes fail before it is even reached.
If several disks are close to being declared near imminent failure, they may collectively put the DG at high enough risk to take action.
At the same time, simply replacing all unreliable disks is not the most efficient approach, because not every impending disk failure will lead to a RAID failure.
If disk failures are within the tolerance of RAID redundancy, repair efforts may be better directed elsewhere: i.e., administrators might triage to prioritize another DG at higher risk.
(Refer to the example in §2.3.)
The next subsection ( §5.1) introduces how we quantify the degree of RAID reliability and identify a vulnerable RAID, which is likely to lose redundancy in the face of multiple unreliable disks.
§5.2 presents some simulation results using the ARMOR technique, and §5.3 discusses ongoing work.
The accumulation of sector errors contributes to wholedisk failures, causing the RAID reliability to deteriorate continuously.
Therefore, we can quantify and predict the single disk reliability with its number of existing RS, which can be further used to evaluate the degree of RAID reliability deterioration through joint probability.
There are two steps in this process.Calculate the probability of single whole-disk failure: Our previous analysis reveals that the RS count reflects the likelihood of whole-disk failure.
This probability is calculated as follows.
We define:• P(fail) as the probability of disk failure • N RS as the observed number of reallocated sectors• P(N RS ) as the probability that a disk has a reallocated sector count larger than N RS • P(fail|N RS ) as the probability of a whole-disk failure given at least N RS reallocated sectors • P(N RS |fail) as the probability that a failed disk has a reallocated sector count larger than N RS Figure 14: Formula of calculating the probability of whole-disk failure given a certain number of reallocated sectors.Ultimately we want to compute P(fail|N RS ), which can be calculated according to Bayes's Theorem (the first line of Figure 14).
Calculate the probability of a vulnerable RAID: Our storage system uses RAID-6, which can tolerate two simultaneous failures.
We define RAID vulnerability as the probability of a RAID system having more than one disk failure.
Specifically, we use the formula introduced in Figure 14 to calculate the failure probability of each disk given its reallocated sector count.
The combination of these single disk probabilities allows us to compute RAID vulnerability using the formula shown in Fig- ure 15.
A similar methodology can be applied to other redundant disk systems (e.g., RAID-5).
We evaluate our methodology of identifying vulnerable RAID DGs.
Specifically, we analyze historical disk failures recorded in our logs and categorize their corresponding RAID DGs into two subsets: "good" RAID DGs with no disk failures (subset G) and "bad" RAID DGs with more than one disk failure (subset B).
We use their reallocated sector counts (one or more days prior to a failure, in the case of subset B) as an input to compute the probability of RAID vulnerability through our measurement.
If our approach can effectively identify vulnerable RAID DGs, the calculated probability of most DGs in subset B should be considerably larger than that of the majority of DGs in subset G.
We use one-year disk historical data to build the statistical model and collect 5000 DGs for G and 500 DGs for B respectively from other years.
Deciles are used to summarize the distribution of vulnerable probability of theseP(vulnerable RAID|RS 1 , RS 2 ,... ,RS N ) = P(≥ 2 disks f ail|RS 1 , RS 2 ,... ,RS N ) = 1 − P(0 disk f ail|RS 1 , RS 2 ,... ,RS N ) − P(1 disk f ails|RS 1 , RS 2 ,... ,RS N ) P(0 disk f ail|RS 1 , RS 2 ,... ,RS N ) = N ∏ i=1 (1 − P(i th disk f ails|RS i )) P(1 disk f ails|RS 1 , RS 2 ,... ,RS N ) = N ∑ j=1 P(( j th disk f ails|RS j ) N ∏ i=1,i� = j (1 − P(i th disk f ails|RS i ))N is the number of disks in a RAID DG, RS i represents the reallocated sector count of disk i P(i th disk f ails|RS i ) represents the failure probability of i th disk given RS i reallocated sector count two subsets.
The result is presented in Figure 16, which shows that probabilities of 90% of DGs in subset G are less than 0.32, while probabilities of most DGs in subset B are between 0.25 and 0.93.
This probability discrimination between subset G and B show the methodology of identifying vulnerable RAID is effective to recognize endangered DGs, which are likely to have more than one disk failures.
For example, when its probability grows to more than 0.32, we can regard this DG as a vulnerable one with high confidence.
This threshold can capture more than 80% of vulnerable RAID DGs.
Administrators can rely on this monitoring mechanism to keep track of disk statuses, recognize endangered RAID DGs, and trigger the appropriate proactive protection mechanism.
We examined the 12% of triple-disk failures that were not prevented by PLATE, looking at logs reported 3-7 days prior to the failure.
(The duration varies depending on when the reports were made.)
In 80% of the cases, ARMOR computed a failure probability of 80-95% despite no single disk being above the 200 RS threshold; this indicates that between PLATE and ARMOR, we could potentially prevent 98% of triple failures.
Although the results of this analysis are based on a small sample, we are encouraged by the possibility of eliminating nearly failures resulting from triple-disk errors.
However, greater attention will be needed for the 20% of RAID recovery incidents due to other causes.
Incorporating the RAID monitoring mechanism into production systems has some operational considerations.
We are upgrading our monitoring and logging mechanisms to recognize and record the reason for disk failure, as well as quantifying the variance of parameters of the statistical model, so we can activate the DG monitoring mechanism in our production systems.We are considering methods to put a potentially failing disk "on probation" to test whether it is truly failing.
This would be especially useful in cases where individual disks are not above a threshold for replacement but the availability of the DG as a whole is in doubt.
Spare disks could be brought on-line while suspect disks get scrubbed thoroughly.It would be interesting to extend ARMOR to other configurations, such as erasure coding, or to consider replicated data.
A disk group or erasure coding system might be vulnerable when a given number of disks fail, but the data stored on it would be recoverable from another replica at a high cost.
What if the replica is also vulnerable?
The joint probability of multiple replicas failing simultaneously should by necessity be comparatively low, but it should be quantified.Finally, it will be important to gain more operational experience with both PLATE and ARMOR on a greater variety of disk models over a greater period of time.
Tuning the thresholds for the characteristics of each system will be important; even within a model, we would like to test different thresholds on a limited set of disks to determine the accuracy of our chosen threshold.
Sensitivity to application workloads may also prove interesting: a backup storage system sees different read-write workloads than a primary system [46].
Early work by Gibson, et al. [18,36] and Chen, et al. [11] evaluates RAID reliability assuming an ideal world with independent failures, exponential lifetimes, and instantaneous failures.
Unfortunately, the fault model presented by modern disk drives is more complex.
Schroeder and Gibson [42] analyze 100,000 disks to reject the hypothesis that time between disk failure/replacement follows an exponential distribution.
Bairavasundaram et al. [6] reveal the potential risk of sector errors during RAID reconstruction, which is not predicted in the early RAID reliability model.
Researchers have since noted that the original RAID reliability model has outlived its useful life and built new models to depict RAID reliability [16,21].
Given the presence of these new disk failure modes, many mechanisms have been built to improve system reliability.
Schwarz, et al. [43] propose disk scrubbing to proactively detect latent sector errors.
Many new storage arrays adopt extra levels of redundancy to tolerate more failures [12,19].
File systems also detect and handle disk faults through checksums and replication.
For example, in addition to using RAID techniques, ZFS employs checksums to detect block corruption and keep replicas of certain "important" on-disk blocks to tolerate disk faults [10].
The IRON file system applies similar techniques to improve robustness of commodity file systems [41].
Another related approach is to tolerate disk faults at the application-level [44,17].
Unfortunately, our previous analysis reveals that whole-disk failure and sector errors are strongly correlated.
Further, the likelihood of such simultaneous failures is not consistent over time.
Ensuring data reliability in the worst case requires adding considerable extra redundancy, which adds unnecessary costs.Alternatively, a number of previous approaches seek indicators of impending failures.
In particular, Pinheiro et al [38] study the failure characteristics of consumergrade disk drives used in Google's services.
They find that most SMART error metrics such as reallocated sectors strongly suggest an impending failure, but they also determine that half of failed disks show no such errors.
We find that some disks (such as C-1 and D-1) frequently do not report errors before failing, but several models correlate well.
These differences are presumably due to differences in disk models as well as workloads: since our systems rewrite data upon error, we may trigger remappings in ways their systems would not.Goldszmidt [20] seeks to predict whole-disk failures with a performance signal, particularly the average maximum latency.
Murray et al. [26,34,35] and Hamerly et al. [24] also attempt to improve whole-disk failure prediction by applying various advanced data mining algorithms on SMART [1] analytic data.
In comparison, our work is on a much larger population of production disks with a focus on the correlation between whole-disk failures and sector errors, both of which affect the data safety.
We quantitatively evaluate their correlation, and reveal that the RS count is a good criteria to reflect disk survivability and the sector reliability, which is then used to proactively recognize unstable disks and vulnerable RAID DGs.
In this paper, we present and analyze disk failure data from a large number of backup systems, including some of the world's largest enterprises.
Our analysis reveals that the accumulation of reallocated sectors, a specific type of sector error, causes the disk reliability to deteriorate continuously.
Therefore, the RS count can be used as an indicator to quantify and predict the degree of deterioration in disk reliability.With these findings we designed RAIDSHIELD, consisting of PLATE and ARMOR.
PLATE monitors disk health by tracking the number of RS and proactively detecting unstable disks; the deployment of single-disk proactive protection has eliminated 70% of RAID failures in production systems.
With ARMOR, we aim to quantify the deterioration of RAID reliability and detect vulnerable RAID DGs in advance, even when individual disks have not degraded sufficiently to trigger alarms.
Initial results with ARMOR suggest that it can eliminate most of the remaining triple-disk errors not identified by PLATE.While we expect that the techniques presented here apply to all storage systems, the specific analyses were performed on backup systems with particular I/O patterns [46].
Extending the analysis and evaluating these techniques in other environments are promising future work.
We thank Andrea Arpaci-Dusseau, Remzi ArpaciDusseau, Stephen Manley, Philip Shilane, Grant Wallace, and members of the EMC Data Protection CTO office for comments and feedback on earlier drafts and discussions.
We especially thank our shepherd, Haryadi Gunawi, and the anonymous reviewers; their feedback and guidance have been especially helpful.In addition, we thank the Data Domain RAID, I/O, and customer support teams for feedback on the disk analyses and deployment.
We thank Yanpei Chen, Rean Griffith, and Cheng Li for insightful comments on data science.
