Since mobile devices are battery powered, several mobile TV standards dictate using energy saving schemes to increase the viewing time on mobile devices.
The most common scheme for saving energy is to make the base station broadcast the video data of a TV channel in bursts with a bit rate much higher than the encoding rate of the video stream, which enables mobile devices to turn off their radio frequency circuits when not receiving bursts.
While broadcasting bursts saves energy, it increases the channel switching delay.
The switching delay is an important performance metric, because long and variable switching delays are annoying to users and may turn them away from the mobile TV service.
In this paper, we first analyze the burst broadcasting scheme currently used in many deployed mobile TV networks, and we show that it is not efficient in terms of controlling the channel switching delay.
We then propose new schemes to guarantee that a given maximum switching delay is not exceeded and that the energy consumption of mobile devices is minimized.
We prove the correctness of the proposed schemes and derive closed-form equations for the achieved energy saving.
We also implement the proposed schemes in a mobile TV testbed to show their practicability and to validate our theoretical analysis.
As wireless mobile devices, such as personal digital assistants, smart cellular phones, and mobile media players are getting very popular and computationally powerful, watching TV on the move has become a reality.
Mobile TV trials or commercial services have been deployed in more than 40 countries, 1 and users are already using it to watch TV shows and sports events while traveling.
The mobile TV market is excepted to grow to up to 20 billion Euros with 500 million customers by 2011.
2 Since mobile devices are battery powered, energy consumption in mobile TV networks is an important problem.
In fact, common standards for mobile TV networks, such as DVB-H (Digital Video Broadcast-Handheld) [3][4][5] and MediaFLO (Forward Link Only), 6 dictate using energy saving schemes to increase the viewing time on mobile devices.
The typical scheme for saving energy is to make the base station broadcast the video data of a TV channel in bursts with a bit rate much higher than the encoding rate of the video stream.
Mobile devices, therefore, can receive a burst of traffic and turn off their radio frequency (RF) circuits until the next burst.
This is called time slicing.Mobile devices have stringent battery capacity and heat implementation guidelines, thus they cannot accommodate mobile TV chips that consume too much energy.
For instance, the DVB-H standard 7 states that TV signal receiver with power consumption higher than 100 mW cannot be integrated with handheld devices.
However, even the state-of-the-art prototype mobile TV chips consume about 200 mW, 8 while commercial chips consume more than 500 mW in continuous mode.
Therefore, the energy saving enabled by time slicing is critical to mobile devices.
Previous works and measurements show that time slicing can result in a significant energy saving for mobile devices.
7,9 For example, the DVB-H standard documents 7 mention that the power consumption of the receiving units of mobile devices could be reduced from about 500 mW to 50 mW because of time slicing.Although time slicing enables mobile devices to save energy, it increases the channel switching delay, which is the time a user waits before s/he starts viewing a selected channel when a change of channel is requested by that user.
The switching delay is an important performance metric, because many users quickly flip through several TV channels before they decide on watching a specific one.
Because long and variable switching delays are annoying to users and may turn them away from the mobile TV service, mobile TV operators have to maintain low and constant switching delays even at a small expense on channel utilization.
In this paper, we consider the problem of controlling the switching delay in mobile TV networks that employ time slicing to save energy.
Our goal is to provide a guarantee on the maximum switching delay from a TV channel to any other channel without scarifying the energy saving for mobile devices.
In particular, the contributions of this paper can be summarized as follows.
First, we analyze the time slicing scheme currently used in many deployed mobile TV networks, and we show that it is not efficient in terms of minimizing the energy consumption for mobile devices, especially when short channel switching delays are required.
Second, we propose new optimal time slicing schemes that ensure that a given maximum switching delay is not exceeded.
We prove the correctness of the proposed schemes and derive closed-form equations for the achieved energy saving.
Third, we implement our time slicing schemes in a mobile TV testbed.
Our experimental results validate our theoretical analysis and show that the proposed time slicing schemes achieve significant energy saving for the mobile devices.The rest of this paper is organized as follows.
In Section 2, we provide a brief background on mobile TV networks and summarize the related works.
In Section 3, we first describe and formally state the bounding of the switching delay problem addressed in this paper.
Then, we analyze the performance of the solution currently used in many deployed mobile TV networks to solve this problem.
We also present an overview of our proposed solution.
In Section 4, we present the details and the formal analysis of our solution.
In Section 5, we present the evaluation of our solution in a mobile TV testbed, and we conclude the paper in Section 6.
There are several standards for Mobile TV networks, including T-DMB (Terrestrial-Digital Multimedia Broadcasting), 10 ISDB-T (Integrated Services Digital Broad-casting-Terrestrial), 11 MediaFLO, 6 and DVB-H.
4, 12 Among these dedicated broadcast networks, only DVB-H and MediaFLO try to minimize the energy consumption of mobile devices by periodically turning their RF circuits off.
6,13 The details of MediaFLO are not public.
We present an overview of the DVB-H standard defining some concepts that will be used later in the paper.
The DVB-H standard defines protocols below the network layer and uses IP as the interface with higher-layer protocols such as UDP and RTP.
Standards such as IP Datacast 3, 4 complement DVB-H by defining a set of higher-level protocols for a complete end-to-end solution.
DVB-H encapsulates IP packets using Multi-Protocol Encapsulation (MPE) sections to form MPEG-2 transport streams.
Thus, data from a specific TV channel form a sequence of MPEs.
MPEs are optionally FEC-protected (forward error correction) before transmitted over the wireless medium for more reliable transmission.
FEC is important to mobile TV networks because mobile devices often suffer severe wireless signal degradations, while no feedback channel is available for data retransmission.
To save the energy of mobile devices, MPEs belonging to a given TV channel are transmitted in bursts.
Thus, mobile devices can receive a burst of traffic and then turn off their RF circuits (or put them in sleep mode) till the next burst.
The multi-protocol encapsulation, FEC, and time slicing are done in a network device called IP encapsulator, which is a component of the base station broadcasting TV channels to mobile devices.
In this paper, we propose efficient time slicing schemes to control channel switching delays.
Hence, our schemes would be implemented in the IP encapsulator of the base station.We notice that the relative start time of each burst is recorded in the header of its predecessor burst such that the receivers know when they need to wake up to receive data.
Since the start time is sent in the relative form, it is not affected by any constant delays between the base station and its receivers, which keeps synchronization among them fairly simple.
4 Channel switching delay is a critical performance metric in mobile TV networks.
Channel switching delay is composed of several accumulated parts, in which frame refresh delay and time slicing delay are the two dominating contributors.
14,15 The frame refresh delay refers to the time period between receiving the first bit of a new video stream and receiving the next random access point, typically an intra-coded frame, of that video.
The time slicing delay refers to the time period between locking on to a mobile TV signal and reaching the first burst of the selected TV channel.
Existing switching delay reduction solutions in the literature can be roughly categorized into three classes: solutions that use an auxiliary cellular network, 16 solutions that reduce video frame refresh delays, 14, 15, 17-21 and solutions that reduce time slicing delays.
7,18 We briefly survey each of them in the following.Ollikainen and Peng 16 propose a vertical handover approach for DVB-H networks, where each mobile device maintains a unicast connection over a Universal Mobile Telecommunications Systems (UMTS) network.
Video streams are not only carried by the DVB-H network but also relayed by the cellular network, which enables a mobile TV device to quickly handoff to the unicast connection when the DVB-H signal is degraded.
This auxiliary network can also be used for reducing channel switching delays.
Unfortunately, maintaining a unicast connection for each mobile device for video traffic imposes tremendous load on cellular networks and streaming servers, and therefore is not scalable.
In contrast, our solution requires no additional connections over the cellular network and is simpler and more scalable.
To reduce frame refresh delays, Vadakital et al. 18 propose to periodically add redundant intra-coded frames into video streams coded by H.264/AVC.
In H.264/AVC, redundant frames are only decoded when primary, normal, frames are not decodable.
By frequently adding low quality intra-coded redundant frames into a video stream, more random access points are added, which in turn reduces refresh delays.
Instead of sending low-quality intra-coded frames over dedicated channels, intracoded frames can also be dynamically inserted at the beginning of every time slicing burst at IP encapsulators to shorten frame refresh delays.
14,15,19,20 Rezaei et al. 21 propose an empirical method to determine the operational video quality under different combination of frame refresh delay and variable bit rate buffering delay.
The works on minimizing refresh delays are orthogonal to our work, as they can be combined with our work on reducing the time slicing delay.The closest works to ours are those that try to reduce the time slicing delay.
The DVB-H standard suggests to employ parallel elementary streams for channel switching delay reduction, 7 in which network operators bundle several TV channels into a channel group.
The channel group is then encapsulated into a series of time slicing bursts.
Mobile devices which want to receive any of these TV channels will have to process all bursts of the group, despite not all the data is useful to them; In addition, parallel elementary streams cannot reduce channel switching delay if the selected TV channel is not in the same channel group as the current TV channel.
Furthermore, determining the channel grouping strategy itself is an open question.
In contrast, our proposed schemes provide guaranteed switching delays between any two arbitrary channels, and do not need any heuristics to group TV channels.
Since the channel grouping strategy is not specified in, 7 we cannot compare our work against the parallel elementary streams method.
Even if the grouping strategy is known, it would be an unfair comparison (in favor of our schemes), because our schemes are designed to minimize energy consumption, while the parallel elementary streams method results in suboptimal energy consumption since mobile devices spend more time and energy on receiving irrelevant data.
Instead, we compare against the time slicing scheme where each mobile device only receives the video data of its TV channel, which is referred to as the current time slicing scheme in this paper, because it is currently used in deployed networks.
In this section, we formally state the problem addressed in this paper, and we analyze the performance of the solution currently used in many deployed mobile TV networks to solve this problem.
We also present an overview of our proposed solutions and discuss the advantages and disadvantages of each of them.
We consider a mobile TV network in which a base station concurrently broadcasts several digital TV channels to a large number of mobile TV devices over a shared air medium with bandwidth R kbps.
Each TV channel is allocated a bit rate r kbps, which is much smaller than R.
The base station broadcasts each TV channel in a series of bursts at bit rate R kbps, which is referred to as a burst train.
The burst size is denoted by b kb.
A mobile TV device receives a burst of data and turns off its RF circuit till the next burst in the same burst train.
This is called time slicing and as mentioned in Section 1 while it saves the energy of the mobile devices, it may increase the channel switching delay.
Fig. 2(a) illustrates a simple example in which a base station broadcasts bursts of three TV channels (shown with different colors in the figure).
Mobile devices tuned-in for TV channel 1 (dark bursts) turn their RF circuits off during the transmission of the other bursts.
If a user watching TV channel 1 decides to switch to channel 3, the user will have to wait till the next burst of channel 3 is broadcast by the base station.
This is referred to as the time slicing delay.
In addition to the time slicing delay, the user will have to wait for other delays before viewing channel 3, such as the delay till the first intra-coded video frame arrives (known as frame refresh delay) and the time to decode and render the stream.
These delays combined are referred to as the channel switching delay, which is denoted by d.
Since the time slicing delay is the major component of the channel switching delay, we focus in this paper on designing efficient time slicing schemes to control the switching delay.
We assume that other delays are fixed, and we do not consider them anymore in this paper.We notice that the RF circuits of mobile TV devices must be turned on slightly before the burst time, because it takes some time to wake up and synchronize the circuitry before it can start receiving data.
This non-negligible time is called the overhead duration and is denoted by T o , which is in the range of 50-250 msec with current technology.
4, 7 The energy saved by a mobile device because of the time slicing scheme is denoted by γ, and it is calculated as the ratio of time the RF circuit is in off mode to the total time.
7,9 Notice that because the TV channels have the same bit rate r, their bursts have the same size and are periodically broadcast by the base station.
Thus, the energy saving γ achieved by any mobile device is the same regardless of the specific TV channel being received by that device.
With the above definitions and notations, we are ready to state the bounding of the switching delay problem.
The above problem is important for the success of mobile TV services, and it has direct impacts on the profitability of service providers.
This is because high switching delays may drive subscribers away from mobile TV services.
In addition, this problem maximizes the energy saving for mobile devices and thus stretches the possible viewing time for mobile users and allows them to consume more TV content.
Therefore, optimally solving the problem is beneficial for both providers and clients of mobile TV services.
Current mobile TV networks implement simple time slicing schemes.
For example, the scheme proposed in the DVB-H standard documents [7, pp. 66] provides schedules for one TV channel: it allocates a new burst only after the data of its preceding burst is consumed by the player at the receiver.
This means that bursts of all TV channels will be of the same size b, because the TV channels are encoded at the same bit rate r.
While the current time slicing scheme simplifies the design of the base station, it may lead to long switching delays and/or waste the energy of mobile devices.
We analyze the channel switching delay d and energy saving γ of this scheme in the following.
Since mobile TV networks allocate periodical bursts to keep receivers in a steady state without buffer over/underflow, the inter-burst period between two adjacent bursts of the same TV channel should be computed so that the number of received bits is equal to the number of consumed bits during that period.
Given that each burst has a size b and the TV channel bit rate is r, the inter-burst period should be b/r to avoid buffer over/underflow.
Thus, the worst case channel switching delay is d = b/r.
For the energy saving, consider a burst period b/r between two adjacent bursts.
Since we need to transmit b kb over a shared medium with R kbps bandwidth, the burst duration is b/R seconds.
We also need to take into consideration the overhead duration T o , during which the RF circuits of the receivers have to be open to search for and lock on the radio signal.
Thus, we have:γ = 1 − b/R + T o b/r = 1 − r R − T o r b ,(1)where b/R + T o is the on-time of the RF circuit and b/r is the total time.
Eq.
(1) reveals an important trade-off between the channel switching delay and the energy saving as both d and γ increase when b increases.
To illustrate this trade-off, we vary the burst size b between 10 kb and 2000 kb and compute the energy saving γ and the channel switching delay d.
We set R = 10 Mbps and T o = 100 msec.
Fig. 1 450 kbps.
Notice that the figure has two y-axes.
This figure shows that the channel switching delay can be as high as 13 seconds for small bit rates.The current time slicing scheme can ensure a given maximum switching delay d m by scaling down the burst size, i.e., by setting b = rd m .
To examine the implication of scaling b down, we plot the trade-off again with different overhead T o values in Fig. 1(b), where r is fixed at 250 kbps.
This figure shows that there is a dramatic decrease in energy saving when small switching delay is desired for all practical T o values.
For example, for T o = 100 msec, reducing the channel switching delay from 1.5 to 0.25 seconds results in reducing the energy saving from 90% to 55%.
To summarize, the current time slicing scheme can reduce the switching delay by reducing the amount of data transmitted in each burst.
This, however, results in serious increase in the energy consumption of mobile devices, which degrades the service quality as mobile TV users will have shorter battery life time and hence viewing time.
Therefore, better solutions for Problem 1 are needed.
The high level description of our proposed solutions is given in the next subsection.
To achieve both low switching delay and high energy saving, we propose to simulcast each TV channel over two burst trains.
We design new time slicing schemes such that one burst train is optimized for energy saving (referred to as the primary train), and the other burst train is optimized for low switching delay (referred to as the bootstrap train).
A mobile device that just switches to a new TV channel tunes to the bootstrap train first, which enables the device to start the playout of video very quickly.
The device tunes to the primary train upon a burst of its TV channel is transmitted over the primary train, which enables the device to save more energy.
Devices that are receiving the bootstrap trains are referred to as in the bootstrap stage, and devices that are receiving the primary trains are considered in the steady stage.We further propose and analyze two methods for simulcast: (i) simulcast with traditional nonscalable video coding (referred to as SIMU), and (ii) simulcast with scalable video coding (referred to as SIMU-S).
In its simplest form, SIMU broadcasts the same video stream twice with different burst sizes over the bootstrap and primary burst trains.
This, however, reduces the effective utilization of the air medium as fewer number of TV channels can be broadcast.
To mitigate this problem, a reduced-quality video stream can be transmitted over the bootstrap burst train, while the full-quality stream is transmitted over the primary burst train.
Since mobile TV receivers only playout bursts from bootstrap trains for a short time period (order of seconds), showing a lower quality video in the bootstrap stage is not very noticeable.
More importantly, users who quickly flip through TV channels can barely realize that the video quality is reduced, because it takes human eyes some time to detect the visual details in a new scene/channel.
Fig. 2(b) illustrates the SIMU scheme.
The SIMU scheme, while effective in delay reduction and energy saving, has two drawbacks.
First, for each video, two separate streams need to be compressed and stored, which imposes higher costs on computational power and storage space.
Second, switching from the bootstrap stream to the primary stream introduces complexities such as stream synchronization and reference frame management.To address these drawbacks, SIMU-S employs scalable video coding, where a video stream is encoded into a base layer and one or more enhancement layers.
SIMU-S transmits the base layer (for reduced-quality) over the bootstrap burst train, and the full-quality stream (both base and enhancement layers) over the primary burst train.
SIMU-S requires lower computational power and smaller storage space, simplifies video stream switching procedure, and allows gradual quality transition from reduced to full-quality videos.
Fig. 2(c) illustrates the SIMU-S scheme.
While SIMU-S addresses the storage and multiple compression problems, it still incurs replication over the air medium.
As shown in Fig. 2(c), the base Burst Cluster Figure 4.
Burst allocation for the SIMU-S+ scheme.Channel 1 2 S S − 1 2 4 3 S 1 S − 1 S − 2 1 3 2 · · · · · · · · · · · · · · · S − 1 S S − 2 S − 3 S 2 1 r−rl r d ′ m rl r d ′ m d m Recurring Window Sd ′ m secs d ′ m secslayers are broadcast over both the primary and bootstrap trains.
This replication may not be desirable in broadcast networks with limited bandwidth.
To handle this case, we propose to broadcast the base layer only over the bootstrap burst train and the enhancement layer over the primary burst train.
We call this scheme SIMU-S+, and it is shown in Fig. 2(d).
As we will show in the next section, all three proposed schemes (SIMU, SIMU-S, and SIMU-S+) can provide channel switching delay guarantees, i.e., they solve Problem 1.
However, they have different advantages and are suitable in different environments.
SIMU is useful in legacy environments where scalable video decoders are not widely available to mobile devices.
Meanwhile, SIMU-S is better for mobile TV networks with some idle bandwidth, while SIMU-S+ is for bandwidth saturated mobile TV networks.
We note that SIMU and SIMU-S result in much better energy saving than SIMU-S+, but lower bandwidth utilization.
In this section, we present the detailed design of the proposed time slicing schemes.
We also derive closed-form equations for the achieved energy saving.
As shown in Fig. 2(b), SIMU transmits two versions of each video stream: one over the primary burst train with bit rate r, and another over the bootstrap burst train with bit rate r l , where r l ≤ r.
We propose an optimal (in terms of energy consumption) time slicing scheme that specifies the transmission time and the size of each burst in the primary and bootstrap trains.
This time slicing scheme is illustrated in Fig. 3.
The basic idea is to divide the time into recurring windows of size Sd m each, where S is the number of TV channels and d m is the maximum allowed switching delay.
Within this window, only one (large) primary burst of each TV channel is transmitted.
This burst has just enough video data to be played back till the next primary burst of the same TV channel.
The primary burst of TV channel s(s = 1, 2, . . . , S) is allocated as follows:< (s − 1)d m , Sd m r >,(2)where the first element is the burst start time in seconds and the second element is the burst size in kb.
Allocating the primary bursts according to Eq.
(2) minimizes the energy consumption in the steady stages (as shown below in Theorem 1), but it does not ensure that the switching delay is bounded by d m .
To do so, the inter-burst period between two bursts of the same TV channel in the bootstrap train must be at most d m .
Thus in a window of size Sd m , we need S bootstrap bursts for each TV channel, which are equally spaced with distance d m .
The bootstrap bursts of TV channel s(s = 1, 2, . . . , S) are allocated as follows:< (k − 1)d m + r r + r l d m + (s − 1) r l r + r l d m S , d m r l >, k = 1, 2, . . . , S,(3)where the first element is again the burst start time, and the second is its size.
The following theorem shows that the above allocation for primary and bootstrap bursts is valid and optimal.
Proof.
Consider a mobile device receiving an arbitrary TV channel out of the S channels.
If the mobile device is in the primary stage, it gets Sd m r kb video data in every recurring time window of length Sd m seconds.
This is equivalent to streaming at rate (Sd m r)/(Sd m ) kbps, which is equal to the full-quality video at bit rate r.
If the mobile device is in the bootstrap stage, it gets d m r l kb video data at interval of d m as there are S bursts assigned to each TV channel in each recurring window of length Sd m seconds.
This is equivalent to streaming at rate d m r l /d m , which is equal to the reduced-quality video at bit rate r l .
Since the received bit rates are equal to the consumed bit rates, our allocation leads to no buffer overflow/underflow and is a valid time slicing scheme.Next, consider any two adjacent bootstrap bursts (k and k + 1) for a TV channel s.
According to Eq.
(3), the difference in the start time between them is d m , as (k − 1)d m is the only term that depends on k. Therefore, for a channel switching event occurring at an arbitrary time, there is a bootstrap burst within at most d m seconds.
This shows that our time slicing scheme meets the switching delay constraint.To show that our burst allocation scheme in SIMU minimizes energy consumption, we first show that any other allocation scheme that does not use simulcasting (i.e., broadcasts a single version of each video at bit rate r) will result in more energy consumption than ours.
To guarantee a maximum switching delay of d m , any such allocation scheme must place two successive bursts of the same video no further apart than d m sec.
Therefore, it can achieve energy saving no better than 1 − r R − To dm , which is always worse than the energy saving of our scheme γ p = 1 − r R − To Sdm (γ p is derived later in this proof).
In addition, simulcasting schemes with more than two versions of the video will always consume more energy than our scheme (which has only two versions).
This is because more versions of each video results in smaller (thus more) bursts and incurs more overhead duration periods T o .
Now we show that our allocation scheme minimizes energy consumption by contradiction.
Since we consider a steady system where the receiving number of bits equals the consumed number of bits, any valid time slicing scheme with the same recurring window size consumes the same amount of energy on receiving video data.
Therefore, what differentiates the energy consumption of one time slicing scheme from another is the number of overhead duration T o periods incurred in receiving the data.
This enables us to reduce our problem of minimizing energy consumption to minimizing the number of bursts and hence minimizing the number of overhead periods incurred.
Assuming there exists a valid time slicing scheme with recurring window w 1 > Sd m and the same number of primary bursts as our scheme, i.e., the new scheme results in better energy consumption.
To meet the delay constraint, the new scheme must allocate a bootstrap burst for every TV channel at time intervals d m .
Moreover, to keep the number of primary bursts the same as our scheme, the new scheme can only assign one burst for each TV channel.
Since the burst bit rate is R, it takes the new scheme rw1 R + r l w1 R seconds to complete one primary burst and S bootstrap bursts.
Since S = R r+r l , manipulating the above equation leads to:rw 1 R + r l w 1 R = (r + r l ) w 1 R > (r + rl)Sd m R > d m .
This contradicts the assumption that the new scheme is a valid allocation.
Next, assuming there is a valid time slicing scheme with recurring window w 2 < Sd m that produces higher energy saving than our scheme.
Both this new scheme and our scheme consist of S primary bursts, while the new scheme has to allocate w 2 /d m bootstrap bursts for each TV channel to meet the switching delay constraint.
Consider each burst imposes a fixed overhead duration, the new scheme always results in worse energy saving than our scheme in the steady stage because the overhead ST o is averaged over a shorter time period w 2 < Sd m .
Meanwhile, the energy saving in bootstrap state is the same in both schemes.
This completes our proof of optimality (in terms of energy saving).
Last, we derive the energy saving in both steady and bootstrap stages.
Consider a recurring window of Sd m .
In the bootstrap stage, S bursts is assigned to each TV channel where the aggregate burst length is d m r l S/R.
We next present our SIMU-S scheme, which adopts scalable video coding to save computational complexity and storage space and to reduce stream switching complexity.
As shown in Fig. 2(c), SIMU-S encodes each TV channel in two layers * : base and enhancement layers.
We provide a simple mapping between SIMU-S and SIMU, which will enable us to use the time slicing scheme presented in the previous subsection for SIMU-S.
This mapping can easily be done by encoding each TV channel at base layer bit rate r b = r l kbps and enhancement layer bit rate r e = r − r b kbps.
SIMU-S then streams the base layer over bootstrap bursts and the complete stream (both base and enhancement layers) over primary bursts using this mapping.
Theorem 1 is also applicable to SIMU-S.
Next, we develop our SIMU-S+ scheme.
Since bandwidth saturated networks cannot afford the replication of video data over the shared air medium, we cannot transmit base layer twice as in SIMU-S scheme.
Therefore, as shown in Fig. 2(d), we transmit the base layer only over bootstrap bursts and the enhancement layer over primary bursts.
Mobile devices that just switch to a new TV channel can start playing the base layer for reduced-quality videos and add enhancement layer streams for full-quality videos whenever bursts on primary trains are available.
We now design a time slicing scheme for SIMU-S+.
The main difference between SIMU-S+ and SIMU-S is that mobile devices have to receive bootstrap bursts even in the steady stage.
That is, more antenna on/off operations are required in each recurring window, which leads to higher energy consumption as each antenna on/off operation imposes an overhead duration T o .
To minimize this negative impact, we propose to shift every subsequent bootstrap burst by one as indicated in Fig. 4.
The shifting operation enables us to concatenate three bursts that belong to the same TV channel, say channel 2 as illustrated in Fig. 4, together so that mobile devices can receive three bursts without turning off their antennas.However, due to the shifting operations, the last burst in each bootstrap burst cluster should be smaller than other bootstrap bursts.
This is because the last burst has a shorter inter-burst time as it will become the first burst in the following bootstrap burst cluster, while all other bursts have to shift to its right for one time slot.
Let x be this bootstrap time slot width.
Let d ′ m be the time length of a primary burst and a cluster of bootstrap bursts.
To guarantee that the channel switching delay does not exceed d m second, we set d ′ m + x = d m , which keeps any two adjacent bootstrap bursts of the same TV channel apart no longer than d m seconds.
Since the bit rates of the primary and the bootstrap burst trains are given and the air medium bandwidth is a constant, we allocate r−r l r d ′ m time slots to each primary burst for any channel s and r l r d ′ m for every bootstrap burst cluster.
The latter one is then split into r l rS d ′ m − (S − 1)x for the last bootstrap burst and r l rS (d ′ m + x) for others.
Following the definition of x we have:r l rS (d ′ m + x) = x =⇒ x = r l rS d m and d m = rS rS − r l d ′ m .
The above equation gives us the bootstrap slot size x.
We then allocate the primary burst of TV channel s(s = 1, 2, . . . , S) as follows:< (s − 1)d ′ m , (r − r l )Sd ′ m >,(4)where the first element is the burst start time in seconds, the second element is the burst size in kb, and d ′ m = rS−r l rS d m .
The bootstrap bursts of TV channel s(s = 1, 2, . . . , S) are allocated as follows:< kd ′ m − r l d ′ m r + (i − 1)r l d m rS , r − r l r d m r l >, (1 ≤ k ≤ S and i = S), < kd ′ m − r l d ′ m r + (i − 1)r l d m rS , d m r l >, (1 ≤ k ≤ S and i 񮽙 = S),(5)where the first element is the burst start time, the second is its size, and i = (S + k − s) mod S + 1.
Note that, i represents the position of each bootstrap burst within a burst cluster and accommodates the shifting operations.
The following theorem shows that the above allocation for primary and bootstrap bursts is valid and optimal.
The proof is omitted due to space limitations.
THEOREM 2.
For simulcasting with scalable coding in mobile TV networks, allocating the primary and bootstrap bursts according to Eqs.
(4) and (5), respectively yields a valid time slicing scheme (i.e., with no buffer overflow/underflow for any TV channel), meets the switching delay constraint, and minimizes the energy consumption.
Moreover, the energy saving is given by γ = 1 − r R − (S−1)ToSd ′ m .
* We note that our proposed schemes can easily be extended to support multiple enhancement layers for finer-grained scalability.
We compare the proposed time slicing schemes against each other and against the current scheme by numerically analyzing the equations derived in the previous subsections.
In the comparisons, we use SIMU-S to refer to both SIMU and SIMU-S because they use the same time slicing scheme, with the only difference in how the video streams are encoded and stored.We consider typical system parameters of mobile TV networks and compute the energy saving in various settings.
We first fix all parameters except the maximum channel switching delay d m .
We set T o = 100 msec, R = 11 Mbps, r l = 25 kbps and r = 250 kbps.
We vary d m from 0.1 to 1 sec.
Fig. 5(a) shows the energy saving achieved by all considered solutions.
In the figure, SIMU-S Boot and SIMU-S Steady denote the energy saving achieved by the SIMU-S time slicing scheme when mobile devices receive the bootstrap and primary bursts, respectively.
This figure indicates that SIMU-S scheme always achieves more than 95% energy saving for mobile receiver in the steady stage.
In contrast, the current solution results in much lower energy saving especially when d m is small.
Actually, when d m approaches T o , the current solution degrades to continuous transmission that leads to zero energy saving.
Another observation we can draw from Fig. 5(a) is that, for mobile devices in the bootstrap stage, the SIMU-S scheme yields a marginal energy saving gain over the current scheme.
This, however, is not a big issue because most devices spend a small fraction of time in the bootstrap stage.
We also note that our SIMU-S+ scheme does not result in additional energy saving compared to the current scheme.
This is because mobile devices in SIMU-S+ networks always receive all bursts, which leads to high energy overhead due to antenna on/off operations.We next study the effect of changing the base layer bit rate r l on energy saving.
We fix d m = 400 msec, T o = 100 msec, R = 11 Mbps, and r = 250 kbps.
We vary r l from 15 to 200 kbps.
Fig. 5(b) illustrates the energy saving under different relative base layer rates resulted by all considered schemes.
This figure shows that our SIMU-S scheme achieves much higher energy saving than the current scheme for all possible base layer bit rates.
However, our SIMU-S+ scheme results in marginal improvement, about 1%, compared to the current scheme.
Based on this observation, we conclude that both current and SIMU-S+ schemes scarify energy saving for low switching delays while our SIMU-S scheme achieves both the best energy saving and low switching delays.
We should note that SIMU-S trades broadcast bandwidth for good energy saving.
Fig. 5(c) shows that as the relative base layer rate increases, the number of TV channels that can be broadcast decreases when the SIMU-S scheme is used.To summarize, there are three main aspects in mobile TV networks: energy saving for mobile devices, channel switching delay, and bandwidth utilization.
The first two are important for extending the viewing time and improving the quality of experience for users, while the third aspect is important for the network operator in order to offer more TV channels.
Our analysis in the previous subsections show that these three issues are inherently conflicting, meaning that all of them cannot be optimized at the same time.
For example, the current time slicing scheme can achieve full bandwidth utilization, but it trades smaller energy saving for shorter switching delays.
Our proposed SIMU and SIMU-S schemes achieve optimal energy saving and small switching delays, but at the expense of reduced bandwidth utilization.
Our SIMU-S+ scheme achieves a slightly better energy saving than the current scheme (but less than SIMU and SIMU-S) while fully utilizing the bandwidth and meeting a required maximum channel switching delay.
In this section, we evaluate our proposed time slicing schemes in a mobile TV testbed.
We focus on the SIMU-S scheme because it combines the advantages of the SIMU scheme with the low storage and simple stream management of scalable coding.
We also have shown in Section 4 that both SIMU and SIMU-S achieve the same energy saving.
To evaluate our time slicing schemes in real systems, we have set up a DVB-H testbed network in our Lab.
Our testbed consists of a video streaming server, a broadcast base station, a DVB-H mobile device (Nokia N92), and a signal analyzer (Divicatch 22 ).
The video streaming server supports scalable streams and sends RTP packets to the broadcast base station over a local network.
The broadcast base station receives these RTP packets, encapsulates them into MPE and MPE-FEC sections, and fits these sections into time slicing bursts.
The encapsulated MPE and MPE-FEC sections form MPEG-2 traffic streams, which are sent to the DVB-H modulator and then transmitted over the air to mobile devices.
We use a commodity Linux PC as the broadcast base station, in which we install a Dektec DTA-110T-SP PCI modulator.
23 We have implemented our SIMU-S time slicing scheme in C in the broadcast base station.
We have also implemented the current time slicing scheme for comparison.
We have redesigned the open-source IP encapsulator 24 to support different burst allocation algorithms with a well-defined interface.
The original IP encapsulator could only support static burst allocation with uniform inter-burst distance for all TV channels.To conduct our experiments, we configure the testbed as follows.
We use 5 MHz DVB-H channel with Quadrature Phase-Shift Keying (QPSK) modulation, which leads to 5.445 Mbps air medium bandwidth according to the DVB-H standard.
7 For each TV channel, we configure the streaming sever to send packets of size 1.5 KB at bit rate r = 300 kbps.
We set the reduced-quality bit rate r l = 100 kbps.
Therefore, our broadcast system can concurrently broadcast up to 13 TV channels.
We set the target maximum channel switching delay to be 500 msec.
For each considered time slicing scheme, we broadcast 8 TV channels for 10 minutes.
Our Linux server running the base station code could not handle (encapsulate, FEC-encode, etc.) more than 8 TV channels in real time.
This is why we broadcast only 8 channels.
To conduct statistically meaningful performance analysis, we collect detailed event logs from the base station.
The logs contain the start time (in msec) of broadcasting every burst of data and its size.
Using these logs, we develop a software utility to emulate the behavior of a large number (1 million) of mobile devices.
We generate random channel switching events using Bernoulli trials.
For every mobile receiver, we toss a biased coin every second and issue a channel switching command if the trial is success.
The new selected channel is randomly chosen from all broadcast channels other than the currently watched one.
We set the probability of success in a way that we have on average 100 sec of watch time for each channel.
We chose a small channel watch time for conservative evaluation, because our proposed schemes consume more energy in the bootstrap stage.
However, in typical cases, the watching time should be much higher than 100 sec, and the results will be better than those presented in this section.We run our emulator against each broadcast log file produced by the actual DVB-H broadcast base station and we measure the channel switching delay and energy saving.
We measure the channel switching delay by searching for the next burst of the new selected TV channel and computing the time difference.
We measure the energy saving by computing the fraction of time that the antenna is on.
We set the overhead duration T o = 100 msec.
When using our SIMU-S scheme, we divide each watching period into a bootstrap stage and a steady stage.
We measure the energy saving in both stages, and report the weighted average of them as mobile devices first receive bootstrap bursts and switch to primary bursts whenever the latter ones become available.
Correctness of our Analytical Analysis.
We first validate the analytical energy saving formulas using the collected empirical data as follows.
We consider several TV channel bit rates: from 250 to 500 kbps.
For each TV channel bit rate r, we select a reduced-quality bit rate r l = 0.2r kbps.
We then broadcast for 15 minutes at various r using both current and SIMU-S schemes.
We measure the energy saving from the collected logs for the SIMU-S and the current time slicing schemes.
We also compute the theoretical energy saving from the corresponding equations in Sections 3 and 4.
We plot the theoretical (denoted by Th.)
and the empirical results in Fig. 6.
This figure clearly shows that our analytical formulas closely follow the empirical data collected from the real DVB-H testbed.
Switching Delay Guarantee.
In Section 3, we prove that our time slicing schemes provide channel switching delay guarantees.
Here, we show that our testbed implementation does achieve the guaranteed delays.
Fig. 7 shows the distribution of the channel switching delay observed by the mobile devices switching among randomly chosen channels.
This figure shows that the switching delays for all mobile devices are below the target delay of 500 msec.Energy Saving.
Fig. 8 reports the average energy saving achieved by the current and SIMU-S schemes.
This figure shows that while the current scheme results in 74% energy saving, our proposed SIMU-S scheme yields up to 93% energy saving while providing switching delay guarantees.
Note that, as the current scheme allocates bursts at uniform distance, the average energy saving does not depend on the time of channel switching events.
Hence, most mobile devices achieve about 74% energy saving.
In contrast, in the SIMU-S scheme, mobile devices achieve slightly different energy saving, because of the existence of the bootstrap and primary burst trains.
Recall that mobile devices first tune for the bootstrap bursts, then switch to the primary bursts once they become available.
Actually, we observe some diversity in the average period of time a mobile device waits in the bootstrap stage till it receives its first primary burst (the figure is not shown due to space limitations).
This diversity explains the minor differences in the achieved energy saving for SIMU-S in Fig. 8.
We find that it takes mobile devices on average only 4 sec to switch to high-quality videos in this test scenario.
The short period in the bootstrap stage is desirable, because it means that users will obtain full-quality video sooner, and they may not observe the reduced quality during the short transition period.
In this paper, we considered the problem of controlling the channel switching delay in mobile TV networks that use time slicing to save energy.
Our objective is to provide a guarantee on the maximum switching delay from a TV channel to any other channel, without scarifying the energy saving for mobile devices.
We analyzed the time slicing scheme used in the current mobile TV networks and showed that it does not minimize the energy consumption for mobile devices.
We proposed new time slicing schemes: SIMU, SIMU-S, and SIMU-S+, which are provably optimal in terms of energy saving.
Our analysis shows that there are three conflicting aspects in mobile TV networks: energy saving for mobile devices, channel switching delay, and bandwidth utilization.
These three aspects cannot be optimized at the same time.
For example, the current time slicing scheme can achieve full bandwidth utilization, but it trades energy saving for shorter switching delays.
Our proposed SIMU and SIMU-S schemes achieve optimal energy saving and small switching delays, but at the expense of reduced bandwidth utilization.
Our SIMU-S+ scheme achieves a slightly better energy saving than the current scheme while fully utilizing the bandwidth and meeting a required maximum channel switching delay.
We implemented our proposed time slicing schemes in a mobile TV testbed.
We conducted real-time broadcast experiments and emulated a large number of mobile devices that are randomly switching among many TV channels.
Our experiments confirmed the correctness of our analysis and demonstrated that using our time slicing schemes, energy saving as high as 93% can be achieved while guaranteeing a channel switching delay of at most 500 msec.
