The Fréchet distance between two curves in the plane is the minimum length of a leash that allows a dog and its owner to walk along their respective curves, from one end to the other, without backtracking.
We propose a natural extension of Fréchet distance to more general metric spaces, which requires the leash itself to move continuously over time.
For example, for curves in the punctured plane, the leash cannot pass through or jump over the obstacles ("trees").
We describe a polynomial-time algorithm to compute the homotopic Fréchet distance between two given polygonal curves in the plane minus a given set of obstacles, which are either points or polygons.
Given two input curves, a natural question that arises is how similar the curves are to each other.
One common measure is the Hausdorff distance, which simply takes the minimum distance between any two points, one from each curve.
While the Hausdorff metric does measure closeness in space, it does not take into account the flow of the curves, which in many applications, such as morphing in computer graphics, is an important property of the curves.The Fréchet distance, sometimes called the dog-leash distance, is defined as the minimum length of a leash required to connect a dog and its owner as they walk without backtracking along their respective curves from one endpoint to the other.
The Fréchet metric takes into account the flow of the two curves because the pairs of points whose distance contributes to the Fréchet metric sweep continuously along their respective curves.
It is therefore possible for two curves to have small Hausdorff distance but large Fréchet distance.
Fréchet distance is used as a more accurate measure of similarity in many different applications [AG95, AB05].
When the two curves are embedded in a general metric space, the distance between two points on the curves (the length of the shortest leash joining them) is not the Euclidean distance but a geodesic distance.
For instance, this is the case if the two curves lie on a terrain (or any surface) [MY05] or if the leash is constrained to the interior of a simple polygon [CW07, EGHP + 02].
The definition of the ordinary Fréchet distance allows the leash to switch discontinuously, without penalty, from one side of an obstacle or a mountain to another.In this paper, we introduce a continuity requirement on the motion of the leash.
We require that the leash cannot switch, discontinuously, from one geodesic to another; in particular, the leash cannot jump over obstacles and can sweep over a mountain only if it is long enough.
We define the homotopic Fréchet distance between two curves as the Fréchet distance with this additional continuity requirement.
This continuity requirement is satisfied automatically for curves inside a simple polygon, but not in more general environments like convex polyhedra.The motion of the leash defines a correspondence between the two curves that can be used to morph between the two curves-two points joined by a leash morph into each other.
The homotopic Fréchet distance can thus be thought as the minimal amount of deformation needed to transform one curve into the other.In robotics, the two curves being compared may be two motion sequences in the configuration space of a robot system.
When the configuration space has obstacle regions, the similarity between the two curves is more accurately measured by the homotopic Fréchet distance rather than the ordinary Fréchet distance that ignores obstacles.Efficiently computing the homotopic Fréchet distance in general metric spaces is a new open problem.
We present a polynomial-time algorithm for a special case of the general problem, which is to compute the homotopic Fréchet distance between two polygonal curves in the plane with point obstacles.
Let S be a fixed Hausdorff metric space.
A curve in S is a continuous function from the unit interval [0,1] to S.
We will sometimes abuse notation by using the same symbol to denote a curve A : [0, 1] → S and its image in S.
A reparameterization of [0,1] is a continuous, non-decreasing, surjection α : [0, 1] → [0,1].
A reparameterization of a curve A : [0, 1] → S is any curve A • α, where α is a reparameterization of [0,1].
The length of any curve A, denoted len(A), is defined by the metric of S; in particular, two reparameterizations of the same curve have the same length.A leash between two curves A and B is another curve λ : [0, 1] → S such that λ(0) = A(s) and λ(1) = B(t) for some parameters s and t.
A homotopy between curves A and B is a continuous map h : [0, 1] × [0, 1] → S such that h(·, 0) = A and h(·, 1) = B. For any t ∈ [0,1], the one-parameter function h(t, ·) is a leash from A to B.
A leash map between curves A and B is a homotopy between some reparameterization of A and some reparameterization of B. Intuitively, a leash map describes the continuous motion of a leash between a dog walking along A and its owner walking along B.
The length of a leash map , denoted len(), is the maximum length of any leash (t, ·).
Finally, the homotopic Fréchet distance between two curves A and B, denoted F(A, B), is the infimum, over all leash maps between A and B, of the length of :F(A, B) := inf leash map :[0,1] 2 →S max 0t1 len((t, ·)) .
In contrast, the classical or leashless Fréchet distance is defined directly in terms of reparameterizations and distances:F(A, B) := inf α,β:[0,1]→[0,1] max 0t1 d(A(α(t)), B(β(t))) .
In spaces where shortest paths vary continuously as their endpoints move, such as Euclidean space or the interior of a simple polygon, the two definitions are equivalent.
In general, however, homotopic Fréchet distance could be larger (but never smaller) than leashless Fréchet distance.
A homotopy relative to A and B, or simply relative homotopy, is a continuous function h : [0, 1] × [0, 1] → S, such that h(·, 0) and h(·, 1) are respectively of the form A(u(·)) and B(v(·)), where u and v are continuous functions from [0,1] to [0,1].
Two leashes λ and λ are relatively homotopic, denoted λ λ , if there is a relative homotopy h such that h(0, ·) = λ and h(1, ·) = λ .
It is easy to prove that is an equivalence relation over the set of leashes.
Any leash map is (the transpose of) a relative homotopy; thus, all leashes (t, ·) determined by a leash map lie in the same relative homotopy class.
In this paper, we develop a polynomial-time algorithm to compute the homotopic Fréchet distance between two polygonal paths in E = E 2 \ P , for some set P of closed polygons, where the underlying metric is geodesic distance.
The polygons P act as obstacles; in any leash map in E, the moving leash can neither touch nor jump over any obstacle.Specifically, the input to our problem consists of two polygonal curves A and B and a set P of polygons in the Euclidean plane.
Curves A and B may (self-)intersect, but neither curve intersects any obstacle in P .
To simplify our exposition, we assume that no three vertices of the input (vertices of polygons in P or vertices of A and B) are collinear; this assumption can be enforced algorithmically using standard perturbation techniques [Sei98].
Let a 0 , a 1 , . . . , a m denote the sequence of vertices of A; these points define a standard parameterization A : [0, m] → E whose restriction to any integer range [i − 1, i] is an affine map onto the corresponding edge a i−1 a i .
Similarly, the vertices b 0 , b 1 , . . . , b n of B define a standard piecewise-affine parameterization B : [0, n] → E. Let P 1 , P 2 , . . . , P o denote the obstacle polygons in P , and let k denote the total number of vertices in all obstacle polygons.
In the special case where every obstacle is a single point, we obviously have k = o = |P |.
Finally, let N = n + m + k + 2 denote the total complexity of the input.
Figure 1 illustrates optimum leash maps for a few sample inputs where P is a discrete set of points.3.1.
Geodesics and Geodesic Leash Maps.
To simplify our presentation, we will allow 'paths' in E to touch obstacles in P .
Specifically, we consider geodesics: piecewise-linear curves in the closure of E, whose interior vertices are vertices in P .
Although geodesics may run along obstacle boundaries, they do not intersect the interior of any obstacle.In the special case where the obstacles are points (so the closure of E is the entire plane), we need some additional information to ensure that each geodesic lies in a unique homotopy class.
Specifically, we associate a turning angle with each obstacle point that a geodesic touches.
Let C ε be a circle centered at obstacle point p and radius ε, small enough to exclude every other obstacles in P .
A turning angle of θ at an obstacle point p indicates that replacing the portion of γ inside C ε with a counterclockwise arc of length θε around C ε yields a new path homotopic to γ.
For example, a path with turning angle zero makes a U-turn at p without enclosing p; a path that goes straight through p with p on its left (resp.
right) has turning angle π (resp.
−π); a turning angle of 10π means the path makes a U-turn after winding around the point five times counterclockwise.
A geodesic could meet the same obstacle point more than once; we associate a different turning angle with each incidence.It can be shown that for any two points x and y in E, the shortest path from x to y in any relative homotopy class is a unique geodesic, in which every turning angle at a point obstacle is either at least π or at most −π.
Conversely, every geodesic in which every turning angle is either at least π or at most −π is a shortest path in some homotopy class.A geodesic leash map is a leash map :[0, 1] × [0, 1] → E 2 in which every leash (t, ·)is a geodesic, and all these geodesics are in the same relative homotopy class.
We next prove that for any leash map , there is a shorter geodesic leash map in the same homotopy class, with the same parameterizations of A and B.Lemma 3.1.
Suppose is a leash map between two curves A and B.
There is a geodesic leash map between A and B such that, for all t ∈ [0, 1], the leash (t, ·) is the shortest path homotopic to (t, ·) with the same endpoints.
Additionally, the length of is at most the length of .
Proof.
We lift to the universal coverˆEcoverˆ coverˆE of E, obtaining a leash mapˆbetweenmapˆ mapˆbetween the liftsˆAliftsˆ liftsˆA andˆBandˆ andˆB of A and B respectively.
For each t ∈ [0, 1], letˆ(letˆ letˆ(·, t) be the shortest path between the endpoints ofˆ( ofˆ ofˆ(t, ·) in the same homotopy class.
The universal coverˆEcoverˆ coverˆE is a simply-connected space with a locally Euclidean metric, so shortest paths inˆEinˆ inˆE vary continuously as the endpoints move continuously.
It follows thatîsthatˆthatîs a continuous function in both arguments, and therefore a (geodesic) leash map inˆEinˆ inˆE.
The projection ofˆbackofˆ ofˆback to S is a (geodesic) leash map between A and B. For all t, the leash (t, ·) is the shortest path homotopic to (t, ·), so max t len( (t, ·)) max t len((t, ·)).
This lemma implies that the homotopic Fréchet distance between A and B is the length of a geodesic leash map in some homotopy class determined by some reparameterizations of A and B. Thus, the homotopic Fréchet distance can be redefined as the minimum, over all homotopy classes h, of the classical Fréchet distance, where distances are defined by shortest paths in relative homotopy class h:F h (A, B) := min α,β:[0,1]→[0,1] max t∈[0,1] D h (A(α(t)), B(β(t))) F(A, B) := min homotopy class h F h (A, B)(Here, D h (u, v) denotes the length of the shortest path from u to v in relative homotopy class h.) We call a relative homotopy class h optimal if F(A, B) = F h (A, B).
For the rest of the paper, we restrict ourselves to geodesic leashes and geodesic leash maps.
In Section 4, we provide a characterization of an optimal homotopy class, and we use this characterization to enumerate possible optimal homotopy classes in polynomial time.
In Section 5, we describe a polynomial-time algorithm to compute the Fréchet distance within a particular homotopy class.
Combining these two subroutines gives us a polynomial-time algorithm to compute homotopic Fréchet distance.3.2.
Maintaining Homotopic Shortest Paths.
Our algorithm relies on observations by Hershberger and Snoeyink [HS94] about shortest homotopic paths in the punctured plane; see also [GS98, CLMS04, EKL06, Bes03, Bes04].
Suppose we already know a shortest path (a leash) λ between points a ∈ A and b ∈ B, such as, for instance, a straight-line segment ab.
To compute the geodesic leash between some other pair of points in the same homotopy class as λ, we follow the continuous evolution of the geodesic as the points a and b move along their respective curves.
The sequence of obstacle vertices on the leash behaves like a double-ended queue or deque.
A new vertex is pushed onto one end of the deque whenever the first or last segment of λ collides with an obstacle vertex.
Conversely, a vertex is popped off one end of the deque when the first or last two segments of λ become collinear, and if their common vertex is a point obstacle, the turning angle at that point is either π or −π.
(Again, if λ meets the same point obstacle more than once, each incidence separately contributes to turn(λ).
If none of the obstacles are points, then turn(λ) = 0.)
For any pair of leashes λ and λ , we write λ λ if and only if either (a) len(λ) < len(λ ), or (b) len(λ) = len(λ ) and turn(λ) ≤ turn(λ ).
We write λ λ whenever λ λ but λ λ.
We can extend this partial order to homotopy classes as follows.
For any relative homotopy class h and any s, t ∈ [0, 1], let σ h (s, t) denote the shortest path in h between points A(s) and B(t).
For any two homotopy classes h and h , we write h h if and only if σ h (s, t) σ h (s, t) for all parameters s and t.
We write h h whenever h h but h h. , if h h , then F h (A, B) F h (A, B).
Proof.
Let be an optimum leash map in homotopy class h , so that len( ) = F h (A, B).
For some reparameterizations α and β, we have (t, ·) = σ h (α(t), β(t)) for all t. Let be the geodesic leash map in homotopy class h defined by the same reparameterizations:(t, ·) = σ h (α(t), β(t)) for all t.
The definition of implies that len((t, ·)) len( (t, ·)) for all t.
It follows that F h (A, B) len() len( ) = F h (A, B).
A relative homotopy class h is minimal if h h implies h h .
Lemma 4.2.
For any relative homotopy class h, there is a minimal relative homotopy class h such that h h.Proof.
Assume, for the sake of contradiction, that there is no minimal relative homotopy class h such that h h. Then, by induction, we can construct an infinite descending chain of relative homotopy classes h = h 0 h 1 h 2 · · · .
To simplify notation, let σ n = σ hn (0, 0).
Consider the ordered list of obstacle points on each path σ n .
There are finitely many such ordered lists, because len(σ n ) len(σ 0 ) for each n. Thus, up to taking a subsequence, we may assume that every path σ n visits the same sequence of obstacle points.
This assumption implies that all paths σ n are geometrically equivalent and thus have equal length.
Thus, by definition of , we have turn(σ n ) < turn(σ 0 ) for all n.
There are finitely many relative homotopy classes with a given ordered list of vertices and with bounded total absolute turning angle.
(Specifically, since turn(σ n ) − turn(σ 0 ) is always a multiple of 2π, there are at most turn(σ 0 )/2π + 1 such classes.)
The two previous lemmas immediately imply that there is a minimal optimal homotopy class.
In the next two subsections, we characterize minimal homotopy classes and describe how to enumerate them efficiently, first for point obstacles and then for polygonal obstacles.
Proof.
One direction of the proof is straightforward.
Let h be the relative homotopy class of the proper line segment σ from A(s) to B(t).
For any relative homotopy class h = h, the shortest path σ h (s, t) must be longer than σ, so σ h (s, t) σ = σ h (s, t), which implies that h h.
We conclude that h is minimal.
Now let h be an arbitrary minimal homotopy class.
LetˆALetˆ LetˆA andˆBandˆ andˆB be lifts of A and B in the universal coverˆEcoverˆ coverˆE, such that for all s and t, the shortest pathˆσpathˆ pathˆσ h (s, t) betweenˆAbetweenˆ betweenˆA(s) andˆBandˆ andˆB(t) is a lift of σ h (s, t).
LetˆPLetˆ LetˆP denote the set of all lifts of points in P ; these lifted obstacle points lie on the boundary ofˆEofˆ ofˆE.We prove that h contains a proper line segment in two stages.
First, we prove that no lifted obstacle pointˆppointˆ pointˆp ∈ ˆ P lies on every pathˆσpathˆ pathˆσ h (s, t).
Next, we construct a relative homotopy from the initial leash σ h (0, 0) to a proper line segment.Stage 1: No common corner.
For the sake of deriving a contradiction, suppose there is a lifted obstacle pointˆppointˆ pointˆp ∈ ˆ P such that for all s and t, the pathˆσpathˆ pathˆσ h (s, t) passes throughˆpthroughˆ throughˆp.
For all s and t, the pathˆσpathˆ pathˆσ h (s, t) is a shortest path, so its turning angle atˆpatˆ atˆp must lie outside the open interval (−π, π).
This turning angle is a continuous function of s and t, so we can assume without loss of generality that it is always greater than π.
In other words, we assume that every pathˆσpathˆ pathˆσ h (s, t) winds counterclockwise aroundˆparoundˆ aroundˆp.NowˆpNowˆ Nowˆp is a lift of some obstacle p ∈ P , andˆσandˆ andˆσ h (s, t) similarly projects to a geodesic σ h (s, t).
For each s and t, let τ (s, t) denote the path with the same vertices and turning angles as σ h (s, t), except that the turning angle at p is reduced by 2π.
All paths τ (s, t) belong to a single relative homotopy class, which we denote h .
Fix parameters s and t, and consider the turning angles of σ h (s, t) and τ (s, t) at p.
If the turning angle of σ h (s, t) at p is strictly between π and 3π, then the turning angle of τ (s, t) at p is strictly between −π and π.
In this case, τ (s, t) cannot be the shortest path from s to t in this homotopy class, so len(σ h (s, t)) < len(τ (s, t)) = len(σ h (s, t)).
On the other hand, if the turning angle of σ h (s, t) at p is at least 3π, then the turning angle of τ (s, t) at p is at least π, which implies that τ (s, t) is the shortest path from s to t in h .
In this case σ h (s, t) and σ h (s, t) = τ (s, t) are geometrically equivalent and thus have equal length, butturn(σ h (s, t)) = turn(σ h (s, t)) − 2π < turn(σ h (s, t)).
Hence σ h (s, t) σ h (s, t) for all s and t, which contradicts our assumption that h is a minimal homotopy class.
We conclude that no lifted obstacle pointˆppointˆ pointˆp lies on every shortest pathˆσpathˆ pathˆσ h (s, t).
Stage 2: Homotopy construction.
If the shortest pathˆσpathˆ pathˆσ h (0, 0) is a proper line segment, then the geodesic σ h (0, 0) is also a proper line segment, and the proof is complete.
Thus, we assume thatˆσthatˆ thatˆσ h (0, 0) passes through at least one point inˆPinˆ inˆP .
LetˆpLetˆ Letˆp 1 , . . . , ˆ p k be the sequence of lifted obstacle points on the shortest pathˆσpathˆ pathˆσ h (0, 0).
(The pointsˆppointsˆ pointsˆp i are distinct, although their projections back into E might not be.)
Our previous argument implies that for each i, there is a pair of parameters (s i , t i ) such thatˆσthatˆ thatˆσ h (s i , t i ) does not pass throughˆpthroughˆ throughˆp i .
We consider a continuous motion of the parameter point (s, t), starting at (s, t) = (0, 0) and then moving successively to each point (s i , t i ).
Specifically, we define two continuous functionss : [0, k] → [0, m] and t : [0, k] → [0, n]such that s(0) = t(0) = 0, and for any integer i, we have s(i) = s i and t(i) = t i .
To simplify our notation, we writê σ(τ ) to denote the shortest pathˆσ pathˆ pathˆσ h (s(τ ), t(τ )).
As the parameter τ ('time') increases, points inˆPinˆ inˆP are inserted into and deleted from the deque of vertices ofˆσofˆ ofˆσ(τ ).
If the deque is empty at any time τ , then the shortest pathˆσpathˆ pathˆσ(τ ) is a proper line segment, which implies that the projected path σ(τ ) is a proper line segment as well, concluding the proof.
Thus, we assume to the contrary that the deque is never empty.
Each vertexˆpvertexˆ vertexˆp 1 , . . . , ˆ p k must be deleted from the deque at some time during the motion (but may be reinserted later).
Supposê p is the last point amongˆpamongˆ amongˆp 1 , . . . , ˆ p k to be removed from the deque for the first time.
Without loss of generality, we assumê p is first removed from the front of the deque at time τ 1 .
LetˆqLetˆ Letˆq denote the second point in the deque just beforê p is removed; this point must exist, because the deque is never empty.
The pointˆppointˆ pointˆp lies on the first segmentâˆqsegmentˆsegmentâˆsegmentâˆq ofˆσofˆ ofˆσ(τ 1 ), wherê a = ˆ A(s(τ 1 )).
By definition ofˆpofˆ ofˆp, pointˆqpointˆ pointˆq must have been pushed onto the back of in the deque at some earlier time τ 2 < τ 1 .
Just afterˆqafterˆ afterˆq is inserted, the last two points in the deque arê p andˆqandˆ andˆq, in that order.
Moreover, ˆ q lies on the last segmentˆpˆbsegmentˆ segmentˆpsegmentˆpˆsegmentˆpˆb ofˆσofˆ ofˆσ(τ 2 ), wherê b = ˆ B(t(τ 2 )).
Thus, there is an improper line segmentâˆbsegmentˆsegmentâsegmentâˆsegmentâˆb between a point inˆAinˆ inˆA and a point inˆBinˆ inˆB.
Since all line segments inˆEinˆ inˆE are shortest paths, ˆ a ˆ b is the shortest pathˆσpathˆ pathˆσ h (τ 1 , τ 2 ).
Thus, the path σ h (τ 1 , τ 2 ) in E is an improper line segment in relative homotopy class h. Finally, for sufficiently small ε > 0, one of the four paths σ h (τ 1 ± ε, τ 2 ± ε) is a proper line segment (because no three vertices of the input are collinear).
Proposition 4.3 implies that we can enumerate the set of minimal relative homotopy classes in polynomial time as follows.
For every pair of points p, q ∈ P , we find all intersections of the line ← → pq with A and B, in O(m + n) time by brute force.
For each pair of intersection points a ∈ A and b ∈ B, we obtain four proper line segments arbitrarily close to ab.
(Alternately, we obtain four different straight geodesics from a to b, by assigning turning angles π or −π at p and q.) Altogether, we find O(mnk 2 ) proper line segments, at least one in each minimal homotopy class, in O(mnk 2 ) time.There are polygonal curves and point sets that admit Ω(mnk 2 ) distinct minimal relative homotopy classes; see Figure 2 for an example.
Thus, any improvement in this portion of the algorithm will require a finer characterization of optimal relative homotopy classes.
4.3.
Polygonal Obstacles.
The preceding argument breaks down if we allow polygonal obstacles; indeed, it is easy to construct instances where there are no proper line segments.
Even if the instance allows proper line segments, the optimal homotopy class may not include one.
Thus, we require a more complex characterization of minimal homotopy classes in this case.We say that obstacle vertices p and q pin a geodesic γ if the globally shortest path from p to q (in the closure of E) is a subpath of γ; note that p and q may be the same point.
A relative homotopy class h is pinned if some pair of obstacle vertices pins every geodesic in h.
The intersection of all geodesics within a pinned homotopy class is a shortest path between obstacle vertices, which we call the pinned subpath of h.Lemma 4.4.
Every minimal relative homotopy class either contains a proper line segment or is pinned.Proof.
As in the proof of Proposition 4.3, let h be an arbitrary minimal homotopy class.
LetˆALetˆ LetˆA andˆBandˆ andˆB be lifts of A and B in the universal coverˆEcoverˆ coverˆE, such that for all s and t, the shortest pathˆσ pathˆ pathˆσ h (s, t) betweenˆAbetweenˆ betweenˆA(s) andˆBandˆ andˆB(t) is a lift of σ h (s, t).
LetˆPLetˆ LetˆP denote the set of all lifts of the vertices of obstacles in P ; again, every point inˆPinˆ inˆP lies on the boundary ofˆEofˆ ofˆE.LetˆπLetˆ Letˆπ h denote the intersection of all shortest pathsˆσpathsˆ pathsˆσ h (s, t).
IfˆπIfˆ Ifˆπ = ∅, then by Stage 2 in the proof of Proposition 4.3, h contains a proper line segment.Otherwise, ˆ π h is a shortest path between some pair of lifted obstacle verticesˆpverticesˆ verticesˆp andˆqandˆ andˆq.
(In the special case wherê π h is a single point, we havê p = ˆ q = ˆ π h .)
NowˆpNowˆ Nowˆp andˆqandˆ andˆq are lifts of obstacle vertices p and q (which may be the same point, even ifˆpifˆ ifˆp andˆqandˆ andˆq are not), andˆπandˆ andˆπ h is similarly a lift of some path π h from p to q.Let σ h denote the globally shortest path from p to q, and suppose that π h = σ h .
For each s and t, let τ (s, t) be the curve obtained from σ h (s, t) by replacing π h with σ h .
All paths τ (s, t) belong to the same relative homotopy class, which we will denote h .
We now easily confirm that h h, contradicting our assumption that h is minimal.
We conclude that π h is the shortest path from p to q, which implies that h is a pinned relative homotopy class, and π h is its pinned subpath.We call a geodesic γ direct if it consists of a proper line segment from A to some obstacle vertex p, the shortest path from p to an obstacle vertex q, and a proper line segment from q to B.Lemma 4.5.
Every pinned relative homotopy class contains a direct geodesic.Proof.
Let h be a pinned homotopy class, and let p and q denote the start and end of the pinned subpath π h .
Any geodesic σ h (s, t) consists of a geodesic α h (s) from A to p, the pinned subpath π h , and a geodesic β h (t) from q to B.If α h (0) is a proper segment, our claim is proved.
Thus, we assume that α h (0) is not a direct geodesic, which implies that the lifted pathˆαpathˆ pathˆα h (0) passes through at least one obstacle vertex other than its endpointˆpendpointˆ endpointˆp.
LetˆpLetˆ Letˆp − be the last lifted obstacle vertex onˆαonˆ onˆα h (0) beforê p. Let s 0 be the largest value such thatˆαthatˆ thatˆα h (s) containsˆpcontainsˆ containsˆp − for all 0 s s 0 .
Becausê p − is not on the pinned subpath, it is not on every geodesicˆαgeodesicˆ geodesicˆα h (s), which implies that s 0 < m. For sufficiently small ε > 0, the geodesic α h (s 0 + ε) is a proper line segment.A similar argument implies that β h (t) is a proper line segment for some t.We can compute all homotopy classes of proper line segments using only a small modification our our earlier algorithm.
In fact, we begin by running the earlier enumerate algorithm using only the vertices of polygons in P as obstacles.
We then discard any line segment that intersects the interior of any obstacle polygon.Lemma 4.5 implies that we can enumerate a superset of of the minimal relative homotopy classes in polynomial time.
We begin by computing the shortest paths between every pair of obstacle vertices [HS99].
Next, for every pair p and q of obstacle vertices, we extend the ray − → pq until it reaches the interior of an obstacle (or infinity), and then compute all O(m + n) intersections between the resulting line segment and the curves A and B. Finally, we concatenate all O(mk 2 ) initial segments, O(k 2 ) shortest paths, and O(nk 2 ) final segments to obtain O(mnk 6 ) pinned paths in O(mnk 6 ) = O(N 8 ) time.
Every pinned relative homotopy class contains one of these paths.
Unlike Proposition 4.3, we do not have an exact characterization of minimal homotopy classes for polygonal obstacles-direct geodesics do not necessarily lie in pinned homotopy classes, and not all pinned homotopy classes are minimal.
However, there are problem instances with Ω(mnk 6 ) pinned homotopy classes; for example, replace each obstacle point in Figure 2 with a small triangle.4.4.
Non-Polygonal Obstacles.
We can further generalize our characterization of minimal homotopy classes to arbitrary non-polygonal obstacles.
If we replace 'obstacle vertex' with 'obstacle boundary point' in the definitions, Lemmas 4.4 and 4.5 are still true in this more general setting, although the proofs are somewhat more involved.
We omit details from this extended abstract.
In this section, we describe an algorithm to compute the Fréchet distance F h (A, B) in some relative homotopy class h.
Our algorithm is a direct adaptation of Alt and Godau's algorithm for computing the classical Fréchet distance between polygonal paths in the plane [AG95].
As in the previous section, for any s ∈ [0, m] and t ∈ [0, n], let σ h (s, t) denote the shortest path from A(s) to B(t) in homotopy class h, and let d h (s, t) = len(σ h (s, t)).
For any ε > 0, letF ε ⊆ [0, m] × [0, n] denote the free space {(s, t) | d h (s, t) ε}.
Our goal is to compute the smallest value of ε such that F ε contains a monotone path from (0, 0) to (m, n); this is precisely the Fréchet distance As input to our problem, we are given a path σ h (s 0 , t 0 ) in relative homotopy class h; based on the results of the previous section, this is either a proper line segment or a direct geodesic.
Without loss of generality, we assume that the endpoints A(s 0 ) and B(t 0 ) are vertices of A and B; otherwise, we insert them as new vertices and reparameterize.
5.1.
Preprocessing for Distance Queries.
The only significant difference between our algorithm and Alt and Godau's is that we require additional preprocessing to compute several critical distances and an auxiliary data structure to answer certain distance queries.
(If there are no obstacles, each critical distance can be computed, and each distance query can be can be answered, in constant time.)
There are three types of critical distances:• endpoint distances d h (0, 0) and d h (m, n), • vertex-edge distances d h (i, [j−1, j]) = min{d h (i, t) | t ∈ [j−1, j]} for all integers i ∈ [0, m]and j ∈ [1, n], and• edge-vertex distances d h ([i−1, i], j) = min{d h (s, j) | s ∈ [i−1, i]} for all integers i ∈ [1, m]and j ∈ [0, n].
Given integers i and j and any real value ε, a horizontal distance query asks for all values of t ∈ [j − 1, j] such that d h (i, t) = ε, and a vertical distance query asks for all values of s ∈ [i − 1, i] such that d h (s, j) = ε.
The convexity of d h within any grid cell implies that any distance query returns at most two values.We first describe how to preprocess a single vertical edge in the parameter grid to answer distance queries; computation of the critical values will be done automatically during the preprocessing.
Obviously a similar result applies to horizontal grid edges.Lemma 5.1.
Suppose we are given a point p and a line segment = xy, parameterized over [0,1], as well as the geodesic σ h (p, x) and its length d h (p, x).
In O(k log k) time, we can build a data structure of size O(k) such that for any ε, all values t ∈ [0, 1] such that d h (p, (t)) = ε can be computed in O(log k) time.
We also report the critical vertex-edge distance d h (p, ), the path σ h (p, y), and its length d h (p, y).
Proof.
We first compute a constrained Delaunay triangulation of the polygons P , the segment , and point p in time O(k log k).
This triangulation includes and the edges of polygons in P as edges.We apply the following observations used in the funnel algorithm for computing shortest homotopic paths [Cha82, LP84, HS94].
The shortest homotopic paths σ h (p, x) and σ h (p, y) may share a common subpath and then split at some vertex v; v is then the apex of two concave chains that form a funnel with base xy.
Each concave chain has complexity at most k and intersects a given edge of the triangulation at most twice.The geodesic from p to x may have complexity greater than O(k), but (as observed above) the concave chain from v to x will have at most O(k) segments.
Our goal is to find a vertex w on σ h (p, x) such that the path from w to x contains v.
In other words, the chain from w to x along σ h (p, x) will be of complexity O(k) and will contain the concave funnel path.To find w, walk along the path from x to p.
If we find a vertex where the chain is not concave, we must have passed v, so we mark the non-concave vertex as w.
If we ever re-cross a segment of the triangulation a second time, we again must have passed the funnel apex v so we can mark the second crossing as w. (We walked along O(k) edges of the chain to find w.) Let π be the portion of σ h (p, x) between p and w, and τ 1 be the portion of σ h (p, x) between w and x.We know that π is contained in σ h (p, y), since w is before the apex of the funnel v. Let τ 2 be the portion of σ h (p, y) between w and y; this can be computed in O(k) time using the funnel algorithm.
Given τ 2 , we can then find the apex of the funnel v in O(k) time.Imagine extending each line segment on the concave chains until it intersects , the line connecting x and y. Between the two concave chains, the combinatorial description of the distance function changes only at points where the extended lines meet .
To answer distance queries, we will record the O(k) intersections of the extended lines with .
For each of the resulting intervals, record the (fixed) length of the geodesic up to the first vertex in the extended line, as well as the equations of the two lines that bracket the interval.
In constant time per interval, we can also compute and store the value t * ∈ [0, 1] such that d h (p, (t * )) is minimized, along with the path σ h (p, (t * )); this gives the desired value d h (p, ).
Now given this data structure, we answer distance queries as follows.
If the distance queried is smaller than d h (p, ), we return the empty set.
If it is equal to d h (p, ), we return (t * ).
If it is larger than d h (p, ), we do two binary searches, one on the intervals between x and (t * ) and the other on the intervals between (t * ) and y.Lemma 5.2.
In O(mnk log k) time, we can compute all critical distances, as well as a data structure of size O(mnk) that can answer any horizontal or vertical distance query in O(log k) time.Proof.
We preprocess each edge of the parameter grid as described in Lemma 5.1.
We start from the vertex (i, j) that is our given input, either a straight line segment or a direct geodesic.
We then walk on the edges of the grid, visiting each edge at least once and at most O(1) times.
During this walk, at each current vertex (i, j), we maintain the shortest homotopic path σ h (i, j) and its length d h (i, j).
Each time we walk along an edge, we apply Lemma 5.1 to preprocess it and to compute the shortest homotopic path corresponding to the target vertex of that edge.
Each step takes O(k log k) time, and there are O(mn) edges, whence the running-time.5.2.
Decision Procedure.
Like Alt and Godau, we first consider the following decision problem: Is F h (A, B) at least some given value ε?
Equivalently, is there a monotone path in the free space F ε from (0, 0) to (m, n)?
Our algorithm to solve this decision problem is identical to Alt and Godau's, except for the O(log k)-factor penalty for distance queries; we briefly sketch it here for completeness.For any integers i and j, let h i,j denote the intersection of the free space F ε with the horizontal edge ([i − 1, i], j), and let v i,j denote the intersection of F ε with the vertical edge (i, [j − 1, j]).
In the first phase of the decision procedure, we compute h i,j and v i,j for all i and j, using one distance query (and O(log k) time) for each edge of the parameter grid.In the second phase of the decision procedure, we propagate in lexicographic order from C 1,1 to C m,n and determine which h i,j and v i,j are reachable via a monotone path from C 1,1 .
Since the free space in each C i,j is convex, we can propagate through each cell in constant time.Our decision algorithm returns true if and only if there is a monotone path that reaches (m, n).
The total running time is O(mn log k).
Distance.
Finally, we describe how to use our decision procedure to compute the optimum value ε * = min{ε | (m, n) ∈ R ε }; this is the Fréchet distance F h (A, B).
We start by computing the critical distances and the distance-query data structure in time O(mnk log k), as described in Lemma 5.2.
We then sort the O(mn) critical distances.
Using the decision procedure, we can compare the optimal distance ε * with any critical distance ε in O(mn log k) time.
By binary search, we can, repeating this step O(log mn) times, compute an interval [ε − , ε + ] that contains ε * but no critical distances.We then apply Megiddo's parametric search technique [Meg83]; see also [vOV04].
Parametric search combines our decision procedure with a 'generic' parallel algorithm whose combinatorial behavior changes at the optimum value ε * .
Alt and Godau observe that one of two events occurs when ε = ε * :• For some integers i, i , j, the bottom endpoint of v i,j and the top endpoint of v i ,j lie on the same horizontal line.
• For some integers i, j, j , the left endpoint of h i,j and the right endpoint of h i,j lie on the same vertical line.
Thus, it suffices to use a 'generic' algorithm that sorts the O(mn) endpoint values of all non-empty segments h i,j and v i,j , where the value of an endpoint (s, j) of h i,j is s, and the value of an endpoint (i, t) of v i,j is t.As suggested by Cole [Col87], we use the parallel sorting algorithm of Ajtai et al.[AKS83] ('the AKS network').
Each parallel step of the sorting algorithm needs to compare O(mn) endpoints.
The graph of an endpoint, considered as a function of ε, is convex, monotone, and made of O(k) pieces, each having a simple closed form (see proof of Lemma 5.1).
It follows that the sign of a comparison between two endpoints may change at O(k) different values of ε that can be computed in O(k) time.
Applying the parametric search paradigm requires the following operations for each parallel step of the sorting algorithm:• Compute the O(mnk) values of ε corresponding to the changes of sign of the O(mn) comparisons.
This can be done in O(mnk) time.
• Apply binary search to these values by median finding, calling the decision procedure to discard half of them at each step of the search.
This takes O(mnk + T d log(mnk)) time, where the first term in this sum stands for the computation of the medians during binary search and T d = O(mn log k) is the complexity of the decision procedure.
We obtain this way an interval for ε where each of the O(mn) comparisons has a determined sign.
• Deduce in O(mn log k) time the sign of each of the O(mn) comparisons in the previously computed interval.
Taking into account the O(log mn) parallel steps of the sorting algorithm, the resulting parametric search algorithm runs in time O(mn log(mn)(k + log k log(mnk)) = O(N 3 log 2 N ).
Lemma 5.3.
Given a proper line segment or a direct geodesic in relative homotopy class h, the Fréchet distance F h (A, B) can be computed in time O(N 3 log 2 N ).5.4.
Summary.
Finally, to compute the homotopic Fréchet distance F(A, B) in the plane minus a set of point obstacles, we compute the Fréchet distance F h (A, B) in each of the O(mnk 2 ) homotopy classes h that contain a line segment.
We conclude:Theorem 5.4.
The homotopic Fréchet distance between two polygonal curves in the plane minus a set of points can be computed in O(N 7 log 2 N ) time.For polygonal obstacles, we obtain a slower algorithm, because we must check a larger number of relative homotopy classes.Theorem 5.5.
The homotopic Fréchet distance between two polygonal curves in the plane minus a set of polygons can be computed in O(N 11 log 2 N ) time.
In this paper, we introduced a natural generalization of the Fréchet distance between curves to more general metric spaces, called the homotopic Fréchet distance.
We gave a polynomial-time algorithm to compute the homotopic Fréchet distance between polygonal curves in the plane with obstacles.Improving the running time of our algorithms is the most immediate outstanding open problem.
For point obstacles, we conjecture that the running time can be improved by at least a factor of N by optimizing leash maps in every minimal homotopy class simultaneously.
Since shortest paths between the same endpoints but belonging to different homotopy classes are related, we expect to (partially) reuse the results of shortest path computations going from one homotopy class to another.
For polygonal obstacles, an exact characterization of minimal homotopy classes would almost certainly lead to a significantly faster algorithm.Cook and Wenk [CW07] describe an algorithm for computing geodesic Fréchet distance between two curves within a simple polygon, generalizing earlier results of Efrat et al. [EGHP + 02].
Their algorithm is faster than ours by roughly a factor of N , in part because they use a randomized strategy in place of parametric search.
Unfortunately, we have not been able to apply their technique to our more general problem, because it seems to require a simply-connected environment, but similar ideas may simplify and improve our algorithm.The weak Fréchet distance is a variant of the ordinary dog-leash distance without the requirement that the endpoints move monotonically along their respective curves-the dog and its owner are allowed to backtrack to keep the leash between them short.
Alt and Godau [AG95] gave a simpler algorithm for computing the weak Fréchet distance, using a graph shortest path algorithm instead of parametric search.
A similarly simple algorithm computes the weak homotopic Fréchet distance in polynomial time.
We omit further details from this extended abstract.It would be interesting to compute optimum leash maps in more general spaces.
In particular, we are interested in computing the homotopic Fréchet distance between two curves on a convex polyhedron, generalizing the algorithm of Maheshwari and Yi for leashless Fréchet distance [MY05].
The vertices of the polyhedron are 'mountains' over which the leash can pass only if it is long enough.
Shortest paths on the surface of a convex polyhedron do not vary continuously as the endpoints move, because of the positive curvature at the vertices, so we cannot consider only geodesic leash maps.Finally, it would also be interesting to consider the homotopic Fréchet distance between higherdimensional manifolds; such problems arise with respect to surfaces in configuration spaces of robot systems.
However, even the ordinary Fréchet distance is difficult to compute in higher dimensions [AB05].
Consider an event time τ .
If V (t) contains the same vertexˆpvertexˆ vertexˆp just before and just after τ , then we can split σ(t) into two parts q(t) from A(t) tô p and q (t) fromˆpfromˆ fromˆp to B(t).
The first segment s(t) of q(t) will pivot around a certain vertexˆpvertexˆ vertexˆp 1 for t < τ and around a possibly different vertexˆpvertexˆ vertexˆp 2 for t > τ .
IfˆpIfˆ Ifˆp 1 = ˆ p 2 , then the length of q(t) can be decomposed into the sum of closed forms has in Lemma A.1, hence it is locally convex at τ .
IfˆpIfˆ Ifˆp 1 = ˆ p 2 , then we can extend the two closed forms of the length q(t) before and after τ and apply Lemma A.2 to see that the length of q(t) is locally convex at τ .
The same can be said of the length of q (t), which implies the local convexity of d at τ .
If V (t) has no vertex in common before and after τ it must be that σ(τ ) is the straight line segment between A(τ ) and B(τ ).
The local convexity of d then follows from Corollary A.3 where h(t) is the length of the line segment between A(t) and B(t).
The convexity of D immediately implies the following corollary, which is the last ingredient necessary for correctness of the algorithm described in Section 5.
(See Section 5 for an explanation of the notation.)
This research was initiated during a visit to INRIA Lorraine in Nancy, made possible by a UIUC/CNRS/INRIA travel grant.
Research by Erin Chambers and Jeff Erickson was also partially supported by NSF grant DMS-0528086; Erin Chambers was additionally supported by an NSF graduate research fellowship.
Research by Shripad Thite was partially supported by the Netherlands Organisation for Scientific Research (NWO) under project number 639.023.301 and by INRIA Lorraine.
We thank Hazel Everett and Sylvain Petitjean for useful discussions and great company, and Kira and Nori for several walks in the woods.
eLet A and B be arbitrary line segments in the universal coverˆEcoverˆ coverˆE of the punctured plane, and let d : [0, 1] → R + be such that d(t) is the length of the shortest path inˆEinˆ inˆE betweenˆAbetweenˆ betweenˆA(t) andˆBandˆ andˆB(t).
The goal of this section is to prove that this distance function is convex.We first give some elementary lemmas concerning convex functions.
Let f : R → R 2 be an arbitrary affine function.
Let ·· denote the Euclidean norm.Lemma A.1.
The function t → f (t) is convex.Proof.
For any s, t ∈ R and for any α ∈ [0, 1], we haveFrom the triangle inequality and the homogeneity of the norm, we getwhich proves convexity.Lemma A.2.
Let f and g be two real convex functions such that f (t) g(t) for all t ∈ R, and let τ ∈ R be such that f (τ ) = g(τ ).
Then the two functions u(t) and v(t) defined below are convex:Proof.
We prove the convexity of u; the convexity of v can be proved similarly.
We need to show:, and the inequality follows from the convexity of g and because g(t) u(t).
If t < τ Equation 1 becomesy − x Since g is convex, it is well-known that ρ g is an increasing function of each variable when the other one is fixed.
Let t = s + β(τ − s).
By convexity of f , we havewhence we concludeThe last inequality is implied by α < β.
Since β(τ − s) = α(t − s) we can also writeSubstituting Equation 3 in Equation 2, we getwhich is the required inequality after expanding the right-hand side.Corollary A.3.
Let f, g, h be three real convex functions such that f (t) ≥ h(t) and g(t) ≥ h(t) for all t ∈ R, and let τ ∈ R be such that f (τ ) = g(τ ) = h(τ ).
Then the function w defined below is convex:Proof.
DefineThen, we have w(t) = max{u(t), v(t)} and the convexity of w follows from the convexity of u and v by Lemma A.2.
A function real f is locally convex if every t ∈ R has an open neighborhood N (t) such that the restriction of f to N (t) is convex.Lemma A.4.
Every locally convex function is convex.
Let A and B be arbitrary line segments in the universal coverˆEcoverˆ coverˆE of the punctured plane, and let d : [0, 1] → R + be such that d(t) is the length of the shortest path inˆEinˆ inˆE betweenˆAbetweenˆ betweenˆA(t) andˆBandˆ andˆB(t).
The goal of this section is to prove that this distance function is convex.We first give some elementary lemmas concerning convex functions.
Let f : R → R 2 be an arbitrary affine function.
Let ·· denote the Euclidean norm.Lemma A.1.
The function t → f (t) is convex.Proof.
For any s, t ∈ R and for any α ∈ [0, 1], we haveFrom the triangle inequality and the homogeneity of the norm, we getwhich proves convexity.Lemma A.2.
Let f and g be two real convex functions such that f (t) g(t) for all t ∈ R, and let τ ∈ R be such that f (τ ) = g(τ ).
Then the two functions u(t) and v(t) defined below are convex:Proof.
We prove the convexity of u; the convexity of v can be proved similarly.
We need to show:, and the inequality follows from the convexity of g and because g(t) u(t).
If t < τ Equation 1 becomesy − x Since g is convex, it is well-known that ρ g is an increasing function of each variable when the other one is fixed.
Let t = s + β(τ − s).
By convexity of f , we havewhence we concludeThe last inequality is implied by α < β.
Since β(τ − s) = α(t − s) we can also writeSubstituting Equation 3 in Equation 2, we getwhich is the required inequality after expanding the right-hand side.Corollary A.3.
Let f, g, h be three real convex functions such that f (t) ≥ h(t) and g(t) ≥ h(t) for all t ∈ R, and let τ ∈ R be such that f (τ ) = g(τ ) = h(τ ).
Then the function w defined below is convex:Proof.
DefineThen, we have w(t) = max{u(t), v(t)} and the convexity of w follows from the convexity of u and v by Lemma A.2.
A function real f is locally convex if every t ∈ R has an open neighborhood N (t) such that the restriction of f to N (t) is convex.Lemma A.4.
Every locally convex function is convex.
