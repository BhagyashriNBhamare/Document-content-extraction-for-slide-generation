The Bernays-Schönfinkel-Ramsey (BSR) class of formulas is the class of formulas that, when written in prenex normal form, have an ∃ * ∀ * quantifier prefix and do not contain any function symbols.
This class is decidable.
We show here that BSR theories can furthermore be combined with another disjoint decidable theory, so that we obtain a decision procedure for quantifier-free formulas in the combination of the BSR theory and another decidable theory.
The classical Nelson-Oppen combination scheme requires theories to be stably-infinite, ensuring that, if a model is found for both theories in the combination, models agree on cardinalities and a global model can be built.
We show that combinations with BSR theories can be much more permissive, even though BSR theories are not always stably-infinite.
We state that it is possible to describe exactly all the (finite or infinite) cardinalities of the models of a given BSR theory.
For the other theory, it is thus only required to be able to decide if there exists a model of a given cardinality.
With this result, it is notably possible to use some set operators, operators on relations, orders-any operator that can be expressed by a set of BSR formulas-together with the usual objects of SMT solvers, notably integers, reals, uninterpreted symbols, enumerated types.
Many techniques for the formal verification of information systems generate verification conditions, i.e. formulas encapsulating parts of the reasoning about the systems.
The deduction tools validating these verification conditions should accept expressive languages, and should require a minimal amount of human interaction.
Combination of theories is the method behind SMT-solvers (SMT for satisfiability modulo theories) to build decision procedures for very expressive languages, containing interpreted symbols from several decidable theories.
Usually the theory embedded in the solvers is a static combination of linear arithmetic, uninterpreted symbols, list operators, bit-vectors,. . . For instance, it is possible to combine a decision procedure for integer linear arithmetic and a decision procedure for the empty theory (i.e. a decision procedure for equality and uninterpreted symbols) into a decision procedure to study formulas likex ≤ y ∧ y ≤ x + f (x) ∧ P (h(x) − h(y)) ∧ ¬P (0) ∧ f (x) = 0.
The Bernays-Schönfinkel-Ramsey (BSR) class is a wide decidable class of formulas; any set of function-free universal formulas is indeed decidable.
We consider here this class of formulas as a component in a combination of theories.The classical Nelson-Oppen combination scheme [11,16] requires every theory in the combination to be stably-infinite, i.e. every quantifier-free formula satisfiable in the theory should have a model with infinite cardinality.
BSR theories are not, in general, stably-infinite: as an example, consider the BSR theory ∀x∀y(x = y) that only accepts models on a domain with one element.
The classical combination result is not suitable in our case.It has already been mentioned [17] that a BSR theory can be combined with a theory T provided -if a set of ground literals L is T -satisfiable, then the minimal cardinality of T -models for L can be computed; -T only has finite models.We show here that this last strong requirement is not necessary; BSR theories can in fact be combined with any other decidable theory T (with or without infinite models, stably infinite or not), provided that, if a set L of ground literals is satisfiable in T , it is possible to determine if there exists a T -model of a given finite or infinite cardinality.Motivations: the incentive for the procedure we present in Section 6 is double.
First, the requirement we impose on the theory T is fulfilled by many decidable theories; using results in this paper it is possible to extend many decidable quantifier-languages (for instance, mixing uninterpreted symbols with linear arithmetic on reals and integers) with new interpreted predicates defined by a BSR theory.
The BSR theory is not required to be stably-infinite.
The other theory is not required to have only finite models.The second motivation for such a general combination of theories is that the T -satisfiability of quantifier-free formulas containing operators on sets, relations,. . . can be reduced to studying the satisfiability of sets of literals in the combinations of T and a BSR theory (see Sections 3 and 4).
In Section 5, we show that there is a straightforward implementation of this method when T is the empty theory.
Good results have been obtained with our prototype on translations of some problems from the SET domain of the TPTP library.
When T is not the empty theory, we can fall back to the general decision procedure in Section 6.
This decision procedure relies on the computation of model cardinalities of BSR theories.
We show in Section 7 that it is possible to know exactly the cardinalities of BSR theories, and, in particular, we prove that it is possible to compute if a BSR theory has an infinite model or not.For convenience, the results in this paper are presented in an unsorted framework, although most SMT-solvers work on a many-sorted logic (see for instance [5]).
The results can easily be transferred to a many-sorted framework, at an expense of heavier notations.A first-order language is a tuple L = V, F, P such that V is a enumerable set of variables, F and P are sets of functions and predicates (we refer to "symbols" for the union of F and P).
Every function and predicate symbol is assigned an arity.
Nullary predicates are propositions, and nullary functions are constants.
The set of terms on language L is defined in the usual way.
A ground term is a term without variables.
An atomic formula is either t = t where t and t are terms, or a predicate symbol applied to the right number of terms.
Formulas are built from atomic formulas, connectors (¬, ∧, ∨, ⇒, ≡), and quantifiers (∀, ∃).
A formula with no free variable is closed.
A theory is a set of closed formulas.
Two theories are disjoint if no predicate (except the equality) or function symbol is interpreted in both theories.An interpretation I for a first-order language assigns a set of elements D to the domain, a total function I[f ] on D with appropriate arity to every function symbol f , a predicate I[p] on D with appropriate arity to every predicate symbol p, and an element I[x] to every variable x. By extension, an interpretation gives a value in D to every term, and a truth value to every formula.
A model for a formula (or a theory) is an interpretation that makes the formula (resp.
every formula in the theory) true.
A formula is satisfiable if it has a model.
It is unsatisfiable otherwise.
A formula G is T -satisfiable if it satisfiable in the theoryT , that is, if T ∪ {G} is satisfiable.
A T -model of G is a model of T ∪ {G}.
A formula G is T -unsatisfiable if it has no T -model.The cardinality of an interpretation (or model) is the cardinality of the domain of this interpretation.
The restriction of a predicate p on domain D to domain D ⊆ D is the predicate p with domain D such that p and p have the same truth value for all arguments in D .
A conjunctive (disjunctive) normal form is a conjunction of clauses, i.e. a conjunction of disjunctions of literals, (resp.
a disjunction of conjunctions of literals).
It is always possible to transform a quantifier-free formula into a logically equivalent conjunctive (disjunctive) normal form.
A formula is universal if it is of the form ∀x 1 . . . ∀x n .
ϕ where ϕ is quantifier-free.
A Skolem formula is a formula where all universal quantifiers appear with a positive polarity only, and all existential quantifiers appear with a negative polarity only.
It is always possible to transform a given formula into an equisatisfiable Skolem formula, using Skolemization.
We refer to [3] for Skolemization and conjunctive (disjunctive) normal form transformations.
Objects such as sets, relations, or arrays of bits can be viewed as predicates.
For instance, sets can be unambiguously represented by their characteristic functionEquality ≈ λp q. ∀x. p(x) ≡ q(x) membership ∈ λx p. p(x) ∅ ∅ λx.
⊥ Ω Ω λx.
Enumerate {a 1 , . . . a n } λx.
(x = a 1 ∨ . . . x = a n ) Intersection ∩ λp q. λx.
p(x) ∧ q(x) Union ∪ λp q. λx.
p(x) ∨ q(x) Difference \ λp q. λx.
p(x) ∧ ¬q(x) Subset ⊆ λp q. ∀x. p(x) ⇒ q(x) A. Sets Equality ≈ λp q. ∀x y .
p(x, y) ≡ q(x, y) Transitive Trans λp.
∀x y z .
[p(x, y) ∧ p(y, z)] ⇒ p(x, z) Symmetric Sym λp.
∀x y .
p(x, y) ≡ p(y, x) Antisym.
ASym λp.
∀x y .
¬p(x, y) ∨ ¬p(y, x) ∨ x = y Total Tot λp.
∀x y .
p(x, y) ∨ p(y, x) Reflexive Refl λp.
∀x p(x, x) Irreflexive ARefl λp.
∀x ¬p(x, x) Identity Id λx y. x = y Product × λp q. λx y. p(x) ∧ q(y) B. Relations Equality ≈ λp q. ∀x. p(x) ≡ q(x) Reading read λp i. p(i) Writing write λp i x. λj.
(j = i ⇒ x) ∧ (j = i ⇒ p(j))C. One-dimensional arrays of bits and operators on sets can be viewed as operators on predicates.
In Figure 1, we give a few examples of set-like operators, operators on relations, operators to encode read and write operations on arrays of bits.
In those examples, we assume p and q are predicates of appropriate arity and x, y, z are (first-order) variables.
Notice that set-like operators can also be defined for relations; for instance, the intersection of relations is defined as λp q. λx, y. p(x, y) ∧ q(x, y).
We consider formulas that are written in a first-order language augmented with the operators -defined as λ-terms given in Figure 1 -applied to the right number of objects of appropriate type.
Example 1.
if A, B, C are unary predicates used to represent sets, a formula may contain A ≈ B ∩ C which becomes, after substitution of ∩ and ≈ by their definition[λp q. ∀x. p(x) ≡ q(x)] (A, (λp q. λx.
p(x) ∧ q(x))(B, C)) .
After β-reduction, this becomes∀x.A(x) ≡ [B(x) ∧ C(x)] .
(1)In general, the formulas obtained after elimination of operators mentioned in this section are first-order, but may contain quantifiers.
Those quantifiers come directly from the λ-terms; for instance the quantifier in (1) comes from the definition of ≈.
It is easily shown however, that, if the original formula (with operators on sets, relations. . . ) does not contain quantifiers, the resulting first-order formula is a Boolean combination of (atoms and) formulas of the form ∀x 1 . . . x n ϕ where ϕ is quantifier-free.
Furthermore, quantified variables are used only as arguments of predicates, that is, no function has a quantified variable as an argument.
The formulas obtained in the previous section are Boolean combinations of quantified formulas.
In this section we describe the process to reduce the Tsatisfiability problem of these quantified formulas, to the satisfiability problem for sets of literals in the union of two theories: T and a disjoint BernaysSchönfinkel-Ramsey theory L ∀ .
For the rest of the paper, we only impose one restriction on the decidable theory T : if a set of literals is T -satisfiable, it is possible to compute if there exists a model of a given cardinality.
We also assume that all predicates occurring in operators from Figure 1 are uninterpreted for T .
The form of the formulas issued in the previous section is such that a structural Skolemization (see for instance [3]) will never introduce Skolem functions, but only Skolem constants.
We assume that the formula is Skolemized, using such a structural Skolemization.
The obtained formula is a Boolean combination of universal formulas (and atoms), the universal formulas appearing with a positive polarity only.The usual technique used in SMT-solvers to check the satisfiability of a quantifier-free formula in a theory T is a (loose or tight) cooperation of a Boolean satisfiability checker, and a procedure to check the satisfiability of literals within T .
This cooperation splits the problem into two parts: first, pure Boolean model searches, and second, T -satisfiability checks for the corresponding conjunctive sets of literals.
For simplicity, we consider here that the split is realized by converting the formula to disjunctive normal form.
The formula is satisfiable if and only if at least one conjunction of literals in the disjunctive normal form is satisfiable.
Now assume Ψ is the obtained formula after Skolemization.
The formula is transformed into disjunctive normal form, the quantified parts being left unchanged.
Since the formula has been Skolemized, the remaining (universal) quantifiers all appear with a positive polarity.
Each conjunction of literals in the disjunctive normal form only contains:-first-order literals; -formulas of the form ∀x 1 . . . x n ϕ, where ϕ is a quantifier-free formula, such that no x 1 . . . x n is used within a function;Example 2.
Suppose we want to study the satisfiability of the formula:a = b ∧ f (a) ∈ A ∧ f (b) / ∈ C ∧ [f (b) / ∈ A ∨ A ∪ B ≈ C ∩ D] .
Substituting operators ∈, ∪, ∩, ≈ by their definition and applying β-reduction, one obtainsa = b ∧ A(f (a)) ∧ ¬C(f (b)) ∧ ¬A(f (b)) ∨ ∀x. [A(x) ∨ B(x)] ≡ [C(x) ∧ D(x)]Structural Skolemization leaves this last formula unchanged, since the sole universal quantifier appears with a positive polarity.
The corresponding disjunctive normal form contains the two conjunctive sets of literals:{a = b, A(f (a)), ¬C(f (b)), ¬A(f (b))} (2) {a = b, A(f (a)), ¬C(f (b)), ∀x. [A(x) ∨ B(x)] ≡ [C(x) ∧ D(x)]} (3)The first set can easily be identified as being unsatisfiable.
The second set only contains first-order (quantifier-free) literals and formulas of the form ∀x 1 . . . x n ϕ, where ϕ is a quantifier-free formula, such that no x 1 . . . x n is used within a function.In order to study the satisfiability of a set of literals in the combination of disjoint theories, one usually first computes a separation of the set of formulas along the languages in the disjoint theories.
1 Each part of the separation contains only the symbols from one theory in the combination; the only shared symbols are equality and variables.
We apply the same technique to separate predicates that appear in quantified formulas from the rest of the symbols.
For instance, the set (3) is logically equivalent (in whatever theory) to the union of the setsL g = {a = b, y = f (a), z = f (b)}, L ∀ = {A(y), ¬C(z), ∀x. [A(x) ∨ B(x)] ≡ [C(x) ∧ D(x)]},where y, z are introduced variables.
In general, a separation can be built using the following method.
Algorithm: Initially, L is a set containing literals and universal formulas, and no quantified variable as argument of a function.
The separation algorithm builds two sets L g (g for ground), and L ∀ (for quantified formulas and related predicates):-for every uninterpreted predicate p that occurs in a quantified formula in L, for every occurrence p(t 1 , . . . t n ) of this predicate (in a quantified formula or not), for every subterm t i that is not a variable (shared or not), introduce a new shared variable x, add x = t i to L g , and replace t i by x in L. Handle similarly all occurrences of the form t 1 = t 2 in a quantified formula in L.
This is possible since no quantified variable is used as an argument of a function;-for every uninterpreted predicate p that belongs to a quantified formula in L, add every literalp(t 1 , . . . t n ) (or ¬p(t 1 , . . . t n )) from L to L ∀ .
The previous two steps ensure that here, t 1 , . . . t n are variables; -add every quantified formula from L to L ∀ .
Those formulas are universal formulas, and the previous steps ensures that they are function-free.
-finally, every literal in L that does not belong to L ∀ is added to L g .
-the computed L ∀ is a set of function-free universal formulas, i.e. a BSR theory; -the initial L is T -satisfiable if and only if L g ∪ L ∀ is also T -satisfiable; -the shared terms in L g and L ∀ are all variables.To summarize, studying the T -satisfiability of a given formula with operators as described in Figure 1 can be reduced to studying the T -satisfiability of sets L g ∪ L ∀ .
Another point of view is to study the satisfiability of the sets of literals L g , in the combination of the disjoint theories T and L ∀ .
In the following sections, we show that this problem is decidable, for any decidable theory T , as long as it is possible to determine if L g accepts a T -model of a given cardinality.
The method in the previous section leads to checking the satisfiability of a set of literals L g in the union of T and a BSR theory L ∀ (L g and L ∀ share only variables).
We assume in this section that T is the empty theory.
That is, every function and predicate in L g is left uninterpreted.The classical Nelson-Oppen combination scheme cannot be used, since the theory L ∀ is not necessarily stably-infinite, that is, it may be satisfiable only in finite models.
For instance, if the original formula uses the "Enumerate" operator, the resulting sets of formulas may contain a formula of the form∀x. x = a ∨ x = b ∨ x = cwhich would make L ∀ non stably-infinite; the formula accepts models of cardinality at most three.
However we known that the empty theory can be combined with any theory, not only stably-infinite ones [7,17].
We now recall the combination algorithm.Given a partition P of a set of terms, an arrangement induced by P is the set of all equalities between any two terms in the same class of P, and all disequalities between any two terms in different classes in P. For instance, the arrangement induced by {{x 1 , x 2 }, {x 3 }} is {x 1 = x 2 , x 1 = x 3 , x 2 = x 3 }.
Assume we have to study the satisfiability of the separation L 1 ∪L 2 in the combination of the stably-infinite disjoint theories T 1 and T 2 , where L i (i ∈ {1, 2}) only contains symbols from T i and variables.
The classical result for combining stably-infinite disjoint theories states that L 1 ∪ L 2 is satisfiable in the combination of T 1 and T 2 if and only if there exists an arrangement A on the set of shared variables between L 1 and L 2 , such that L i ∪ A is T i -satisfiable, for i = 1 and i = 2.
The procedure terminates, since the set of shared variables is finite, as well as the set of arrangements.
In the case where T 1 is the empty theory, and T 2 is any theory (not necessarily stably-infinite), the result still holds [7], but the arrangement has to be considered on a larger set of terms; the arrangement has to be considered on all terms and variables in L 1 ∪ L 2 .
2 Applied to our present case, L g is satisfiable in the combination of the empty theory and L ∀ , if and only if there exists an arrangement A of all ground terms and free variables in L g such that A ∪ L g and A ∪ L ∀ are both satisfiable.Example 3.
As an application, consider again the previous example:{a = b, A(f (a)), ¬C(f (b)), ∀x. [A(x) ∨ B(x)] ≡ [C(x) ∧ D(x)]}one has to study the satisfiability of the unions of the setsL g = {a = b, y = f (a), z = f (b)}, L ∀ = {A(y), ¬C(z), ∀x. [A(x) ∨ B(x)] ≡ [C(x) ∧ D(x)]},which is equivalent to study the satisfiability of L g in the combination of the empty theory and L ∀ .
The combination framework then ensures that L g ∪ L ∀ is satisfiable if and only if there exists an arrangement A of {a, y, z} (the other terms being necessarily equal to one in this set) such that A ∪ L g and A ∪ L ∀ are satisfiable.
There are well known decision procedures for both satisfiability problems.
The set of formulas A ∪ L ∀ is also a BSR theory.
It is satisfiable if and only if A ∪ L inst is, where L inst is a set of well-chosen instances of formulas in L ∀ .
This leads to the following result: Theorem 1.
Given a theory T ,1 , . . . t n in L g ∪ L ∀ , L inst contains the formula ϕ(t 1 , . . . t n ).
Example 4.
Applying this result on the previous example:L g = {a = b, y = f (a), z = f (b)}, L ∀ = {A(y), ¬C(z), ∀x. [A(x) ∨ B(x)] ≡ [C(x) ∧ D(x)]},gives the formula{a = b, y = f (a), z = f (b), A(y), ¬C(z), ϕ(y), ϕ(z), ϕ(a)} where ϕ(x) = [A(x) ∨ B(x)] ≡ [C(x) ∧ D(x)].
Deciding formulas that only contain operators like those in Figure 1, can be done easily using the capabilities implemented in any SMT-solver (for instance [1,12]): the ability to deal with a Boolean combination of terms that only contain uninterpreted symbols.
This language being handled very efficiently by modern solvers, the tools do cope well even if the number of generated instances is large.
A na¨ıvena¨ıve implementation can be realized by doing β-reduction, Skolemization, and instantiation as a preprocess, feeding a Boolean combination of terms with only uninterpreted symbols to the SMT-solver.
A working prototype has been implemented.
We ran this prototype on the translation of problems SET008+3p, SET064+1p, SET143+3p, SET171+3p, SET580+3p, SET601+3p SET606+3p, SET623+3p, and SET609+3p from the TPTP library [15].
Unsurprisingly, these are all solved in a few milliseconds.
We should however mention that it is not really relevant to compare these performances with ones of the FOL provers, since the set theories in which the problems are checked for satisfiability are not the same for both approaches.
For instance, our approach implicitly assume sets cannot contain other sets, whereas no such assumption is made in the TPTP problems.
In the previous sections we considered formulas that contain uninterpreted symbols, as well as other symbols such as set and relation operators.
We show in this section that there is a decision procedure for formulas that contain such set and relation operators and interpreted symbols from an arbitrary decidable theory T , provided (1) there is a decision procedure for the arbitrary theory that is able to state if there is a model of a given cardinality (2) set and relation operators are applied on uninterpreted symbols only.
We have to study the satisfiability of the set of ground literals L g in the combination of the disjoint theories T and L ∀ , where L g only contains symbols from T and variables.
This theorem is an adaptation of the general result to combine non-stably-infinite theories (see for instance [17]).
For theoretic discussions, the process of combining stably-infinite theories usually implies guessing an arrangement on a set of variables.
In practice, it is equivalent, and more efficient that decision procedures exchange disjunctions of equalities (see for instance [6] for a presentation of this equivalence).
We can imagine a similar treatment here for cardinalities.
The decision procedures could negotiate the size of the models by exchanging constraints.
For simplicity, a na¨ıvena¨ıve decision procedure for the combination can be:-build L g and L ∀ according to the method presented in section 4.
Both sets only share variables, and no symbol in L ∀ is interpreted by T ; -guess an arrangement A on shared variables.
Notice there is only a finite number of such arrangements: this guess can thus be replaced by a terminating loop; -if the code on Fig. 2 returns "succeed" for A, the L g ∪ L ∀ is T -satisfiable; -If every arrangement returns "fail" for the code on Fig. 2,L g ∪ L ∀ is T - unsatisfiable.The procedure concludes to T -satisfiability if and only if a model is found that meets the conditions of Theorem 2.
It remains to check that that every step of the code on Fig. 2 is tractable.
The test on line 1 is decidable since the Tsatisfiability problem for sets of literals is decidable, and since A ∪ L ∀ is a BSR theory (decidable fragment).
The results in the following section state that it is possible to determine exactly what cardinalities are accepted for models of any BSR theory, and in particular for A ∪ L ∀ : the tests on lines 3 and 7 are decidable, and it is possible to enumerate (within finite time) the cardinalities in line 4.
The tests on lines 5, 8 and 13 are possible thanks to the condition on theory T .
For the test on line 15, checking if A ∪ L g has a T -model with cardinality greater or equal to k is simply reduced to checking the T -satisfiability of A ∪ L g ∪ 1≤i≤k i<j≤k {a i = a j } where a 1 , . . . a k are fresh constants.
The previous section states that to combine a BSR theory with another theory is mainly a matter of getting the cardinalities of the models of the BSR theory.We give now a necessary and sufficient criteria to determine if there is an infinite model for such a theory, and if not, what are the finite cardinalities for which there exists a model.
For simplicity, we assume here that we have a BSR theory, with no free variables, but only constants.
If this requirement is not met, one can transform the problem into an equivalent one by replacing free variables with fresh constants.1: if A ∪ L g is T -unsatisfiable or A ∪ L ∀ is unsatisfiable then 2:return fail 3: if A ∪ L ∀ only has finite models then 4:for each cardinality j of models of A ∪ L ∀ do 5:if A ∪ L g has a T -model with cardinality j then 6: return succeed 7: if A ∪ L ∀ has an infinite model then 8:if A ∪ Lg has an infinite T -model then 9:return succeed 10: else 11:k := the number of free variables and constants in A ∪ L ∀ 12:for each j < k do 13:if A ∪ Lg has a T -model with cardinality j and A ∪ L ∀ has a model with cardinality j then 14:return succeed 15:if A ∪ L g has a T -model with cardinality ≥ k then 16:return succeed 17: return fail Given a BSR theory T using k constants, we first recall the simple result that states that, if T has a model of (finite or infinite) cardinality i greater than k, then it has a model for every cardinality j such that k ≤ j ≤ i.
We then show that there is a number k (> k), computable from T , such that, if there is a model of cardinality greater or equal to k , then there is an infinite model.
Altogether, this implies that T either has a model for every cardinality greater or equal to k (example in Figure 3), or there exists a j smaller than the known, finite, number k , such that T has a model of every cardinality between k and j, and no model of cardinality greater than j (example in Figure 3).
Alternatively, one can also decide if a theory with n distinct quantified variables has an infinite model by checking if it has a n-repetitive model (see subsection 7.2).
Fig. 3.
Theories with infinite (above) and finite cardinalities.
A dot means there is a model with given cardinality.0 k k 0 k k j Intuitively, the following theorem states that, given a model for a BSR theory, the elements in the domain that are not assigned to ground terms (i.e. the constants) can be eliminated, keeping it a model:Theorem 3.
Given a model M for a BSR theory T with domain D, then M such that -the domain is a non-empty set D ⊆ D, with M[a] ∈ D for every constant a in T ; -for every predicate p, M [p] is the restriction of M[p] to the domain D ;is also a model for T Proof.
Since M is a model for T , for each closed formula ∀x 1 . . . x n .
ϕ in T (where ϕ is function and quantifier-free), and for alld 1 ,. . . d n ∈ D ⊆ D, M x 1 /d 1 ,...xn/dn is a model for ϕ.
This also means that, for all d 1 ,. . . d n ∈ D , M x 1 /d 1 ,...xn/dn is a model for ϕ, and finally that M is a model for ∀x 1 . . . x n .
ϕ.
T -model with any cardinality i with k ≤ i ≤ j.
If there is an infinite T -model, there is a T -model with any cardinality i with k ≤ i.
We known that a BSR theory either has models for every finite and infinite cardinality greater than k, or it only has models of finite cardinalities all smaller than a number k .
What is missing is a way to decide if one theory has an infinite model or not.
If it has no infinite model, the number k can be computed (na¨ıvelyna¨ıvely) by checking all finite models by increasing cardinalities until k is found.The following definition expresses some symmetry properties of models.
We later show that the existence of an infinite model is equivalent to the existence of a finite model having such symmetry properties.Definition 1.
Let M be an interpretation on domain D for a BSR theory T .
Let A = {M[a] | a is a constant in T } and B = D \ A.M is n-repetitive if |B| ≥ n and if there exists a total order on elements in B such that -for every m ≤ n; -for every two strictly increasing (with respect to ) series e 1 , . . . e m and e 1 , . . . e m of elements in B; -for every k-ary predicate symbol p used in T ;-for every d 1 , . . . d k ∈ A ∪ {e 1 , . . . e m }; M[p](d 1 , . . . d k ) = M[p](d 1 , . . . d k ), with d i = e j if d i = e j for some j, d i = d i otherwise.By extension, a theory is n-repetitive if it has a n-repetitive model.Observe that, thanks to Theorem 3, a theory is n-repetitive if it has a nrepetitive model M such that |B| = n, in the previous definition.Example 5.
Assume T is a theory with constants a 1 ,. . . a n 0 , unary predicatesp 1 1 ,. . . p 1 n 1 , binary predicates p 2 1 ,. . . p 2 n 2.
T is 1-repetitive, if and only if T ∪ R 1 (b) is satisfiable, withR 1 (b) = def {b = a 1 , . . . b = a n 0 }.
In other words, a theory T is 1-repetitive if it accepts a model with an element in the domain that is not assigned to a constant used in T .
T is 2-repetitive, if and only ifT ∪ i∈{0,1} R 1 (b i ) ∪ R 2 (b 0 , b 1 )is satisfiable, withR 2 (b 0 , b 1 ) = def {b 0 = b 1 } ∪ {p 1 i (b 0 ) ≡ p 1 i (b 1 ) | i ∈ [1.
.
n 1 ]} ∪ {p 2 i (b 0 , b 0 ) ≡ p 2 i (b 1 , b 1 ) | i ∈ [1.
.
n 2 ]} ∪ {p 2 i (a j , b 0 ) ≡ p 2 i (a j , b 1 ) | i ∈ [1.
.
n 2 ], j ∈ [1.
.
n 0 ]} ∪ {p 2 i (b 0 , a j ) ≡ p 2 i (b 1 , a j ) | i ∈ [1.
.
n 2 ], j ∈ [1.
.
n 0 ]} T is 3-repetitive, if and only if T ∪ i∈{0,1,2} R 1 (b i ) ∪ i < j i, j ∈ {0, 1, 2} R 2 (b i , b j ) ∪ R 3 (b 0 , b 1 , b 2 )is satisfiable, withR 3 (b 0 , b 1 , b 2 ) = def {p 2 i (b 0 , b 1 ) ≡ p 2 i (b 1 , b 2 ) ≡ p 2 i (b 0 , b 2 ) | i ∈ [1.
.
n 2 ]} ∪ {p 2 i (b 1 , b 0 ) ≡ p 2 i (b 2 , b 1 ) ≡ p 2 i (b 2 , b 0 ) | i ∈ [1.
.
n 2 ]} Theorem 4.
If a BSR theory T with n distinct quantified variables has a nrepetitive model with cardinality k, then it has (n-repetitive) models with any (finite or infinite) cardinality k ≥ k.Proof.
Assume M is a n-repetitive T -model of cardinality k on domain D. Let A be {M[a] | a is a constant in T }, and B = D \ A (|B| = k − |A| ≥ n).
Assume also that is the total order on B mentioned in Definition 1.
Choose a strictly increasing (with respect to ) series of n distinct elements e 1 , . . . e n ∈ B.Let E be such that E ∩ D = ∅, and |D ∪ E| = k .
We define an interpretation M on domain D = D ∪ E.
The total order on B is extended to B ∪ E.
We then require that M [a] = M[a] for every constant a in T , and that, for every m-ary predicate p in T and everyd 1 , . . . d m ∈ D : -if |{d 1 , . . . d m } \ A| > n, M [p(d 1 , . . . d m )] does not matter; -if {d 1 , . . . d m } ⊆ D, M [p(d 1 , . . . d m )] = M[p(d 1 , . . . d m )]; -otherwise, let e 1 , .
.
.
e n be a strictly increasing series including all elements in{d 1 , . . . d m } \ A. M [p](d 1 , . . . d k ) = M[p](d 1 , . . . d k ), with d i = e j if d i = e j for some j, d i = d i otherwise.
By construction, M is n-repetitive.
Every formula in x 1 /d 1 ,...x m /d m [ϕ(x 1 , . . . x m )] is M x 1 /d 1 ,...x m /d m [ϕ(x 1 , . . . x m )] (i.e. true), if {d 1 , . . . d m } ⊆ D. Otherwise, assume e 1 , . . . e n is a strictly increasing series including all elements in {d 1 , . . . d m } \ A.
Since the model M is n-repetitive, then M x 1 /d 1 ,...x m /d m [ϕ(x 1 , . . . x m )] is equal to M x 1 /d 1 ,...x m /d m [ϕ(x 1 , . . . x m )] (i.e. true) where d i = e j if d i = e j for some j, d i = d i otherwise.
Finally, M is a model of ∀x 1 . . . x n .
ϕ(x 1 , . . . x m ).
Theorem 5.
If a BSR theory T has a model with a cardinality greater than a number k computable from the theory, then it has a n-repetitive model ondomain D = A ∪ B, where A = {M[a] | a is a constant in T }, A ∩ B = ∅ and |B| = n.Proof.
Assume T has a finite model M on domain D .
We define the setsA = {M [a] | a is a constant in T } and B = D \ A. Choose an order on B .
We now compute the size of B so that there exists a n-repetitive model.
A suitable k can then be computed from |B |.
Given two ordered (with respect to ) series e 1 , . . . e m and e 1 , . . . e m of elements in B , we will say that the configurations for e 1 , . . . e m and e 1 , . . . e m are the same if for every k-ary predicate p, and for every Understanding colors as being configurations, one can use Theorem 6 (in Appendix A) to state that, if |B | > f (n, N, C), then there exists a model of cardinality |A| + N for T with the same configuration for any m ordered distinct elements.
Recursively applying this procedure for every m ∈ [1.
.
n], it is possible to compute the cardinality k of the original model so that there exists a nrepetitive model with the suitable cardinality.d 1 , . . . d k ∈ A ∪ {e 1 , . . . e m }, M [p](d 1 , . . . d k ) = M [p](d 1 , . . . d k ), with d i = e j if d i = e j for some j, d i = d iFrom both previous theorems:Corollary 2.
Given a BSR theory T using n distinct quantified variables.
T has an infinite model if and only if it has a n-repetitive model.Checking if a BSR theory T has an n-repetitive model is reduced to checking the satisfiability of another BSR theory T , basically, T augmented with some quantifier-free formulas.
For formulas containing operators discussed in Section 3, we have n ≤ 3, and predicates have an arity of at most 2: T is given in Example 5.
If T does not have an infinite model, then there is a maximum cardinality j for its models.
The theory accepts a model for every cardinality between the number k of constants in T and j.
This number j is bounded by a computable number k .
Unluckily, we currently lack an efficient (if there exists) way to compute this j.
A na¨ıvena¨ıve process to determine this number is to try every cardinality greater than k; the process will eventually terminate.
Finally notice that this inefficient process is not necessary when combining a BSR theory with theories that only have infinite models.
In Section 3, we noticed that the use of some operators to encode sets, properties on relation,. . . would imply to have to verify the T -satisfiability of FOL formulas with quantifiers.
It was also shown that this satisfiability problem can be reduced to the satisfiability problem of literals in the combination of the theory T and another decidable theory, precisely a set of Bernays-Schönfinkel-Ramsey formulas.Combining a BSR theory with the empty theory is possible, and this is the basis to build a decision procedure for formulas that contain uninterpreted functions and predicates, some operators on sets, relations,. . . A prototype has been built, and the first results are promising.
When formulas containing operators from Section 3 have to be studied in some decidable (non-empty) theory T , the combination process with the BSR theory is more complicated.
The method presented in Section 6 is not in itself a practical procedure: its complexity prevents a direct application.
However we believe that it can be the basis for a useful tool, with implementation-oriented improvements and proper heuristics.We mainly target the B [2] and TLA+ [9] formal methods.
Those language heavily rely on some set theories, and we believe that the results in this paper can help automating the proof of some parts of the verification conditions, which often mix arithmetic symbols, uninterpreted functions, and set operators.
Verification conditions generated within those formal methods are usually small, within reach of a decision procedure even if it is inefficient.
For verification conditions that are not fully within the language of the decision procedure, we built a certified (through proof reconstruction [8,10]) cooperation between a proof assistant and the automated tool.
At the present time, this cooperation can be used to delegate the proof of theorems from Isabelle to our prototype implementation (see Section 5), and have the proofs rechecked by the kernel of Isabelle, ensuring consistency of the whole cooperation of both tools.A direction for further research is to investigate how to use the knowledge and engineering embedded in state-of-the-art first order provers (for instance [14,13,4]) to handle the BSR theories within a combination of decision procedures.
