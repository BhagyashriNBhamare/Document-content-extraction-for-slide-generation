Translation systems of our NICT team at the 2nd Workshop on Asian Translation (WAT 2015) are described in this paper.
We participated in two translation tasks: Japanese-to-English (JE) and Korean-to-Japanese (KJ).
A baseline phrased-based (PB) statistical machine translation (SMT) system in Moses was used.
On JE translation , two pre-reordering approaches were applied: a simple reverse preordering and a dependency-based approach.
On KJ translation, the processing was purely conducted on character-level.
Evaluation results show that even simple approaches can improve JE and KJ PB SMT significantly.
These techniques can be easily applied in practice because of the simplicity.
Statistical machine translation (SMT) techniques have been well developed and widely applied in practice.
Linguistic knowledge-free SMT frameworks, such as phrase-based (PB) SMT ( Koehn et al., 2003) and hierarchical phrase-based SMT (HIERO) (Chiang, 2007), handle many translation tasks efficiently as long as sufficient training data prepared.
Further, sophisticated syntacticallydriven approaches (Neubig, 2013) give better performance than PB SMT and HIERO on difficult translation tasks (Neubig, 2014).
At the 2nd Workshop on Asian Translation (WAT 2015) ( Nakazawa et al., 2015), our intention is to test the efficiency of several simple techniques for Japanese-to-English (JE) and Korean-to-Japanese (KJ) translation, specifically, pre-reordering approaches for JE translation and character-based processing for KJ translation.
On JE translation, we found the simple reverse preordering approach proposed by Katz-Brown and Collins (2008) performed as well as a welldesigned dependency-based approach, in improving a PB SMT baseline.
Considering the simplicity of the reverse preordering, we think the approach should be used more widely for JE translation.
On KJ translation, we found even a pure character-based approach outperformed the organizer's baseline a lot, due to the similarity of the two languages on their vocabularies and syntaxes.
We give descriptions of the approaches in the following sections.
As Japanese and English have dramatically different word orders, the performance of word reordering affects translation results significantly.
Among different lines of researches, pre-reordering has been widely applied in practice and still studied in recent researches (de Gispert et al., 2015;Hoshino et al., 2015).
For the JE translation task of WAT 2015, we test two pre-reordering approaches.
The first one is the reverse preordering (REV-REO) proposed by Katz-Brown and Collins (2008) for the NTCIR-7 JE Patent MT translation task.
Another one is a recently proposed dependency-based approach (DEP-REO) ( Ding et al., 2015) 1 with welldesigned rules.
We select the two approaches because they are on two extremes, that REV-REO is an approach needs no syntactic analysis at all, while the DEP-REO makes a good use of the dependency structure of Japanese sentences.
As both approaches have been described in detail in their original papers, We do not give repeated descriptions but just state several details in experiments.For DEP-REO, the processes were completely identical to the experiments in Ding et al. (2015), where the tool chain of MeCab 2 and CaboCha 3 ( Kudo and Matsumoto, 2002) based on IPA system for Japanese morphemes was used.
For REV-REO, an important point is to avoid the reordering across punctuations 4 .
In the experiments, we used four marks to compose the punctuation set: U+002C 5 , U+FF0C 6 , U+3001 7 , and U+3002 8 .
For the Japanese topic marker wa, which plays the key role of the approach, we did not judge it only by the surface form, but also referred to the specific tag joshi, kakarijoshi 9 .
As Korean and Japanese share so many similar features, we tried a purely character-based approach in WAT 2015.
The process was identical to Ding et al. (2014b).
Specifically, no morphological analysis or text normalization 10 were conducted except (unicode) characters were separated using spaces.
The original space is replaced by a <sp> tag and the original tab is replaced by a <tab> tag 11 .
The processes were applied consistently on training and test sets.We found even the above-mentioned trivial process led to satisfactory performance on KJ translation.
We further found a post-processing of bracket balancing (because the data contain many brackets) could give a slight improvement in performance.
We will describe the process in the following Section 4.
We used the PB SMT system in Moses 12 ( Koehn et al., 2007) for JE and KJ translation tasks.
Basically, we used identical settings as the organizer used in the baseline.
However, there were several differences as follows.
• We used SRILM 13 (Stolcke, 2002) for lan-4 otherwise the reordering will become excessive.
5 i.e., the ordinary comma.
6 "fullwidth comma", the Chinese comma.
7 "ideographic comma", the Japanese t¯ oten.
8 "ideographic full stop", the Japanese kuten.
9 Because the DEP-REO is totally based on the IPA system, we also used the system for REV-REO.
Actually 100% of the surface form wa were tagged as joshi, kakarijoshi by MeCab in our experiments.
10 We only introduce the minimum rewriting to replace the "|", " [", "]" to full-width characters for Moses' decoder.
11 The spaces mainly appeared on the Korean side due to its orthography.
Those occasional spaces on the Japanese side were also replaced with tags.
12 guage model training (interpolated modified Kneser-Ney discounting; 5-gram on English for JE translation and 9-gram on Japanese for KJ translation).
• We used MeCab (IPA) and CaboCha to process Japanese sentences in JE translation.
• We used no tools for Korean and Japanese morphological analysis in KJ translation, instead, the max-phrase-length were set to 9 in translation model training.We selected the optimal distortion limit (DL) in PB SMT decoding by indoor experiments 14 and used the selected setting in the final submissions.
Table 1 shows the experimental results of DEP-REO and REV-REO on JE devtest set.
The excellent performance of REV-REO is impressive.
However, REV-REO needs a proper DL to reach its best performance, while DEP-REO has a more stable performance across different DLs.
The phenomenon is in agree to Ding et al. (2015).
Table 2 shows the experimental results on KJ translation results.
We tested different DLs of 0, 3, and 6 with the lexicalized orientation reordering model (+Lex.-Reo.)
.
The performance has only quite slight changes under different DLs.
We also tested the monotone translation (DL = 0) without reordering model (−Lex.-Reo.)
.
The change on performance is still insignificant.
So a pure monotone translation is enough for KJ and a reordering model helps little.
The phenomenon is in agree to Ding et al. (2014b).
We have observed there are many brackets in the data of KJ translation task.
The translations of brackets are not consistent in training data and PB SMT cannot handle bracket pairs well in decoding.
We used a simple post-processing for bracket balancing according to the following steps.1.
Getting 1, 000-best list for each output 15 ;2.
Selecting the m-th candidate, where m is min(arg min n |#L n −#R n |); #L n and #R n are counts of "(" and ")" in the n-th candidate;3.
Inserting untranslated source-side ")" to the selected candidate after the translated parts of its preceding character 16 , when (a) its paired "(" on source side is translated to a "(" on target side;(b) it has no paired "(" on source side but follows numbers / alphabets.The described brackets balancing brought a gain about +0.2 BLEU scores on devtest set, which is larger than the effect of DL and reordering models.
We consider specific post-processing will improve KJ translation more.The evaluation results of our submission are listed in Table 3 and Table 4.
Our local evaluation on automatic measures had slight but not significant differences compared with the organizer's in cases.
On JE translation, our baseline was a little lower than the organizer's baseline, as the experimental settings were not totally identical to the organizer's ones, we think the difference is acceptable.
Both REV-REO and DEP-REO improved the baseline (ours) approximately one point on BLEU score, but REV-REO gave a larger improvement on RIBES.
On KJ translation, the listed scores are all based on the MeCab's analysis.
Our baseline, i.e., a character-based one, outperformed the organizer's baseline more than one BLEU score and the bracket balancing still gave a further improvement around +0.2 BLEU scores.As to the human evaluations, our approaches still have stable improvement.
On JE translation, the DEP-REO has a more obvious improvement than REV-REO, although the BLEU scores of the two approaches are nearly the same.
We consider the using of specific syntactic information in DEP-REO brings benefits in human evaluation.
On KJ translation, the automatic and human evaluations have consistent results, that our character-based baseline performs better than organizer's baseline and post-processing gives further improvement.
From the evaluation results, we have observed that simple (or, na¨ıvena¨ıve) approaches can give satisfactory improvement for a PB SMT baseline.
We show examples of REV-REO and DEP-REO in Fig. 1 and Fig. 2, respectively.
JE and KJ translation examples are shown in Table 5 and Fig. 3, respectively.On JE translation, in our opinion, the REV-REO approach should be used as a new baseline in future, due to its simplicity and efficiency.
The REV-REO only needs morphological analysis, which is needed after all for a general SMT task.
As the Japanese topic marker wa is available across different POS systems 17 , the REV-REO is actually an approach with strong ability of generalization 18 .
On KJ translation, we illustrated characterbased processing led to good performance due to the similarity of the two languages.
Actually, our approach is more like a transliteration process rather than a translation process.
Although an SMT system gives satisfactory performance on KJ translation, we would like to state several issues for KJ SMT in practice.
• Although the syntaxes are similar between Korean and Japanese, there are differences in collocations of verbs and postpositions (case markers) 19 .
Specific process or stronger models are needed for correct translation if such a collocation is over a long-range.
• Negation is purely realized by suffixes 20 in Japanese, but can be realized by both suffixes 21 and prefixes 22 in Korean.
So, reordering is needed when a Korean negative prefix is translated into Japanese, unless we have 17 Of course, the specific tag is different.
18 We believe (although we have not done experiments) the REV-REO should work for Korean-to-English translation task as well because Korean has a topic marker (n)eun which is very similar to Japanese wa.
19 Here are examples for some common verbs.
Japanese noru and Korean tada, both have the meaning of to ride; noru requires a dative marker ni but tada requires an accusative marker (r)eul (the equivalent Japanese accusative marker is wo).
Japanese naru and Korean toeda, both have the meaning of to become; naru requires a dative marker ni but toeda requires a nominative marker i / ga (the equivalent Japanese nominative marker is ga).20 Analyzed as auxiliary verbs, e.g., nai, nu, mai, etc. 21 Analyzed as auxiliary verbs, e.g., anta, anida, etc. 22 Analyzed as adverbs, e.g., an and mot.a translation table covering all the negation forms of all the verbs.
Specific process is also needed for this phenomenon.
• Specific named entity recognition / translation modules are needed for correct translation of proper nouns.
We have described the translation systems of NICT team for JE and KJ translation task at WAT 2015).
Although the approaches we used are very simple, their efficiency has been proved by the evaluation.
We expect these techniques to be more widely applied in the community of Asian NLP.
the proposed psrf psrf modulation type than the simple structure REV-REO the proposed psrf is simple structure than psrf modulation type DEP-REO the proposed psrf structure is simpler than psrf modulation type REFERENCE and , the proposed psrf has simpler structure than that of modulated psrf Table 5: JE translation examples.
The inputs for BASELINE, REV-REO, and DEP-REO are the original Japanese sentence at the top of Fig. 1 (and Fig. 2), reordered Japanese sentence at the bottom of Fig. 1, and reordered sentence at the bottom of Fig. 2, respectively.
24 above hanguls show the Sino-Korean morphemes.
The Japanese sentence at the bottom is the output by the character-level translation; the alignment between input and output is also shown.
The output is nearly identical to the reference translation except an insignificantly redundant t¯ oten (underlined).
