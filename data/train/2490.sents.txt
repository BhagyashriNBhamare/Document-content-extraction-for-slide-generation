In this paper we carry out a stability analysis of a previously introduced market-oriented cloud computing model.
We introduce a necessary condition for the asymptotic stability of the system, and provide a mathematical proposition that enables the use of passivity for the analysis of stability in this model.
Moreover, we prove that the system is Input-to-State Stable and verify our theoretical results through simulations.
In the last few years, control theory has had a productive but still limited relationship with computing theory and systems.
Control theory is being used in problems such as managing power consumption for microprocessors [2], data centers [10,11], application performance [3,8] and management of resources in cloud computing [1,11].
At the cloud computing level, and within the "Infrastructure as a Service" framework (IaaS) [7], the costumer controls the software running over a virtual server and instantiated by a resource provider.
Resources are usually leased and might consist of application and storage servers.
Currently available services include Amazon Elastic Compute Cloud (EC2), Google Cloud and Joyent.
In some services the users must rely on coarsegrained visibility of the system [5,7].
A common control theory-based approach involves model identification and optimal control [7,9] where, under certain assumptions a model of the cloud is estimated in order to control and optimize some performance measure, e.g., latency and throughput.
The problem of virtual resource allocation to regulate application performance may then be studied as discussed in [4,5,9].
In the recent paper [6], the author proposes a passivity framework to ensure asymptotic stability of a feedback controlled system where the controller regulates power while guaranteeing response time management in the cloud.
The author proposes a market-oriented discretetime model to describe the routing of the consumer's workload in the cloud through the interaction of brokers and servers.
Roughly speaking, the servers communicate with the brokers to let them know how busy they are, while the brokers distribute the consumer's workload to be processed between the servers based on the current status of the servers.
This framework takes advantage of the passivity inherited by a system formed by interconnecing passive subsystems.Following the ideas proposed by [6] we present a number of enhancements related to the analysis of the marketoriented cloud model.
Among other results, we provide mathematical propositions to justify the use of passivity theory to the analysis of this problem, and an additional necessary condition to guarantee the asymptotic stability of the system.
Furthermore, we provide comments about the stability of the system in the presence of time-varying consumer's workload.The paper is organized as follows: Section 2 describes the market-oriented cloud model as presented in [6].
In Section 3 we present passivity analysis to study the asymptotic stability of the system.
Section 4 analyzes a counter-example to illustrate the need for an additional necessary condition for stability.
Such condition is explicitly provided and proven.
In Section 5, we prove that the system is robust to time-varying consumer's workload as long as such workload is bounded.
In Section 6 we present simulation results to validate our approach.
Finally, in Section 7 we provide our conclusions.
The discrete-time model for the cloud based on a marketoriented view was proposed in [6].
The block diagram in Fig. 1, illustrates the dynamics corresponding to a set B of N brokers and a set S of M servers.
A consumer's workload vector w(k) ∈ R N serves as a reference input for the system at time k.
The amount of workload that should be routed to the servers is calculated by the set of brokers.
The set of brokers send the vector y(k) ∈ R N with the dispatched workload and the servers receive a fraction of the consumer's workload through the vectorˆy vectorˆ vectorˆy(k) ∈ R M .
The fraction of the workload that is not completed is buffered and the servers send a throttling signal vectorûvectorˆvectorû(k) ∈ R M that tells the brokers the current load at the servers.
Thus, the brokers receive the vector signal u(k) ∈ R N and, based on it, calculate the fraction of w(k) that should be routed to the servers in the next time iteration.The following state-space equations for the j-th broker were proposed in [6].
The state d j (k) with j = 1, 2, . . . , N, corresponds to the maximum dispatch level at time instant k ∈ Z + , and the dynamics are given by:d j (k + 1) = (1 − β 1 j )d j (k) + β 1 j w j (k) − β 2 j u j (k) + ,(1)with β 1 j ∈ (0, 1) ⊂ R and β 2 j (0, ∞) ⊂ R.
The projection operator is defined as [·] + = max(·, 0) and the output is given by,y j (k) = min{w j (k), d j (k)}.
(2)Similarly, the state-space model of the i-th server is defined by two state variables, namely, b i (k) and s i (k) with i = 1, 2, . . . M. b i (k) corresponds to the amount of pending workload to be processed by the i-th server.
s i (k) corresponds to the maximum amount of workload that the i-th server processes at ime instant k and is upper bounded by the physical limit service ¯ s i .
Thus, the statespace equations are given by,b i (k + 1) = [b i (k) + ˆ y i (k) − s i (k)] + ,(3)s i (k + 1) = min{ ¯ s i , (1 − σ i )s i (k) + b i (k) + ˆ y i (k)}.
(4)with σ i ∈ (0, 1).
The designed output in [6] is given by,ˆ u i (k) = 2σ i b i (k) + 2σ i s i (k).
(5)This system may be expressed in matrix form as,ξ i (k + 1) = min{ ¯ ξ i , [A i ξ i (k) + B i ˆ y i (k)] + }, (6) ˆ u i (k) = Cξ i (k).
(7)where,ξ i (k) = b i (k) s i (k) , ¯ ξ i = ∞ ¯ s i , A i = 1 1 σ i 1 − σ i , B i = 1 σ i , C = (2σ i , 2σ i ).
The broker and server blocks are connected through the matrices R(k) ∈ R M×N and Q(k) ∈ R N×M .
Such matrices allow for the consideration of a different number of brokers and servers in the model.
The entries of the matrices, namely, R i j (k) andQ ji (k) satisfy ∑ i R i j (k) = 1 and ∑ j Q ji (k) = 1.
From now on, we omit the subindices j and i when referencing the j-th and i-th entries of the corresponding vectors in the systems of brokers and servers.
To analyze the passivity of the j-th broker, [6] proposes the following storage function,V 1 (d) = d 2 (k),and assuming that the reference input of the system w(k) = 0 and the projection in (1) is inactive we have that∆V 1 ≤ u(k)d(k) + ((1 − β 1 ) 2 − 1)d(k),which indicates that the system is output strictly passive.
Notice that((1 − β 1 ) 2 − 1)d 2 ≤ 0 since β 1 ∈ (0, 1).
By assuming that the projection in (1) is active, the difference of the storage function becomes,∆V 1 = −d 2 (k) ≤ u(k)d(k) − d 2 (k),and [6] concludes that the broker system is output strictly passive.Analyzing the passivity of the server system, [6] also proposes the following storage function,V 2 (ξ ) = ξ T (k)Pξ (k),(8)with the positive definite matrix,P = σ −σ /2 −σ /2 1 .
The projection in (3) is assumed to be inactive and the first difference of (8) satisfies the following inequality,∆V 2 ≤ ˆ u(k) ˆ y(k).
Similarly, using the same storage function but assuming that the projection in (3) is active, [6] concludes that∆V 2 ≤ ˆ u(k) ˆ y(k),and the system is shown to be passive.
Therefore, from Proposition 1 and Proposition 2 in [6] the origin of the feedback system with w(k) = 0 is asymptotically stable.
One interesting result of the passivity approach, is the utilization of passivity concepts to calculate a certificate that once satisfied, guarantees the stable operation of the system.
Even though the passivity approach was already applied in this problem, it is worth asking the following question: Is it possible to apply passivity analysis to the marketoriented cloud system?
The answer is yes, but we must be careful.
Recall that the output of the j-th broker is y(k) = min{d(k), w(k)}, then w(k) is an input of the broker system as shown in Fig. 1.
When carrying out the passivity analysis in [6], the reference input is assumed to be w(k) = 0 then y(k) = 0.
Since y(k) = d(k) if and only if d(k) ≤ w(k), special care should be taken before directly applying the passivity propositions to show asymptotic stability as presented in [6].
However, if we are able to prove that there exists a finite number of time steps N ∈ Z + such that y(k) = d(k), ∀k ≥ k 0 + N, we can eliminate the input w(k) indicated by the dashed blue arrow in Fig. 1, and make sure that y(k) = d(k) as described next.
- tion d(k 0 ) such that d(k 0 ) > w(k) = w > 0 with w ∈ R + constant, there exists N < ∞, N ∈ Z + such that y(k) = min{w, d(k)} = d(k), ∀k ≥ k 0 + N.Proof Let us define a new state variabled 0 (k) = d(k) − w(k) + β 2 β 1 u(k),(9)therefore, we obtain the new dynamical equation,d 0 (k + 1) = (1 − β 1 )d 0 (k), β 1 ∈ (0, 1).
(10)Now, let us propose the following Lyapunov function candidate,V 3 (d 0 ) = d 2 0 (k),and the first difference gives,∆V 3 = (−1 + (1 − β 1 ) 2 )d 2 0 (k) ≤ 0,(11)and the origin of (10) is asymptotically stable.
Let us assume an initial condition d 0 (k) > w. Furthermore, from (11) we know that for any d 0 (k) > 0 there exists η ∈ R + such that∆V 3 < (−1 + (1 − β 1 ) 2 )d 2 0 (k) < −η, therefore, V 3 (k + 1) − V 3 (k) < −η,and solving the recurrence equation we get,V 3 (k) ≤ V 3 (k 0 ) − (k − k 0 )η,(12)If we take any feasible δ ∈ R + in the trajectory of d(k) such that d(k 0 ) > δ > 0 we get V 3 (δ ) = δ 2 .
Therefore, if starting from the initial condition d(k 0 ) we arrive at d(k) = δ for some k, we get from (12) that,δ 2 ≤ V 3 (d(k 0 )) − (k − k 0 )η, therefore, k ≤ k 0 + V 3 (k 0 ) − δ 2 η < ∞.
Then, the number of steps required to go from any initial state d 0 (k 0 ) > 0 to another state d 0 (k) > 0 in the trajectory of the solution of (10) is finite.
From (9) we conclude that starting from an initial state d(k 0 ), there existsN ∈ Z + , N < ∞ such that 0 < d(k) ≤ w, ∀k > k 0 + N, therefore, y(k) = min{w, d(k)} = d(k) > 0, ∀k > k 0 + N.Remark 1 Notice that for the case w(k) = w = 0 the foregoing Proposition does not apply, since from [6], d(k) → 0 as k → ∞ asymptotically, i.e., in infinite time.
Notice that in Proposition 1 we do not consider the case where the projection of d(k) is active because we have assumed that d(k) > 0.
As mentioned before, based on [6], the market-oriented cloud described in Section 2 was shown to be asymptotically stable.
However, let us implement the foregoing model assuming only one broker and one server with Non−Asymp.
Stable, 1 broker,1 serverd(k) b(k) s(k) w(k) u β (k)Figure 2: Non-asymptotically stable example that satisfies the sufficient conditions for asymptotic stability given in [6].
β 1 = 0.9, β 2 = 0.9, w(k) = w = 40, ¯ s = 50 and initial con- ditions d(k 0 ) = 45, b(k 0 ) = 20, s(k 0 ) = 5.
Furthermore, let us replace (5) by, ˆ u 1 (k) = 2σ b(k) + 2σ s(k) + σ ˆ y(k).
1(13)with σ = 0.9.
We obtain the plot shown in Fig. 2, which does not show an asymptotically stable trajectory.
In order to explain the result, we provide the following Proposition, Proposition 2 A necessary condition to guarantee the asymptotic stability of the feedback connection between the broker system given by (1) and (2), and the server system given by (3), (4) and (13) is,0 < β 2 u(k) ≤ β 1 w(k).
(14)Proof let us calculate the equilibrium points of the j-th broker and the j-th server,d eq = w(k) − β 2 β 1 u(k),(15)b eq = 0,(16)s eq = y(k).
(17)Now, let us assume0 < w(k) < β 2 β 1 u(k),(18)but from the projection in (1) the equilibrium point d eq ≥ 0, which contradicts (18).
Therefore,w(k) ≥ β 2 β 1 u(k) ≥ 0,(19)1 See Appendix A for a justification for using (13) and the necessary condition (14) follows.Examining the plots of u β (k) = β 2 β 1 u(k) and w(k) in Fig. 2, we see that at every oscillation, the inequality (19) is not satisfied at some time intervals, therefore, asymptotic stability cannot be guaranteed.
Now, we consider our last question: Do bounded inputs guarantee bounded states in the market-oriented model?
This property is termed Input-to-State Stability (ISS) and is related to the capacity of the states of the system to remain in the neighborhood of its equilibrium points.
In this specific case, we are assuming w(k) in (1) is a timevarying vector function.
Although the simulation results shown in [6] hint that the system might be ISS, this needs to be formally proven as described in the following result.
Fig. 1 defined by the broker system with dynamics (1) and (2) with 0 < β 1 < 1, β 1 ∈ R and 0 < β 2 , β 2 ∈ R, and the server system with dynamics (3), (4) and (13) with σ ∈ (0, 1) ⊂ R, the resulting system is ISS.
Furthermore, if 0 < β 2 u(k) < β 2 w(k), the system tracks the equilibrium points (15)- (17) asymptotically.Proof Let us study the broker system defined by (1) and (2), and let us define,e 1 = w(k) − β 2 β 1 u(k),then, the system (1) may be rewritten as,d(k + 1) = [(1 − β 1 )d(k) + β 1 e 1 ] + .
Assuming no active projection in (5), we note that the system is Linear Time Invariant (LTI).
It was proven in [6] that the broker system is output-strictly passive with a positive definite storage function.
Since it is zero-state observable as well, the origin with e 1 (k) = 0 is asymptotically stable.
Since the system is LTI we conclude that it is Bounded-Input-Bounded-Output (BIBO) stable as well.Similarly, the server system given by (3), (4) and (13) was proven to be passive with a positive definite storage function, and therefore its origin is stable withˆywithˆ withˆy(k) = 0.
Assuming no active projection, the dynamics are given by (6) and (7) which describe an LTI system, therefore the system is BIBO stable.
Assuming an active projection in the server system the system matrix A becomes, Figure 3: Simulation results showing that the marketoriented cloud model proposed in [6] is ISS.
and the system is LTI, therefore it is BIBO stable.
Furthermore, with y(k) < ∞ andˆyandˆ andˆy(k) = R(k)y(k) where all the entries of R(k), namely,A = 0 0 σ i 1 − σ i ,d 1 (k) b 2 (k) s 2 (k) w 1 (k) u 1β (k)R i j (k) ∈ [0, 1], thenˆy thenˆ thenˆy(k) < ∞.
Since u(k) = Q(k) ˆ u 1 (k) where the entries of Q(k), namely, Q ji (k) ∈ [0, 1], then u(k) < ∞.
Finally, since we know that β 2β 1 u(k) < ∞ and w(k) < ∞, then w(k) − β 2 β 2u(k) < ∞, and the system is ISS.
If in addition, (14) is satisfied, then the system tracks the equilibrium points asymptotically.
In Fig. 6, we present simulation results using two brokers and three servers with β 1 = 0.95, β 2 = 0.1, σ = 0.5, ¯ s = 20 and w(k) = 12.5 + 12.5 sin( 2πk 100 ).
Notice that (19) is being fulfilled, since we are plotting u β (k) = β 2 β 1 u(k) represented by the purple dotted line, which avoids undamped oscillating behaviors.
Note that all the other states are in the neighborhood of their respective equilibrium points given by (15)-(17).
Note also that the subindices in the plot of Fig. 6, indicate that we are plotting the inputs and outputs of broker 1 and server 2 respectively.Furthermore, now that we have shown that the system is ISS stable, we are able to assure that the states remain bounded, as long as the consumer's workload stays bounded.
In comparison with the results shown in [6] we carry out simulations using three brokers and five servers.
The parameters are β 1 = 0.95, β 2 = 0.1, σ = 0.5 and ¯ s = 20.
The consumer's workload is modeled as a Gaussian white noise with mean µ = 2 and variance σ 2 g = 1.
At time step k = 100 the mean of w(k) abruptly changes to µ = 25 and at k = 210 it goes back to µ = 2.
Later, at k = 425 the mean goes to µ = 16 and at k = 632 it returns to µ = 2.
As anticipated by the theory, the system is ISS.
In Fig. 4, 5 and 6 we observe that all states remain bounded.
However, and as opposed to the simulation in Fig. 6, we can no longer assure raw asymptotic tracking of the equilibrium points (15)-(17) because the natural oscillations due to the stochastic nature of the process do not guarantee that condition (14) is satisfied.
We have presented an in depth analysis of the passivity framework introduced in [6] for power control and response time management in the cloud.
We enhanced the original theoretical result with a detailed analysis of the stability and stabilization of the system.
We have for- mally provided an additional necessary condition for the asymptotic stability of the market oriented cloud model, as well as additional assumptions to justify the use of the passivity approach to guarantee asymptotic stability.
Furthermore, we have formally proven the Input-to-State stability of the proposed cloud model in the presence of time-varying consumer's workload vectors. )
In order to satisfy the sufficient conditions derived from the passivity approach in [6] some adjustments must be carried out in (5).
By using the storage function (8) and assuming that projection in (3) is inactive the first difference of (8) gives,Now, using the same storage function but assuming that the projection in (3) is active we obtain,and the server system is still passive with the output (13).
In order to satisfy the sufficient conditions derived from the passivity approach in [6] some adjustments must be carried out in (5).
By using the storage function (8) and assuming that projection in (3) is inactive the first difference of (8) gives,Now, using the same storage function but assuming that the projection in (3) is active we obtain,and the server system is still passive with the output (13).
