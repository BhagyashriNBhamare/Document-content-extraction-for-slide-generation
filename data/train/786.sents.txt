This paper builds a complete modeling framework for understanding user churn and in-degree dynamics in unstructured P2P systems in which each user can be viewed as a stationary alternating renewal process.
While the classical Poisson result on the superposition of n stationary renewal processes for n → ∞ requires that each point process become sparser as n increases, it is often difficult to rigorously show this condition in practice.
In this paper, we first prove that despite user heterogeneity and non-Poisson arrival dynamics, a superposition of edge-arrival processes to a live user under uniform selection converges to a Poisson process when system size becomes sufficiently large.
Using this finding, we then obtain closed-form results on the transient behavior of in-degree, paving novel ways for a variety of additional analysis of decentralized P2P systems.
Behavior of P2P networks under churn (i.e., in the face of node join/departure) is one of the most fundamental issues of P2P research [1], [3], [5], [6], [7], [8], [9], [10], [12], [15], [16].
Prior work typically uses a homogeneous Poisson process to model user arrivals, assumes that user lifetimes are exponentially distributed, and addresses only certain limited aspects of P2P performance under churn [6], [10], [16].
Among the recent modeling studies, [20] models each user as an alternating renewal process that is ON when the user is logged in and OFF otherwise.
This model allows the online/offline duration distributions to be unique to each user, thus capturing their inherent heterogeneity.
While this generic churn model can be adopted in many cases, [20] does not expose any restrictions on the selection of ON/OFF distributions or rigorously establish the Palm-Khintchine result.To address these problems, we build a novel modeling framework for understanding user churn and in-degree dynamics in P2P systems.
Each user i is modeled by a stationary alternating renewal process Zi(t) representing the user's * Supported by NSF grant CNS-0720571.
online/offline states.
Unlike [20], the ON/OFF durations of Zi(t) are based on the type of user i, which is chosen randomly from some finite set of pre-defined peer types (e.g., desktop or mobile).
As in many P2P networks and [7], we assume that each joining node selects k initial out-neighbors and then continuously replaces them as they fail with existing users in the system.
We build a complete closed-form model characterizing the evolution of edge-arrival and indegree under the assumption of uniform neighbor selection.While the Palm-Khintchine Theorem [4] states that the superposition of n stationary renewal processes converges to a Poisson process as n → ∞, it requires that each point process associated with the renewal process becomes sparser as n → ∞ and the various processes be independent.
However, it is often difficult to prove that these condition hold in real systems, which frequently impedes application of wellknown Poisson theory in practice.
In this paper, we first prove that despite user heterogeneity, non-Poisson arrival dynamics, and two types of edge-creation processes (i.e., initial and replacement), the aggregate edge-arrival process to each live user under uniform selection converges to a Poisson process when system size becomes sufficiently large.
This novel result, an important consequence of our modified churn model, offers relatively simple analysis of the edgearrival process, backed by a solid theoretical justification.
We then derive the expected transient in-degree as a function of the lifetime distribution F (x), including cases with non-exponential peer lifetimes, and show that users who stay online longer quickly accumulate non-trivial in-degree and become much more resilient to isolation over time.
We start by formalizing the user join/departure model and the out-link model of unstructured P2P networks.
Due to limited space, all proofs omitted from this paper can be found in the technical report [19].
As observed in real traces [2], [17], each peer can be viewed as alternating between online/offline states.
Define Zi := {Zi(t)} to be an ON/OFF right-continuous process on time interval [0, ∞), indicating online/offline states of user i:Zi(t) := { 1 user i is ON at time t 0 otherwise (OFF) , t ≥ 0, 1 ≤ i ≤ n, (1)where n is the number of participating peers.
Following the illustration at the bottom of Figure 1, define random vari-L i,m+1 L i,m τ i,m+1 τ i,m ON OFF ALIVE DEAD ALIVE DEAD 1 2 3 1 2 ON U i c (n, t) 2 3 D i,m Z i (t) Y i c (n, t)Figure 1: Process {Zi(t)} depicts ON/OFF behavior of user i, for i = 1, . . . , n. Process {Y c i (n, t)} indicates DEAD/ALIVE behavior of the c-th out-link of user i, for c = 1, . . . , k. Process {U c i (n, t)} counts the number of DEAD→ALIVE transitions within the current ON/OFF cycle of i. ables Li,m > 0, Di,m > 0 to be durations of user i's ON (life) and OFF (death) periods, respectively, and {τi,m} ∞ m=1 to be arrival times of user i, where τi,m+1 = τi,m + Li,m + Di,m, for m ≥ 1.
Further define {Mi(t)} to be the point process that counts the number of arrivals of user i in interval [0, t]:Mi(t) := ∞ ∑ m=1 1 τ i,m ∈[0,t] .
(2)To remain connected and participate in the system, each user i creates k out-links to other peers upon joining the network and then continuously repairs them as they fail.
Denote by Y c i := {Y c i (n, t)} an alternating process representing the states of i's out-link c:Y c i (n, t) := { 1 out-link c of user i is ALIVE at t 0 otherwise (DEAD) ,(3)for c = 1, . . . , k and t ≥ 0, where ALIVE means that the neighbor adjacent to this link is currently alive and DEAD means that the neighbor has departed from the system and a replacement is being sought.
If node i is offline at t, all of its links are considered DEAD.
As depicted at the top of Figure 1, user i's c-th link becomes ALIVE at arrival times {τi,m} m≥1 and then alternates between DEAD and ALIVE states during i's ON periods.
Note that ALIVE durations of Y c i are residual lifetimes of selected neighbors and DEAD durations are search delays for finding replacement neighbors, with the exception of the very last ALIVE cycle in each ON period, which is terminated by i's departure rather than neighbor failure.
Whenever Y c i transitions from DEAD to ALIVE, user i creates an edge (i.e., performs one selection).
Define initial edges to be those added when users arrive in the system (i.e., whenever Zi transitions from OFF to ON) and replacement edges to be those added in response to neighbor failures.
Note that processes {Y c i } are dependent in general and rather complex since multiple users may concurrently connect to the same neighbor and each out-link may point to a peer v again after v re-appears in the system.
Figure 1 also shows right-continuous process {U c i (n, t)}, which is the number of transitions DEAD→ALIVE of Y c i within the current ON/OFF cycle of i up to time t.
We set U c i (n, τi,m) := 1 for all arrival times τi,m, use notation t − to represent the instant just prior to t, and denote byU c i (n, τ − i,m+1 ) = sup τ i,m ≤t<τ i,m+1 U c i (n, t)(4)the number of selections for link c in the m-th ON cycle of user i. Finally, the number of selections that i performs for link c across all ON durations of i in [0, t] is given byW c i (n, t) := M i (t) ∑ m=1 U c i (n, τ − i,m ) − U c i (n, 0) + U c i (n, t), (5)where Mi(t) is the number of arrivals of i in [0, t].
Then, the edge-creation process of user i is the superposition of k processes W c i :Wi(n, t) := k ∑ c=1 W c i (n, t).
(6)Observe that ∑ n i=1 Wi(n, t) is the number of out-degree edges generated by n users in [0, t], which is the same as the number of in-degree edges received by living users in [0, t].
We next make several assumptions about the system, without which the main result of this paper may not hold.
This assumption often holds in unstructured P2P networks where individual users are unaware of system size (e.g., Gnutella) and some structured P2P networks with constant node degree (e.g., de Bruijn [11]).
The next assumption classifies users into a number of types and explains how users generate their online/offline durations according to their types.
1) There exists some set F of distinct pairs of non-lattice CDFs defining non-negative random variables:F := {( F (1) (x), G (1) (x) ) , . . . , ( F (T ) (x), G (T ) (x) )} ,where T ≥ 1 is a fixed number of user types and CDFsF (j) (x) > 0 and G (j) (x) > 0 for all x > 0, all j = 1, . . . , T .
Further, each mean l (j) := ∫ ∞ 0 (1−F (j) (x))dx and d (j) := ∫ ∞ 0 (1 − G (j) (x))dx satisfies 0 < l (j) , d (j) < ∞ for all types j = 1, . . . , T ; 2) Each Zi is associated with a pair of CDFs (Fi(x), Gi(x))that is independently drawn from set F , where type j is selected with probability pj ≥ 0 and∑ T j=1 pj = 1;3) Defining S to be set of selections made by each user and conditioning on S, set {Zi(t)} n i=1 consists of mutually independent, stationary alternating renewal processes, where ON durations {Li,m} ∞ m=1 are independently identically distributed (i.i.d.) with CDF Fi(x) and OFF durations {Di,m} ∞ m=1 are i.i.d. with distribution Gi(x).
Part 1) in Assumption 2 uses T as the "diversity" factor of user behavior (e.g., T = 1 reduces the system to a network of homogeneous users) and mandates that all average online/offline durations are both positive and finite.
Part 2) allows for bias in the selection process and lets certain user types be more popular than others.
Part 3) ensures that once users have chosen their types (i.e., ON/OFF duration CDFs), {Zi(t)} n i=1 evolve as independent stationary renewal processes.For simplicity of notation, conditioning on user type, define li := E[Li,m|i's type] and di := E[Di,m|i's type] to be the mean ON/OFF duration of each user i, respectively.
Denote byλi := (li + di) −1(7)the arrival rate of the user into the system.
To ensure stationarity, the first arrival time τi,1 is defined asτi,1 := { L e i + Di with probability (w.p.) ai D e i w.p. 1 − ai ,(8)whereL e i has the equilibrium distribution of Fi(x) (i.e., P (L e i < x) = (li) −1 ∫ x 0 (1 − Fi(u))du, x ≥ 0), D e ihas the equilibrium distribution of Gi(x), and ai is user i's availability:ai := li(li + di) −1 .
(9)Due to stationarity, the expected number of arrivals of i in interval [0, t] is E[Mi(t)] = λit for any t ≥ 0, where λi is given in (7).
In the next subsection, we focus our attention on properties of aggregate user lifetimes, the system population at time t, and residual lifetimes of selected neighbors, upon which we compute the rate of edge-creation from each user.
For each instance of user i being present in the system during interval [0, t], place its ON duration Li,m into set Si(t) and define S(t) = ∪ n i=1 Si(t).
Then let F (n, t, x) be the CDF of values collected in set S(t) (i.e., the probability that the obtained lifetimes are less than or equal to x).
Given n participating users, define F (n, x) := limt→∞ F (n, t, x) to be the aggregate lifetime distribution of the system and l(n) to be its mean in the equilibrium.
By [20, Theorem 1], with Assumption 2 and any finite n ≥ 1, the aggregate lifetime CDF F (n, x) and its mean l(n) are respectively given byF (n, x) = n ∑ i=1 biFi(x), l(n) = n ∑ i=1 bili,(10)where bi := λi/ ∑ n j=1 λj and λi is defined in (7).
The asymptotic results on F (n, x) and l(n) are given below.
Lemma 1.
Under Assumption 2, the following sequences converge almost surely (a.s.) as n → ∞:F (n, x) a.s. − − → F (x) := ∑ T j=1 pjλ (j) F (j) (x) λ ,(11)l(n) a.s. − − → l := a λ ,(12)where Now, suppose node v picks a random currently-alive user i as a potential neighbor.
Denote by Ri(t) the remainder of the current ON cycle of user i, as illustrated in Figure 2, and by Hi(x) the CDF of Ri(x):λ (j) := 1/(l (j) + d (j) ) is:= l (j) /(l (j) + d (j) ) of type j. Further, F (x) is a proper CDF function and 0 < l < ∞.
L i,m t D i,m L i,m+1 R i (t)Hi(x) := P (Ri(t) ≤ x|Zi(t) = 1),(13)which is invariant in t due to stationarity of Zi.
It is known from [18] thatHi(x) = (li) −1 ∫ x 0 (1 − Fi(u))du, x ≥ 0.
Next, define R(n, t) to be the residual lifetime of the user uniformly randomly selected from among peers that are alive at time t. Let N (n, t) := ∑ n i=1 Zi(t) be the system population at time t and denote by H(n, x) the distribution of R(n, t) conditioned on that at least one user is alive:H(n, x) := P (R(n, t) ≤ x|N (n, t) ≥ 1).
(14)It is not hard to see from (14) that H(n, x) depends on the distribution of N (n, t), the CDF of Ri(t) of each user, and neighbor selection strategies.
In the following, we examine the properties of N (n, t), upon which we derive H(n, x) when user v uniformly randomly selects neighbors.Lemma 2.
Given Assumption 2 and N (n, t) ≥ 1, µn/N (n, t) converges to 1 in r-th mean for all r ≥ 1:lim n→∞ E [ µn N (n, t) − 1 r |N (n, t) ≥ 1 ] = 0,(15)where µn := E[N (n, t)] = na is the mean population and a is given immediately following (12).
Applying the above two lemmas leads to the main result of this subsection.
Theorem 1.
Given Assumption 2 and uniform selection, H(n, x) defined in (14) converges a.s. to the following as n → ∞:H(n, x) a.s. − − → H(x) := 1 l ∫ x 0 (1 − F (u)) du,(16)where F (x) and l are given in (11)-(12).
Theorem 1 shows that the residual CDF H(n, x) can be reduced to a simple function of the aggregate lifetime CDF F (x).
Recalling that ALIVE durations of Y c i are residual lifetimes of selected users and applying (16), we next deal with the edge-arrival process to each user i. For convenience, denote by δi,z the z-th time at which user i makes a selection, across all links of i, and by I j i,z the indicator that user i selects peer j for its z-th connection.
Note that the z-th selection time δi,z of user i is determined by the ON/OFF process Zi and residual lifetimes of i's all previous selections z ′ < z.
This indicates that the history observed by i up to time δi,z clearly helps i predict whether the previously selected peers are alive at δi,z.
The model for the number of users available for selection at time δi,z is rather intricate due to the dependence on i's past selections.
In the following, we first deal with uniform integrability of set {(Wi(n, t)) r } n≥1 and then proving that residuals of selected neighbors in [0, t] are asymptotically independent as n → ∞.
These two important results make the edgecreation process tractable for systems with large size and pave the way for computing the CDF of residual R(n, δi,z) of neighbor selected at time δi,z, as presented in Lemma 3.
Note that uniform integrability of {(Wi(n, t)) r } n≥1 shows that E[(Wi(n, t)) r ] converge as n → ∞, for all r > 0.
We then apply the distribution of residuals R(n, δi,z) and the regenerative property of process {U c i (n, t)} (see (4)) to obtain the limit for E[Wi(n, t)].
Lemma 3.
With Assumptions 1-2 and uniform selection, we have for each user i and all t ≥ 0:1) Collections {(Wi(n, t)) r } n≥1 are uniformly integrable in n, for any r > 0;2) Residuals {R(n, δi,z)} z≥1 of selected neighbors at random times δi,z are asymptotically independent and converge in distribution as n → ∞ to i.i.d 3) Define {U (s)} s≥0 to be a pure renewal process whose cycle lengths follow the CDF H(x) in (16) and whosemean is E[U (x)] = 1 + ∑ ∞ r=1 H * r (x), where H * r (·) is the r-fold convolution of H(·).
Given user i's type, the mean number of edges that i creates in [0, t] islim n→∞ E[Wi(n, t)|i's type] = kλitE[U (Li)|i's type] = kλit ∫ ∞ 0 E(U (x))dFi(x),(17)where Fi(x) is i's lifetime CDF and λi is its arrival rate.
Unconditioned on user types,E[Wi(n, t)] = (k + θ)λt,(18)whereθ := k ∑ ∞ r=1 ∫ ∞ 0 H * r (x)dF (x), λ is given in (12), and F (x) is the aggregate lifetime CDF in (11).
We next make several notes on Lemma 3.
Intuitively, as system size n increases, the probability that user i selects any other peer more than once in the interval [0, t] becomes smaller.
In other words, for sufficiently large n, it is more likely that the set of neighbors that i connects to in [0, t] contains distinct peers and thus the CDF of neighbor residuals selected at δi,z approaches that of residual R(n, t) of a randomly selected user shown in (16), which is the rationale behind part 2 of Lemma 3.
The result in (18) demonstrates that as n → ∞, user i brings k initial edges and an average of θ < ∞ replacement edges per ON/OFF cycle into the system and that the edge creation rate from each user approaches the constant (k + θ)λ.
As we will see in the next subsection, (k + θ)λ is equal to the edge-arrival rate from the system to a given existing user.
Given a set of n participating users, our approach is to set aside a given user v (so the values of Zv(·) are given) and examine edge arrival to this user, from n − 1 other peers under uniform selection.Define ξn,i(t) := ∑ W i (n,t) z=1 I v i,z to be the number of edges delivered by user i to node v in [0, t], for i ̸ = v, where I v i,z is the indicator that i selects v at time δi,z. Then, the edge arrival process from the system to user v is the superposition of processes ξn,i:ξn(t) := n ∑ i=1,i̸ =v ξn,i(t) = n ∑ i=1,i̸ =v W i (n,t) ∑ z=1 I v i,z .
(19)The properties of process ξn are presented in Theorem 2, which follows from Lemma 3 and the result on the convergence of random measures in [14, Proposition 3.22].
Theorem 2.
Under Assumptions 1-2 and uniform selection, conditioned on Zv, the point process ξn defined in (19) converges in distribution as n → ∞ to a non-homogeneous Poisson process ξ with local rate γZv(t), where Zv(t) is a deterministic function of t,γ := (k + θ)/l,(20)θ is in (18), and l is the mean lifetime given in (12).
Theorem 2 shows that when user v is alive (i.e., Zv(·) = 1), the instantaneous rate of edge arrival to v is the constant γ; otherwise it is 0.
That is, the edge arrival process to v is a Poisson process whose rate varies according to process Zv.The above important result states that despite multiple user-types and non-Poisson user-arrival dynamics, the edgearrival process to each user v is Poisson.
This allows us to obtain relatively simple models for in-degree that we study later in this paper, and other interesting metrics (e.g., traffic load on each user).
We next show simulations explaining this result and its accuracy in systems with finite age and size.
We generate a network of n users whose arrival/departure follows the introduced churn model.
The system evolves for at least 50 virtual hours before being examined.
We start by generating T = 1, 000 pairs of means li and di, which are drawn randomly from two Pareto distributions with α = 3 as described next.
For mean ON durations, we use β = 1 and obtain E[li] = 1/2 hour; for mean OFF durations, we use β = 2 and get E[di] = 1 hour.
We study three cases throughout the paper: 1) heavy-tailed system H withF (j) (x) ∼ Pareto(3, 2l (j) ) and G (j) (x) ∼ Pareto(3, 2d (j) ); 2) very heavy-tailed system VH with F (j) (x) ∼ Pareto(1.5, l (j) /2) and G (j) (x) ∼ Pareto(1.5, d (j) /2); and 3) exponential sys- tem E with F (j) (x) ∼ exp(1/l (j) ) and G (j) (x) ∼ Pareto(3, 2d (j) ),where notation Pareto(αi, βi) representsFi(x) = 1 − (1 + x/βi) −α i , αi > 1, βi > 0, (21)The actual pairs (Fi(x), Gi(x)) are selected uniformly randomly from F .
Figure 3 shows the distribution of edge inter-arrival delays to a single node obtained in simulations with two types of systems, given that the node is alive.
Notice in the subfigures that for finite n, the distribution of inter-arrival delay1.E-61.
E-51.
E-41.
E-31.
E-21.
E-11.
E+0 0 3 6 9 inter-edge-arrival time (minutes) 1-CDF model simulations (a) system H with n = 10001.E-61.
E-51.
E-41.
E-31.
E-21.
E-1 is approximately exponential with the rate given by (20).
Additionally, Figure 4 shows that the distribution of the number of edge arrivals to a node in an interval of size ∆t approaches a Poisson distribution with the same rate γ in (20).
Finally, note that the Poisson result in Theorem 2 is not an assumption of the paper as in prior work [6], [10], [13], but rather a consequence of the churn model introduced earlier.
In this section, we aim to understand how the in-degree of each live user changes with user age.
We start by building a generic in-degree model for any lifetime distribution F (x).
In a stationary system, define Xn(t) to be the in-degree of a random online user v at age t ≥ 0.
Applying Theorem 1 and Lemma 3, we show transient and limiting properties of Xn(t) under Assumptions 1-2 and uniform selection of neighbors in the next theorem.Theorem 3.
Given that a user is alive in the system, its expected in-degree at fixed age t ≥ 0 converges as n → ∞ to a monotonically increasing function of ageE[Xn(t)] → k ∫ ∞ 0 (E[U (x) − U (x − t)]) dH(x),(22)whereH(x) is in (16), {U (s)} s≥0 is a pure renewal process defined in Lemma 3, E(U (x)) = 1 + ∑ ∞ r=1 H * r (x) for x ≥ 0, and E(U (x)) = 0 for x < 0.
To better interpret the mean in-degree of user v at fixed age t, we transform (22) intolim n→∞ E[Xn(t)] = kE[U (R) − U (R − t)],(23)where r.v. R ∼ H(x) denotes the age of a random user i that is ON at time t, for i ̸ = v, R − t is the duration that i is alive but v is offline, and U (x) represents the number of selections that i makes for link c in an interval with a given length x (recall U (x) = 0 for x < 0).
It is then not hard to see that the left-hand side of (23) is the expected number of connections that peer i builds since both i and v are alive.
By Theorem 3, this metric is equal to v's mean indegree (i.e., the expected number of existing users that select1.E-51.
E-41.
E-31.
E-21.
E-11.
E+0 1 7 13 19 25 # edge arrivals PMF model simulations (a) system H with ∆t = 6 min 1.E-51.
E-41.
E-31.
E-21.
E-11.
E+0 v since v's arrival), which is consistent with the symmetry of out-going/in-coming edges under uniform selection.
Our last note is that as t → ∞, (23) tends to kE[U (R)], which provides a simple upper-bound at which the in-degree of each user saturates.We next show that (23) can be expressed in simple closedform for exponential lifetimes and further apply Theorem 2 to obtain the distribution of in-degree Xn(t) at age t.Theorem 4.
For exponential lifetimes L and n → ∞, the mean in-degree at failure θ = k and E[Xn(t)] → 2k(1 − e −t/E [L] ).
Moreover, the distribution of Xn(t) converges to a Poisson distribution with mean 2k(1 − e −t/E [L] ) as n → ∞.
In (24), the mean in-degree of a node increases monotonically from Xn(0) = 0 when it arrives into the system to E[Xn(∞)] = 2k when its age tends to infinity.
For the exponential case we directly use (24), while for the Pareto lifetime case with α > 2 we numerically solve (23).
Simulation results in Figure 5 demonstrate that the models are very accurate and indeed saturate at predicted values 2k and kE[U (R)] as age t → ∞.
Furthermore, if a node survives for more than 1 hour in the system under the parameters of this simulation, it develops an average of 12 − 15 in-degree neighbors (depending on the distribution of L) and is unlikely to be isolated from the graph from that point on.
It is also interesting to observe in the figure that the Pareto curve increases slower, but saturates at larger values, which suggests more resilience support for users with very large lifetimes.
This paper introduced a generic framework for modeling user join/departure, edge arrival, and in-degree.
Using this foundation, it then developed closed-form results on the edge-arrival process to each user and their transient in-degree.
Future work involves modeling of non-uniform neighbor selection, measurement of real P2P dynamics, and analysis of non-stationary user arrivals.
