With the increasing use of TLS encryption over web traffic, censors increasingly deploy SNI filtering to be able to censor encrypted connections.
Specifically, a censor can identify the web domain being accessed by a client via the SNI extension in the TLS ClientHello message.
In response, in August 2018, a new extension called ESNI (Encrypted-SNI) is proposed for TLS 1.3, aiming at preventing such server name leakage.
In this paper, we study the implications of ESNI for censorship.
We first characterize SNI-based censorship in China by measuring its prevalence and effectiveness.
We outline the assisting role played by SNI-filtering in censorship by comparing it with other commonly used censorship techniques.
We then measure the extent of deployment of ESNI, and discuss ESNI's promise in helping censorship circumvention tools.
We monitor the censorship associated with ESNI within 14 geographic regions around the world.
Based on our measurements , we discuss the key factors to the potential success of ESNI for censorship evasion and the upcoming challenges.
With the increasing use of TLS to encrypt web traffic [23], more and more censorship authorities have started to leverage SNI filtering to censor Internet destinations [12,36].
As shown in Figure 1, a censor can learn the website a client is trying to access via the server name indication (SNI) extension [13] in the TLS ClientHello message.
In response, a new extension called ESNI (Encrypted-SNI) is recently proposed for TLS 1.3, aiming at fixing this decade-long hostname leakage.
Since the first Internet draft of ESNI rolled out, Internet freedom communities have expressed great interest in it, even some referring to it as "the biggest thing since the ascendance of TLS" [1,20].
In this study, we explore the impact of ESNI adoption on censorship circumvention.
By focusing on China, we try to address two important questions through various measurements.
First, what role does SNI-based censorship play in today's Internet in comparison to other common censorship techniques like IP address blocking?
Second, what is the current and potential effectiveness of ESNI in strengthening censorship circumvention?In order to have a better understanding of the role played by SNI filtering in censorship, we measure how the Alexa top 1 million websites are censored by different censorship techniques in China ( §3.1).
We select China as the main studying country because of its notoriously sophisticated censorship technology [14,25,27,37].
Our findings outline the overlapping relationships between different censorship methods, revealing the assisting role SNI filtering plays in China's censorship ( §4.1).
Our experiment results also show that 84.5% of the blocked websites are under IP blocking, indicating a large portion of the websites will remain blocked even when both DNS-based and SNI-based censorship is circumvented.We performed the first evaluation on the use of ESNI as a censorship circumvention strategy.
In specific, we measure the current adoption rate of ESNI as well as its effectiveness in censorship circumvention.
From our results, we find around 10.9% of the Alexa top 1 million sites are already supporting ESNI ( §4.2).
Furthermore, while using ESNI helps to unblock only 66 sites currently censored in China, we argue the deployment of ESNI is still a progressive move since it makes 101K websites more blocking-resistant.
We also find 85 web- sites hosted on CDNs are indeed blocked by IP, suggesting the censors are likely to block shared CDN IPs if they are used by a manageable set of non-forbidden webpages ( §4.3).
The fate of ESNI deeply depends on whether any censorship action is taken against it before it becomes an essential part of the Internet ( §5.1).
We, therefore, monitor the censorship associated with ESNI in 14 different areas across the globe ( §3.2).
Contrary to a report claiming ESNI traffic is already blocked in South Korea [12], we were not able to confirm any ESNI-based censorship in our experiments ( §4.4).
Finally, based on the findings from our experiments, we discuss the key factors to the success of ESNI as a censorship circumvention strategy in the future ( §5.1).
We further discuss some of the potential challenges once ESNI becomes a key part of Internet communications ( §5.2).
SNI-based censorship.
The Server Name Indication (SNI) extension inside the TLS ClientHello message is used to tell a web server which website certificate should be rendered to the client.
Since a ClientHello message is always sent before the establishment of the TLS encryption channel, SNI is sent in cleartext.
Consequently, censors can determine the website to which a client is trying to connect via the SNI extension.Two most commonly used strategies to avoid this SNI leakage are domain fronting [21] and omitting SNI [23].
Domain fronting sets the SNI value to popular services within the same cloud infrastructure as the intended website.
It then specifies the intended website in the HTTP header which will be transferred over established TLS encryption channel.
Unfortunately, major cloud providers have recently announced to disable domain fronting [2,4,5].
Omitting SNI, as another way to evade SNI-based censorship, is widely used by censorship circumvention tools, including Psiphon, Lantern, and MassBrowser [6].
Since the server does not receive an SNI extension or an empty one, it renders a general certificate to establish the TLS connection [39].
Frolov et al. [23] report that as of August 2018, only 1.41% of the TLS ClientHello Ama z o n a n n o u n c e d r e wo r k o n d o ma i n f r o n t i n g E S NI f i r s t I n t e r n e t -Dr a f t Figure 3: Key events for ESNI.messages do not contain a SNI extension, indicating that omitting SNI strategy may be fingerprinted by censors.ESNI mechanism.
We remind the reader that our introduction is based on the third Internet draft of Encrypted-SNI (ESNI) [32], which is subject to change.
In general, ESNI works as follows.
First, as shown in Figure 2, the client acquires the public ESNIKey associated with destination server via a trusted channel.
While the trusted channel is left unspecified, it can typically be a DNS TXT query via an encrypted DNS channel.
After obtaining the ESNIKey, an encryption key is derived using both ESNIKey and a key chosen by the client.
The client then sends a TLS ClientHello message with the server name encrypted by this derived encryption key.
The server can then decrypt the encrypted server name.
The rest of the connection is similar to a typical TLS 1.3 connection [31].
It is worth mentioning that clients with ESNI enabled must not fall back to cleartext SNI [32] since, otherwise, censors can simply block all ESNI traffic without worrying about the disruption to legitimate traffic.ESNI adoption timeline.
We have summarized ESNI related events in Figure 3.
On September 24, 2018, Cloudflare CDN announced that they had enabled ESNI support on all of their platforms [3].
A week later, Firefox started to support ESNI in their Nightly release.
Since Firefox 64.0, ESNI has been available as a non-default feature in the stable releases.
While there is no official news about Google Chrome's plan to support ESNI, one of the Chromium developers claimed that they expected to add this feature to BoringSSL and Chromium by the end of 2019 [8].
On the other hand, many application and TLS library developers, such as Golang's crypto/tls library, prefer waiting for the widely deployment and adoption of ESNI before implementing it.
1 Meanwhile, no plan to support ESNI is announced by other CDN providers.
Our evaluation on the use of ESNI in censorship circumvention consists of two main experiments.
First, we characterize the role of SNI filtering, comparing it with other commonly used censorship techniques in China.
In the second experiment, we measure the prevalence and effectiveness of ESNI.
To understand the role SNI filtering plays in China's censorship, we measure how different censorship techniques are used to block the Alexa top 1 million websites.
2 Vantage points.
Unless specified, we perform our experiments on two virtual private servers (VPSes) running Ubuntu 16.02 LTS, located in US and China.
We note here that the methods to detect DNS injection and SNI filtering do not require control over any host inside China.
In fact, any server located in China that accepts a full TCP 3-way handshake can help with the SNI filtering detection; any Chinese IP can help with the experiment of DNS injection.
We decide to use servers under our control to conduct the experiment in an accurate, efficient and ethical way.Detecting DNS injection.
Similar to the method used in [14], we send DNS queries from US to China.
Since the destination server in China has no DNS resolving or forwarding functionality, we expect any DNS response to be actually injected by the GFW (Great Firewall of China).
We, therefore, can learn whether a certain domain is censored by DNS injection.
We prepend "www."
to any domain without this prefix, as we observe the GFW only reacts to these refinements for certain domains.
This observation confirms the findings of [14].
Detecting SNI filtering.
Taking advantage of the bidirectional operation of the GFW [35], we probe the GFW remotely from US by sending TLS ClientHello messages with various SNI values.
We configure the destination server in China to accept TCP handshake requests but will never tear down a connection before receiving a FIN or a RST packet.
Therefore, we expect any RST packet sent to our machine in US before the probing times out to be actually injected by the GFW.
We, thus, can learn whether a domain is censored by SNI filtering.We note that a complete TCP 3-way handshake is required before a TLS ClientHello message can trigger the GFW, confirming the GFW is now of full state [17].
We also observe a 60 seconds residual censorship period after the first RST sent by the GFW.
During this period, any SYN packet associated with the 3-tuple (src IP, dst IP, dst port) will trigger a forged SYN/ACK with incorrect sequence number; any other packets will trigger the GFW to send multiple RSTs to both ends.
The duration of this period was reported to be 90 seconds in the previous work [37].
To avoid false positives caused by the residual censorship, we make sure a different destination port is used for each probing within a 60 seconds timing window.Detecting IP blocking.
To reduce the DNS resolving overhead during the probing time, we first resolve each domain to 2 The Alexa Top 1M list was obtained on April 26, 2019.
its ultimate answer via a VPS in Hong Kong.
When multiple IPs are in one answer, we only select the first IP address.We then use Nmap [26] and masscan to SYN-ping the port 80 and port 443 for each IP address from both US and China.
3 For Nmap, we use its T2 and T3 timeout templates.
For masscan, we use its default 30 seconds timeout.
We mark an IP address as filtered when we observe no open port from China, but indeed observe open ports from US control group.
Finally, we mark a domain as blocked-by-IP if its IP address appears on the IP blacklist we generate.Accuracy issues.
Facing the same issue as in many previous measurement works [14], we observe some inevitable false negatives in all three detection experiments.
For example, a forged DNS reply serves as a ground truth that the associated domain is censored.
If no forged reply is triggered by the same DNS query in another test, we know the detection is false negative.
Thanks to the extremely fast speed of our censorship detection tools, we address the issue by running multiple independent tests per day.
We manage to bound the false negative rate of all detection to 6.15 × 10 −9 or lower.
We also observe a 4.99 × 10 −5 false positive rate in the SNI filtering test and manage to reduce it by repeating the experiment after the false negative rate has been bounded.Limitations.
Our work detects censorship from a limited number of vantage points.
Ideally, a complete bipartite graph between all clients and all servers should be formed to show a comprehensive picture of the censorship.
However, we note that no geo-location inconsistency was found in China's censorship by previous work [18].
We resolve domains to their ultimate answers from Hong Kong, rather than Mainland China, to make sure the DNS responses are not injected or poisoned by the GFW.
However, authoritative name servers with GeoDNS enabled may return different answers to machines in different locations.
Although Hong Kong is geographically close to Mainland China, we still further mitigate the potential geo-location bias.
In particular, we send DNS queries to a popular recursive resolver with ECS (EDNS-Client-Subnet) feature disabled.
This way, since the authoritative servers can only assign answers based on the IP of the egress resolver, our answers become more representative.We mark a domain as censored by IP blocking as long as one of its IP addresses is censored.
Ideally, all IP addresses associated with a domain should be tested and the percentage of its blocked IPs should be reported.
We now describe our approaches to measuring the prevalence of ESNI and evaluating its effectiveness in censorship circumvention.
In particular, we measure which websites among the Alexa top 1 million support ESNI, and monitor whether any tested country is blocking ESNI traffic already.Debugging page.
Cloudflare, currently the only major CDN provider supporting ESNI, offers an informative debugging page for every website it hosts.
Specifically, for a given domain named example.com, the path to its debugging page will be https://example.com/cdn-cgi/trace.
The debugging page shows information about the current connection, including the SNI status (e.g, plaintext, encrypted or off), the hostname and the TLS protocol version.Testing tools.
Firefox 64.0 is the first stable release that supports ESNI.
We control it with the help of Geckodriver 0.24.0 and Python3 Selenium library.
4 We configure a Firefox profile that strictly enables ESNI and DNS-over-HTTPS (DoH) and sets https://1.1.1.1/dns-query as the URI for DoH.ESNI prevalence measurement.
For greater efficiency, we first use curl to check the existence of the debugging page for the Alexa top 1 million websites from a VPS located in US.
5 We then let Firefox automatically browse and save those discovered debugging pages.
We mark a website as supporting ESNI when the string "sni=encrypted" appears on its debugging page.
We repeat the test multiple times for each website to bound the false negative rate.
Limitations.
Our work uses one single vantage point in each area to detect censorship associated with ESNI.
Ideally, a complete bipartite graph between all clients and all ESNI supported web servers should be formed to show a comprehensive picture of the ESNI censorship.For each area, we send DNS TXT record queries to one recursive resolver, checking if the expected ESNIKey is provided.
Ideally, all combinations of the 3-tuple (client IP, DNS resolver, domain name) should be tested.
In this section, we discuss the key findings of the study.
We outline the relationships among various censorship techniques and characterize the role of SNI filtering.
We analyze the prevalence and effectiveness of ESNI.
We also report no anomaly associated with ESNI censorship is detected in any area we test.
IP blocking.
We managed to get 539,456 unique IP addresses by resolving 1 million domains multiple times and selecting only the first IP in the answer for each domain.
The relatively low number of unique IP addresses demonstrates the extensive co-hosting of websites on the Internet [34].
We then identify 39,787 sites are blocked by IP in China, revealing IP blocking is the predominant censorship technique.
In other words, assuming both SNI filtering and DNS hijacking censorship have been circumvented, there are still around 84.5% currently censored websites that cannot be accessed in China because their IPs are blocked.
This observation reminds us that censorship circumvention techniques that can hide true destination IP addresses (e.g, proxy [16], decoy-routing [15,22,29]) are still of superior importance.As shown in Figure 4, a large number of websites are exclusively blocked by IP.
We argue, from three different points, that those websites are likely to be the victims of the collateral damage by IP blocking.
First, we take a sample from those websites and manually browse both the sampled websites and the websites co-hosted with them.
While most of the sampled websites appear to be innocent, the websites co-hosted with them indeed serve some obviously sensitive contents.
Second, we can clearly observe from Figure 5 that, while the trend and turning points of the four lines are all very similar, the number of censored websites caused by IP blocking is significantly higher than the other two censorship techniques.
Third, due to the simple and dynamic nature of DNS hijacking, it is usually used as the first choice for many censors [14,35].
Thus, the absence of those websites from the DNS hijacking blacklist strongly suggests they are suffering from the collateral damage of IP blocking.SNI filtering.
We detect that 21,446 sites are under SNI filtering in China.
One interesting observation is that only 70 websites are exclusively censored by SNI filtering.
In other words, SNI filtering is almost always used in a combination with other censorship techniques.
This phenomenon strongly indicates SNI filtering is playing an important role in China's censorship, serving as the third gatekeeper in case DNS hijacking censorship is evaded and IP blocking is less feasible.While the majority of websites under DNS hijacking and SNI filtering overlap, we find 2,764 sites that are under DNS hijacking but not SNI filtering.
Further investigation reveals that some of those websites do not support HTTPS, making SNI filtering inapplicable.
However, we indeed find HTTPS websites that are exclusively censored by DNS hijacking.
This observation not only implies using DoH along with HTTPS can be an effective strategy to unblock many websites, but also suggests that two different blacklists are maintained by the GFW for SNI filtering and DNS hijacking.
Further, although these websites can be easily blocked by adding corresponding domains into the existing SNI blacklist, the lack of actions from censors suggest the inconsistency on GFW administration and may also reflect that censors are relatively satisfied with the current effectiveness of DNS-based censorship.
The core idea of using ESNI as a censorship circumvention strategy is to put the censor into a dilemma of censoring all ESNI traffic or none [19].
Therefore, the prevalence of ESNI can significantly affect the cost for censors to block it [20].
One deterministic factor to the amount of traffic using ESNI is the number of websites supporting ESNI.
We, therefore, measure and evaluate the deployment prevalence of ESNI by checking how many websites are supporting ESNI among the Alexa top 1 million sites.First, we find 109,322 sites have a Cloudflare debugging page, meaning around 10.93% of the top 1 million sites are hosted on Cloudflare CDN.
Further, we determine that around 92.56% sites behind the Cloudflare CDN support ESNI.
As shown in the Table 1, the remaining 7.44% sites only support SNI, or do not support SNI at all.
Part of the reason why those websites do not support ESNI is that they are not using TLS 1.3 or do not support TLS at all.
However, there are still 1.17% sites using TLS 1.3 but not supporting ESNI, which we are not aware of the reasons behind.
We split the Alexa top 1M domains into 10 groups of 100k domains, with group 1 being the top 100k, and group 10 being the bottom 100k.
Figure 6 shows a descending trend of the number of websites supporting ESNI with the increase of ranking range.
This result matches our expectation as popular websites are more likely to need a better quality of service for their visitors and will consequently be more likely to use a CDN to host their sites.
As the ranking of a website is strongly correlated with the amount of traffic it receives [33], Figure 6 may also indicate more TLS traffic can benefit from ESNI.
The key motivation of using ESNI is to prevent the leakage of server names, therefore, it is pointless to discuss ESNI if server names can be leaked via the DNS channel.
We thus assume an encrypted DNS channel exists when analyzing the effectiveness of ESNI.
This assumption implies that the DNS hijacking censorship has been successfully circumvented.Effectiveness in unblocking websites.
Figure 7 demonstrates the relationships among sites under SNI filtering, sites under IP blocking, and sites supporting ESNI.
ESNI can help to unblock a website under SNI filtering only if the IPs of that website are not blocked.
Therefore, represented by the golden color area, currently only 66 websites can be unblocked with the help of ESNI.
However, we argue that the deployment of ESNI is still very promising since it can potentially unblock more than 101K websites in the Alexa top 1 million list.Blocking of CDN IPs.
Previous studies [24,39] assume that the censors may block dedicated CDN IPs but not shared CDN IPs, due to its potentially high collateral damage.
In our measurements, however, we identify 47 blocked IP addresses belonging to Cloudflare, which are shared by at least 85 websites.
This may suggest the censors are likely to block shared CDN IPs if they are used by a manageable set of nonforbidden webpages.
It is vital to the success of ESNI in censorship circumvention that no prevailing censorship actions are taken against it before it becomes too expensive to censor.
In other words, if ESNI traffic gets censored in its early stages, clients and websites will be less motivated to deploy it.
A report claims that ESNI traffic has already been blocked in South Korea [12].
However, we note that no censorship associated with ESNI is observed from our experiments.
Specificly, we are able to successfully access websites using ESNI from all 14 areas we tested, which include Mainland China, Hong Kong, South Korea, Japan, Singapore, Indonesia, India, Iran, United Arab Emirates, France, Netherlands, UK, US and Canada.
We further state no anomaly is observed when obtaining ESNIKeys from the recursive resolvers via DNS TXT record queries.
Be popular.
Fifield [19] summarizes the nature of circumvention as forcing "the censor to trade false positives for false negatives".
To one extreme, the fundamental motivation behind ESNI is to put censors into a dilemma, where they either censor all ESNI traffic or none [20].
Therefore, the success of ESNI crucially depends on its predominant adoption.
More precisely, ESNI should be used in a significant amount of daily TLS connections, rather than being exclusively used for circumvention.
This way, in order to block a relatively small amount of ESNI traffic for circumvention purpose, censors have to take the price of breaking a significant number of Internet services.
Although our experiments show 10.9% of the top 1 million websites are supporting ESNI, as of July 2019, less than 0.01% of TLS ClientHello messages are observed to contain an ESNI extension [9].
This strongly suggests the importance of having more clients and CDN providers supporting ESNI by default.Be quick and quiet.
Strategically, the benefits to censorship evasion brought by ESNI should not be emphasized before ESNI has a significant amount of daily usage.
That is to say, if ESNI traffic gets censored in its early stages by censors who find it threatening, there will be less motivation for application developers and CDN providers to facilitate the deployment of ESNI.
Here we discuss the potential changes and challenges once ESNI is widely deployed.More pressure on third parties.
Suggested by many similar experiences [27,30], when ESNI is widely adopted, it is likely that censors will put more pressure on browser developers and CDN providers, forcing them to do self-censorship [28].
For instance, a large portion of Internet users in China are using re-branded browsers modified by local companies [10].
Those companies are often reported to conduct self-censorship in compliance with the Chinese law, making it not surprising if the ESNI feature is removed from those browsers.
When it comes to CDN providers, previous experience [7] shows censors may bear with a high collateral damage in order to block a large number of IPs, forcing CDN providers to give up supporting ESNI.
Our finding that a few CDN IPs are already blocked also suggests this possibility.Leakage in OCSP.
For completeness, we note the certificate serial number in unencrypted OCSP (Online Certificate Status Protocol) messages can leak the server name [11].
It can be, consequently, exploited for censorship purposes.
In response to the increasing use of SNI filtering in censorship, ESNI is proposed to prevent censors from learning the server names.
Through our work, we manage to understand the nature of SNI-based censorship in China by measuring its prevalence and effectiveness.
We further explore its role in censorship by comparing it with other common censorship techniques.
Our findings outline the overlapping relationships between different censorship methods, revealing the assisting role of SNI filtering in China's Internet censorship.
Experiment results show that 84.5% of the websites censored in China are under IP blocking, indicating a large portion of the websites will remain blocked even when DNS-based and SNI-based censorship is circumvented.
During the probing experiment, we also find the duration of residual censorship by GFW has changed to 60 seconds.
Based on the understanding of SNI filtering, we did the first evaluation on the use of ESNI as a censorship circumvention strategy.
From the experiments, we find around 10.9% of the Alexa top 1 million websites are already supporting ESNI.
Furthermore, while using ESNI along with encrypted DNS channel helps to unblock only 66 websites currently censored in China, we argue the deployment of ESNI is still a promising move as it essentially makes more than 101K websites more censorship-resistant.
Since ESNI is still in its early stages, its fate deeply relies on whether any censorship action is taken against it.
We, therefore, monitor censorship associated with ESNI from 14 areas all around the world.
Contrary to a report claiming ESNI traffic is already blocked in South Korea, no censorship associated with ESNI is detected in any country we tested.Finally, based on the findings from our experiments, we discuss the key factors to the success of ESNI as a censorship circumvention strategy.
We provide speculations on the new challenges we may face once ESNI is widely deployed.
We hope our work will make ESNI a more promising and effective censorship circumvention strategy.We have released all our probing tools and datasets to maintain reproducibility and to benefit future works on censorship measurement, which can be obtained at http:// traces.cs.umass.edu/index.php/Network.
We would like to thank our shepherd Arturo Filastò for his thorough feedback and guidance.
We are also deeply grateful to Philipp Winter, Nguyen Phong Hoang, Milad Nasr, Arian Akhavan Niaki, Wonho Bae, Arun Dunna, and the anonymous reviewers for offering us valuable feedback.
This work was supported by the NSF CAREER grant CNS-1553301.
