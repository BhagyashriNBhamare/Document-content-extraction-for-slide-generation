Previous analytical studies [12], [18] of unstructured P2P resilience have assumed exponential user lifetimes and only considered age-independent neighbor replacement.
In this paper, we overcome these limitations by introducing a general node-isolation model for heavy-tailed user lifetimes and arbitrary neighbor-selection algorithms.
Using this model, we analyze two age-biased neighbor-selection strategies and show that they significantly improve the residual lifetimes of chosen users, which dramatically reduces the probability of user isolation and graph partitioning compared to uniform selection of neighbors.
In fact, the second strategy based on random walks on age-weighted graphs demonstrates that for lifetimes with infinite variance, the system monotonically increases its resilience as its age and size grow.
Specifically, we show that the probability of isolation converges to zero as these two metrics tend to infinity.
We finish the paper with simulations in finite-size graphs that demonstrate the effect of this result in practice.
I. INTRODUCTION Resilience of P2P networks under random user arrival and departure (i.e., churn) has recently become an active research area [9], [10], [11], [12], [13], [14], [15], [22].
One of the primary metrics of resilience is graph disconnection during which a P2P network partitions into several non-trivial sub-graphs and starts to offer limited service to its users.
However, as shown in [13], most partitioning events in well-connected P2P networks are single-node isolations, which occur when the immediate neighbors of a node v fail before v is able to detect their departure and then replace them with other alive users.
For such networks, node isolation analysis has become the primary method for quantifying network resilience in the presence of user churn.
Traditional analysis of node isolation [12], [13] focuses on the effect of average neighbor-replacement delay E[S], average user lifetime E[L], and fixed out-degree k on the resilience of the system.
These results show that probability φ with which each arriving user is isolated from the system during its lifetime is proportional to kρ(1+ρ) −k , where ρ = E[L]/E[S].
While this result is asymptotically exact under exponential user lifetimes and uniform neighbor selection, it remains to be investigated whether stronger results can be obtained for heavy-tailed lifetimes and/or non-uniform neighbor selection.
We study these questions below.
Resilience of P2P networks under random user arrival and departure (i.e., churn) has recently become an active research area [9], [10], [11], [12], [13], [14], [15], [22].
One of the primary metrics of resilience is graph disconnection during which a P2P network partitions into several non-trivial subgraphs and starts to offer limited service to its users.
However, as shown in [13], most partitioning events in well-connected P2P networks are single-node isolations, which occur when the immediate neighbors of a node v fail before v is able to detect their departure and then replace them with other alive users.
For such networks, node isolation analysis has become the primary method for quantifying network resilience in the presence of user churn.Traditional analysis of node isolation [12], [13] focuses on the effect of average neighbor-replacement delay E [S], average user lifetime E [L], and fixed out-degree k on the resilience of the system.
These results show that probability φ with which each arriving user is isolated from the system during its lifetime is proportional to kρ(1+ρ) −k , where ρ = E[L]/E [S].
While this result is asymptotically exact under exponential user lifetimes and uniform neighbor selection, it remains to be investigated whether stronger results can be obtained for heavy-tailed lifetimes and/or non-uniform neighbor selection.
We study these questions below.
The main focus of this paper is to understand node isolation in the context of unstructured networks (such as Gnutella) * Supported by NSF grants CCR-0306246, ANI-0312461, CNS-0434940, and CNS-0519442.
where neighbor selection is not constrained by fixed rules.
As in [12], we assume that each arriving user is assigned a random lifetime L drawn from some distribution F (x) and is given k initial neighbors randomly selected from the system.
The user then constantly monitors and replaces its neighbors to avoid isolation from the rest of the system.
Random replacement delay S is needed to detect the failure of an old neighbor and find a new one from among the remaining alive users.
Unlike [12], we allow L to come from any distribution (e.g., Pareto, Weibull), as long as E[L] < ∞, and neighbor selection to be arbitrary, as long as the stationary distribution H(x) of residual lifetimes R of selected neighbors is known.We first build a generic isolation model that allows computation of φ with arbitrary accuracy for any completely monotone density function of residual lifetimes R.
This result is achieved by replacing H(x) with a hyper-exponential distribution, which can be performed with any accuracy, and then solving the resulting Markov chain for the probability of absorption into the isolation state before the user decides to leave the system.
While this model only admits a numerical solution through matrix manipulation, it allows very accurate computation of φ for very heavy-tailed cases when the exponential upper bound φ ≤ kρ(1+ρ) −k [12] is rather loose.
The model is also necessary for studying isolation behavior of the various neighbor-selection strategies examined in later parts of the paper where simulations are impractical or impossible due to the small values of φ.The second part of the paper verifies the model of φ under uniform neighbor replacement and analyzes its performance for very heavy-tailed lifetimes (i.e., V ar[L] = ∞).
We show that as the age T of the system becomes infinite and the Pareto shape parameter α approaches 1, the isolation probability decays to zero proportionally to (α − 1) k , which holds for any number of neighbors k ≥ 1 and any search delay S, implying that such systems may achieve arbitrary resilience without replacing any neighbors.
In practice, however, α is a fixed number bounded away from 1 (common studies [1] suggest α = 1.06) and T is finite, which cannot guarantee high levels of robustness without neighbor replacement.As an improvement over the uniform case, we next study the so-called max-age neighbor selection [1], [11], [25], in which a user samples m uniformly random peers per link it creates and selects the one with the largest current age to be its neighbor.
We show that larger values of m lead to stochastically larger R and improve the expected remaining lifetimes of found neighbors by a factor proportional to m 1/(α−1) for non-trivialm.
For example, α = 3 increases E[R] as √ m, α ≈ 2 increases E[R]linearly in m, and α < 2 results in E[R] = ∞ regardless of m as long as T = ∞.
We do not obtain a closedform factor of reduction for φ compared to the purely uniform case, but note that it is a certain monotonic function of m.
This does not change, however, the qualitative behavior of φ under the no-replacement policy and still requires α → 1 to achieve φ → 0 for any fixed m.
While the max-age approach is viable and very effective in general, it relies on the system's ability to sample m peers uniformly randomly per created link.
This can be accomplished using Metropolis-style random walks [31]; however, the overhead may not scale well for large m. To build a distributed solution that requires only one sample per link, the last part of the paper proposes a novel technique based on random walks over directed graphs, in which the weight of in-degree edges at each node is kept proportional to the age of the corresponding user.
Under these conditions, we derive a model for the residual distribution H(x) and show that isolation probability φ converges to 0 for any 1 < α ≤ 2 as system size n → ∞ and age T → ∞, which holds for any number of neighbors k ≥ 1 and any search delay S. Compared to the uniform and max-age cases, this is a much stronger result that shows that with just k = 1 neighbor and no replacement of failing neighbors, large P2P systems with α ≤ 2 can guarantee arbitrarily low values of φ.
We finish the paper by studying in simulations the approach rate of φ to 0 and its effect in practice.The rest of the paper is organized as follows.
Section II introduces a generic isolation model for non-exponential lifetimes and verifies it in simulations.
In section III, we formalize max-age neighbor replacement and derive the corresponding residual lifetime distributions.
Section IV discusses random walks on age-weighted graphs and studies the asymptotic effect of 1 < α ≤ 2 on isolation probability.
Section V discusses related work and section VI concludes the paper.
In this section, we build a model for the probability φ that a node v becomes isolated due to all of its neighbors simultaneously reaching the failed state during its lifetime.
While closed-form derivation of φ for systems with non-exponential user lifetimes is difficult, certain cases identified below can be solved with arbitrary accuracy by replacing residual lifetimes and search delays with their hyper-exponential equivalents.For the churn model, we adopt the conventions of [12], but relax the assumptions of uniform neighbor selection and exponential lifetimes.
Denote by W (t) the out-degree of a node v at time t.
The rest of this section deals with constructing a continuous-time Markov chain for the degree process {W (t)}, which allows us to obtain an accurate model of φ.
Recall that the hyper-exponential distribution H m is a mixture of m exponential random variables with probability density function (PDF) in the form of [28]:f H (x) = m j=1 p j µ j e −µ j x ,(1)where µ j , p j ≥ 0 for all j and m j=1 p j = 1.
The above distribution can be interpreted as generating each exponential random variable exp(µ j ) with probability p j .
It is well-known [5] that any completely monotone density function f (x) can be represented with any desired accuracy using (1), i.e., f H (x) → f (x) as m → ∞.
In the analysis below, we leverage this property of hyper-exponentials and the fact that Pareto and Weibull residual PDFs are completely monotone.
While some of the prior literature [5] has used as many as 14 exponentials to approximate Pareto f (x), our analysis suggests that as few as 3 are usually sufficient for achieving very accurate results on φ (see below).
Before we proceed with the derivations, it is useful to visualize the meaning of hyper-exponential distributions in our lifetime model.
Assume that there are r different types of neighbors, where residual lifetimes of peers of type 1 ≤ i ≤ r are exponentially distributed with rate µ i .
When v requires a new neighbor, it selects a node of type i with probability p i .
Similarly, assume that there are s types of searches that can be currently in progress.
A search of type 1 ≤ j ≤ s is instantiated by v with probability q j and has duration exponentially distributed with rate λ j .
As long as neighbor residual lifetimes R and search delays S can be reduced to the hyper-exponential distribution, the resulting process {W (t)} can be viewed as a homogenous continuous-time Markov chain as we show next.Denote each state u of {W (t)} for any given user v by:u = (x 1 , ..., x r , y 1 , ..., y s ),(2)where x i is the number of v's neighbors of type i, y j is the number of searches in progress of type j, 0 ≤ x i ≤ k, 0 ≤ y j ≤ k, and r i=1 x i + s j=1 y j = k. Also notice that out-degree W (t) can be represented as r i=1 x i .
The next theorem specifies that {W (t)} is a Markov chain and derives its transition rate matrix.Theorem 1: Given that the density function of residual lifetimes f R (t) = r j=1 p j µ j e −µ j t and the density function of search times f S (t) = s j=1 q j λ j e −λ j t , {W (t)} is a homogeneous continuous-time Markov chain with a transition rate matrix Q = (q uu ), whereq uu =          q j x i µ i (x i , y j ) → (x i − 1, y j + 1) p i y j λ j (x i , y j ) → (x i + 1, y j − 1) −Λ u u = u 0 otherwise ,(3)u and u represent any suitable states in the form of (2) that satisfy transition requirements on the right side of (3), andΛ u = r i=1 x i µ i + s j=1 y j λ j .
The next step is to obtain the initial state distribution of {W (t)} and derive the PDF of the first-hitting time on state W (t) = 0 based on the transition rate matrix Q in (3).
For small values of k, the matrix can be easily represented in memory and manipulated in software packages such as Matlab.
For example, when r = s = 3 commonly used in this work, the size of Q is 252 × 252 for k = 5 and 792 × 792 for k = 7.
The initial state distribution π(0) is in form of:π(0) = π (x 1 ,...,x r ,y 1 ,...,y s ) (0) ,(4)where each entry in the vector represents the probability that the chain starts in state (x 1 , ..., x r , y 1 , ..., y s ) for all possible permutations of variables x i and y j .
Note, however, that the only valid starting states are those in which the number of alive neighbors r i=1 x i is exactly k and the number of searches in progress s j=1 y j is zero.
After rather straightforward manipulations, π(0) can be obtained as follows.Lemma 1: Valid starting states have initial probabilities:π (x1,...,xr,0,...,0) (0) = r i=1 k − i−1 j=1 x j x i p x i i ,(5)and all other states have initial probability 0.
Model (5) is verified in simulations that are not shown here for brevity.
Armed with this result, we next focus our attention on deriving φ.
Denote by T the first-hitting time of {W (t)} onto state 0:T = inf(t > 0 : W (t) = 0|W (0) = k).
(6)The goal of this subsection is to derive the distribution of T , based on which we obtain φ = P (T < L).
In general, it is convenient to treat {W (t)} as an absorbing Markov chain in order to derive the PDF of T .
To this end, let Ω denote the set of all valid states (i.e., in the form of (2) and satisfying all constraints following the equation) andE = (0, ..., 0, y 1 , ..., y s ) : s j=1 y j = k (7)be the set of all absorbing states.
Then, for each non-absorbing state u ∈ Ω \ E, its transition rate to E is given by:q uE = u ∈E q uu ,(8)where q uu is the cell of matrix Q corresponding to transitions from state u to u .
We can then write Q in canonical form as:Q = 0 0 r Q 0 ,(9)where r = (q uE ) T for u ∈ E is a column vector representing the transition rates to the absorbing set E and Q 0 is the rate matrix obtained by removing the rows and columns corresponding to states in E from Q.
The following lemma shows that the PDF of T is fully determined by π(0) and Q. Lemma 2: For residual lifetimes and search delays with hyper-exponential distributions, the PDF of T is given by:f T (t) = π(0)V D(t)V −1 r,(10)whereπ(0) is the initial state distribution in (5), V is a matrix of eigenvectors of Q 0 , D(t) = diag(e ξ j t ) is a diagonal matrix, ξ j ≤ 0is the j-th eigenvalue of Q 0 , and Q 0 and r are in (9).
With Lemma 2 in hand, integrating f T (t) using the distribution of user lifetimes immediately leads to the following theorem.Theorem 2: For hyper-exponential residual lifetimes and search delays, the probability of isolation is:φ = π(0)V BV −1 r,(11)where B = diag(b j ) is a diagonal matrix with:b j = ∞ 0 (1 − F (t))e ξ j t dt,(12)F (t)is the CDF of user lifetimes, and all other parameters are the same as in Lemma 2.
Using rate matrix Q 0 , vector r, and (11)- (12), the solution to node isolation probability φ can be easily computed using numerical packages such as Matlab.
We perform this task next.
We examine the accuracy of (11)- (12) using the simplest example of uniform selection.
We first explore the exponential case for comparison purposes and then derive the same metric for Pareto lifetimes.
For exponential lifetimes, the next lemma immediately follows upon recalling that neighbor residual lifetimes R are also exponentially distributed with m = 1 in (1) due to the memoryless property of the distribution.Lemma 3: For exponential L ∼ exp(µ) and search delays with a hyper-exponential density f S (x), (12) is simply:b j = 1/(µ − ξ j ).
(13)Our next theorem derives φ for Pareto lifetimes with CDF1 − (1 + x/β) −α for α > 1, x ≥ 0.
Denote by R the residual lifetime of a uniformly random user in the system.
Assuming a sufficiently large system age T , it follows from [12] that the CDF of R under uniform selection is given by:P (R < x) = 1 − 1 + x β −(α−1) .
(14)It is clear from (14) that the PDF of Pareto residuals is completely monotone and thus can be fitted with its hyperexponential equivalent.
Invoking Theorem 2, we immediately obtain the following.Lemma 4: For Pareto L ∼ 1 − (1 + x/β) −α and hyperexponential search delays, (12) becomes:b j = βe −ξ j β E α (−ξ j β),(15)whereE α (x) = ∞ 1 e −xu u −α du is the generalized exponen- tial integral.Next, we run simulations to verify these results.
Simulations are performed over different distributions of search times on a graph with n = 1, 000 nodes, k = 7, and mean lifetime E[L] = 0.5 hours (additional simulations produce similar results and are omitted for brevity).
The first search time distribution is Pareto with α = 3 and β = E[S](α−1) to keep the mean equal to E [S].
The second distribution is Weibull with CDF 1 − e −(x/a) c and mean E[S] = aΓ(1 + 1/c).
The third is exponential with rate 1/E [S].
To compute the model, Pareto residual lifetime R is fitted with a hyper-exponential mixture model (1) using r = 3 and each non-exponential search distribution is fitted with model (1) using s = 3.
Exponential and Pareto models of φ are compared to simulation results in Table I. Notice in the table that both (13) MODEL φ TO SIMULATIONS UNDER UNIFORM SELECTION WITH E[L] = 0.5 HOURS AND k = 7 E[S]Pareto L with α = 3 Exponential L hoursPareto S with α = 3 Weibull S with c = 0.7 Exponential S Pareto S with α = 3 SimulationsModel (15 and (15) are indeed very accurate for all examined search and lifetime distributions.
The table also confirms that as E[S] → 0, metric φ becomes insensitive to the distribution of S, which was earlier observed in [12] but never verified.To understand the influence of tail weight of the lifetime distribution F (x) on isolation, we use (15) to compute φ for several values of shape parameter α and keep β = (α−1)E [L] to ensure that the mean lifetime E[L] remains fixed.
The result is shown in Fig. 1 for two values of E[S] and k = 7.
Notice in both sub-figures that the relationship between φ and α is similar and that φ appears to be approximately a logarithmic function of α for α ≤ 21, confirming that the more heavytailed the lifetime distribution, the smaller φ.
Fig. 1 suggests that φ tends to 0 as α approaches 1 from above, but it is not clear at what rate this convergence takes place and whether this is indeed true.
Furthermore, since E[R] = ∞ for α ≤ 2, a natural question arises about whether a finite system of n users and finite age T can in fact exhibit infinite expected residuals or φ = 0 when α = 1.
We answer these questions next and show that condition α → 1 indeed guarantees φ → 0 even in cases when no replacement of failed neighbors is performed; however, it requires that the system be in equilibrium 1 by the time it is observed by an arriving user.
1 The first renewal cycle of each user must be drawn from its residual distribution or system age T be infinite.
See [28, page 65] for a definition.
Theorem 3: For an equilibrium system, Pareto lifetimes with α > 1, and infinitely large search delays (i.e., S = ∞), the isolation probability is: φ = k!
(γ + 1) × . . . × (γ + k) ,(16)where γ = α/(α − 1).
For fixed k and α → 1 (i.e., γ → ∞), (16) converges to zero as Θ(γ −k ).
This result is very interesting since most prior work [12] does not consider α ≤ 2 as such cases result in infinite expected residual lifetimes, which cannot be observed in any finite system.
However, if the age of the system tends to infinity, i.e., T → ∞, or the first lifetime of each user is drawn from the residual distribution (14), the asymptotic bound in (16) is actually achievable.
In such cases, as α tends to 1, the isolation probability will decay to zero proportionally to (α − 1) k as given by Theorem 3 and the system will attain any desired level of resilience without replacing neighbors.
On the other hand, for α sufficiently larger than 2 studied in prior work [12], age T must simply exceed the convergence time to equilibrium of the underlying user-lifetime renewal process, which usually happens very quickly.
Fig. 2 shows simulation results of φ with S = ∞ and two values of very heavy-tailed α.
Notice in Fig 2(a) that for α = 1.5, simulation results converge to model φ before system age reaches 10 4 hours (i.e., 1.14 years).
However, as α reduces to 1.2, the convergence takes a much longer time as shown in Fig 2(b), where simulations approach the model when system age grows to more than T = 10 6 hours = 114 years.The above analysis shows that the asymptotic result φ → 0 as α → 1 is not readily achievable in finite P2P systems.
Furthermore, recent measurement studies of user lifetimes suggest that P2P networks exhibit α that is bounded away from 1 (e.g., α = 1.06 in [1]).
Hence, most current P2P systems are not likely to satisfy the condition for φ → 0 under uniform selection and thus need to utilize either a large number of neighbors k or perform dynamic replacement of dead links with E[S] ∞.
While the general form of φ in the exact model (11) is very complex, a simple qualitative rule of increasing resilience (i.e., reducing φ) can be formulated based on the properties of residual lifetimes selected by the users of a P2P system.
Notice that for a fixed lifetime distribution F (x), higher resilience is achieved by selecting neighbors that exhibit larger (in some sense) remaining lifetimes.
Thus, given two strategies S 1 and S 2 for selecting neighbors, the strategy that obtains a neighbor with a larger residual lifetime during every replacement instance τ guarantees a lower isolation probability since the chosen neighbors survive longer and increase the chance that the current user will depart before becoming isolated.
Since comparison of residual lifetimes of obtained neighbors in S 1 and S 2 can be performed only in the probabilistic sense, the above discussion can be formalized as following: strategies that produce stochastically larger 2 distributions of residuals guarantee lower isolation frequency and higher resilience.Note, however, that future residual lifetimes of sampled peers are usually not available in practice.
Instead, assuming that F (x) is not memoryless (i.e., non-exponential), current user age A may be used as a robust predictor of R. To understand this correlation for Pareto F (x), consider the probability that a peer's remaining lifetime is larger than y ≥ 0 given that its current age A is x ≥ 0:P (R > y|A = x) = 1 + y β + x −α .
(17)Observe that the above conditional probability is a monotonically increasing function of age, i.e., the larger x, the more likely a node is to survive at least y time units in the future.
This implies that users with larger age demonstrate stochastically larger residual lifetimes R.
This result can be generalized to all heavy-tailed distributions (defined in terms of conditional mean exceedance [8] or tail-decay rate [27], e.g., Pareto, Weibull, and Cauchy), in which the expected remaining lifetime increases and R becomes stochastically larger with age.
In contrast, light-tailed distributions (e.g., uniform and Gaussian), exhibit expected residual lifetimes that are decreasing functions of age.
Finally, for the exponential distribution, age does not affect residual lifetimes and hence does not provide any useful information for neighbor selection.Armed with these observations and prior measurement results that demonstrate heavy-tailed user lifetimes in real P2P systems [1], the rest of the paper explores two simple neighbor-selection methods that rely on age of existing peers to increase network resilience.
Recall that under uniform selection, each alive user is chosen by an arriving node v with the same probability.
To prevent v from connecting to weak neighbors that are about to depart (i.e., users with short remaining lifetimes), this section leverages the heavy-tailed nature of the lifetime distribution F (x) and models the max-age neighbor-selection strategy proposed in [1], [11], [25].
In this approach, a joining node v uniformly randomly selects m alive users from the system and chooses the user with the maximal age.
It then repeats this procedure k times to obtain its k initial neighbors.
The same process is executed every time a dead link is detected.In what follows in this section, we first analyze the distribution of residuals obtained by the max-age method and then discuss the corresponding isolation probability φ.
Denote by Ω m the set of m candidate nodes, by U m the residual lifetime of the max-age user in Ω m , and by H c (x) = P (U m > x) the CCDF of random variable U m .
Then, we get:H c (x) = P R i > x|A i = max j∈Ω m {A j } ,(18)where A i is the current age of a user i in Ω m and R i is its residual lifetime.
Intuitively, (18) states that U m equals R i given that user i has the maximum age in Ω m .
Next, from renewal process theory, the equilibrium age distribution of existing users in the system is [21]:F A (x) = P (A < x) = 1 E[L] x 0 (1 − F (u))du,(19)where E[L] < ∞.
The following theorem shows that H c (x) is fully determined by the number of sampled users, lifetime distribution F (x), and age distribution F A (x).
Theorem 4: Given that a user's age is larger than that of m−1 uniformly selected alive users in the system, its residual lifetime has the following CCDF:H c (x) = m E[L] ∞ 0 (1 − F (x + y))F m−1 A (y)dy,(20)where F A (x) is given by (19).
Next, we use exponential lifetimes as an example to verify (20).
Using F (x) = F A (x) = 1 − e −µx , (20) reduces to:H c (x) = mµ ∞ 0 e −µ(x+y) (1 − e −µy ) m−1 dy = e −µx .
(21)Hence, it follows from (21) that for exponential lifetimes:P (U m > x) = P (L > x) = e −µx , for any m ≥ 1, (22)which is consistent with the memoryless property of the exponential distribution.
Substituting Pareto lifetimes into (20), we obtain: (28) to (26) Fig. 3.
Accuracy of models (23) and (28) whereH c (x) = m E[L] ∞ 0 1+ x + y β −α 1− 1+ y β 1−α m−1 dy,(23)E[L] = β/(α − 1).
Although no closed-form solution for (23) exists in the general case, we next perform a self-check using m = 1.
Note that for m = 1, (23) yields:H c (x) = α − 1 β ∞ 0 1+ x + y β −α dy = 1+ x β 1−α ,(24)which indicates that P (U 1 > x) = P (R > x) (i.e., maxage selection with m = 1 reduces to single-user uniform selection).
Our next result shows that U m is stochastically larger than U m−1 for any heavy-tailed F (x) and any m ≥ 2.
Theorem 5: For any distribution in which larger age implies stochastically larger residuals (i.e., function (17) is monotonically increasing in x), the following holds:P (U m > x) ≥ P (U m−1 > x), x ≥ 0, m ≥ 2.
(25)Simulation results in Fig. 3(a) show for m = 6 that model (23) is very accurate and random variable U 6 is indeed stochastically larger than R (simulations with other m and those confirming (25) are omitted for brevity).
Next, we solve for the expectation of U m in closed-form for Pareto lifetimes and show the effect of m on the average residual lifetimes of selected neighbors.Lemma 5: For Pareto L ∼ 1 − (1 + x/β) −α , α > 2, the expectation of U m is given by:E[U m ] = βm!Γ( α−2 α−1 ) (m(α − 1) − 1)Γ(m − 1 α−1 ) , m ≥ 1,(26)where Γ(x) is the gamma function.
For α ≤ 2, the expected residual lifetime converges to infinity as system age T becomes large:lim T →∞ E[U m ] = ∞, m ≥ 1.
(27)To better understand the effect of m on the mean of U m , we approximate E[U m ] as follows.
Setting c = Γ( α−2 α−1 ) and expanding the gamma function in the denominator, (26) for α > 2 yields:E[U m ] ≈ cE[L] m + 1 α 1/(α−1) .
(28)We next discuss several examples that use (28) (28) that as shape parameter α tends to infinity, the impact ofm on E[U m ] is weakened and E[U m ] → E[L], which confirms a well-known fact [12] that Pareto lifetimes with very large α behave as exponential random variables.Model (26) is confirmed to be exact using simulations not shown here due to limited space.
Fig. 3(b) shows the accuracy of the match between E[U m ] predicted by the exact model (26) and that by the approximate model (28) for α = 3.
Additional examples with smaller α are omitted for brevity.
To obtain model φ, we approximate the tail of U m in (20) with its hyper-exponential equivalent in (1) and then compute φ by applying Theorem 2 as in Section II-C.
Fig. 4 shows φ predicted by the model compared to simulations for Pareto lifetimes with E[L] = 0.5 hours, k = 7, exponential search delays, and two values of m.
As the figure illustrates, the derived result is very accurate and indeed shows inversely proportional dependency between the number of sampled users m and φ.
The influence of m on isolation probability for Pareto lifetimes is presented more clearly in Fig. 5.
As the trendlines show, φ is approximately a power-law function m −a for each fixed E [S], where exponent a is 2.4 − 5.7 in the figure.
Thus, for α = 3, m = 10 sampled users reduce φ by a factor of 251 and m = 30 by a factor of 3, 508; however, for α = 2, m = 10 drops φ by a factor of 489, 000 and m = 30 by a factor of 2.5 billion.
Interestingly, while E[U m ] may exhibit an unimpressive growth as a function of m (i.e., linear or slower), the corresponding φ demonstrates much faster decay rate and almost always provides significant benefits as m increases.In systems that do not replace neighbors and α → 1, the limiting isolation probability in (16) leads to no novel discussion.
In the next section, however, we develop another neighbor selection framework that guarantees a much stronger result in which φ converges to zero for any 1 < α ≤ 2, any number of neighbors k ≥ 1, and any search delay as system age and size tend to infinity.
An additional reason for improving the max-age method in the next section is the difficulty of implementing uniform neighbor selection in decentralized P2P networks without global knowledge at each node.
Distributed methods of uniform sampling of users exist [6], [31]; however, they require either k-regular graphs [6] or complex walk patterns [31].
In both cases, max-age selection forces a user to sample m peers to obtain a single neighbor and may not scale well for large m.
In contrast, the method we describe below needs only one sample per neighbor and operates in graphs with irregular degree distributions.
In this section, we first introduce a new neighbor selection strategy that is based on random walks over weighted directed graphs and then deal with the distribution of neighbor residual lifetimes and the corresponding isolation probability.
We start by designing a simple random-walk algorithm, which we call age-weighted, whose stationary distribution π ensures that the probability that a user u is selected by another peer is proportional to u's current age.
Recall that a directed graph G = (V, E) consists of a vertex set V and edge set E (note that we use notation G instead of G(t) at time t under the assumption that G remains the same while a random walk is performed).
Let u → v represent a directed link (u, v) ∈ E, N + u = {v ∈ V : u → v} be the set of out-degree neighbors of u, and N − u = {v ∈ V : u ← v} be the set of in-degree neighbors of u. Further define A u to be the age of user u and set the weight of each incoming edge v → u at node u to be u's age normalized by the number of in-degree neighbors:w(v, u) = A u |N − u | .
(29)It then follows that the in-degree d − u of u is simply its age:d − u = v∈N − u w(v, u) = A u ,(30)and its out-degree d + u is the sum of normalized ages of its out-degree neighbors:d + u = v∈N + u w(u, v) = v∈N + u A v |N − v | .
(31)Then, age-weighted random walks are executed by alternating between walking along incoming and outgoing edges as we describe next.
Given that the walk is currently at node u, the first jump is performed to an in-degree neighbor h of u, h ∈ N − u , with probabilityp uh = w(h, u) d − u .
(32)The second jump is performed to an out-degree neighbor v of h with probability:p hv = w(h, v) d + h .
(33)It is clear that the transition probability from u to v isp uv = h∈N − u p uh p hv .
After the two jumps, v becomes the current node and this procedure repeats.
Each step consists of two jumps, the node reached after l steps is selected as the neighbor of the current user.
As shown in [32], the stationary distribution of this random walk is given by π = (π u ), whereπ u = d − u / v∈V d − v .
Recalling (30), we immediately obtain that age-weighted random walks achieve the desired distribution:π u = A u v∈V A v , for all u ∈ V.(34)The starting point of a random walk is determined as follows.
Each new user executes a random walk starting from an alive user obtained through bootstrap, while each existing user uniformly randomly selects one of its currently alive out-degree neighbors as the initial point of the walk.
Note that if a node does not have any incoming edges, it will never be selected by our walk.
To avoid this situation, we alternate between ending walks with an in-degree and an out-degree jump, which gives new users an opportunity to receive incoming edges.
Simulations below use random walks of l = 10 steps as further increasing l does not result in measurable improvements in π for the cases considered in this paper.
Denote by Z the residual lifetimes of neighbors obtained by age-weighted random walks and by H c (x) = P (Z > x) its CCDF.
Assuming that the walk is executed for longer than the mixing time of the chain corresponding to the underlying graphs [16], we obtain the distribution of Z in the next theorem.Theorem 6: Given that (34) holds for age-weighted random walks, neighbor residual lifetime Z has the following CCDF: It is easy to show that for exponential lifetimes, (35) reduces to 1 − F (x), again confirming the memoryless property of exponential distributions.
For Pareto lifetimes, the CCDF of Z is also very simple as we show in the next lemma.H c (x) = 1 E[L]E[A] ∞ 0 y(1 − F (x + y))dy, (35) for E[L] < ∞ and mean user age E[A] < ∞.
Lemma 6: For Pareto lifetimes L ∼ 1 − (1 + x/β) −α with α > 2, the CCDF of Z is given by:H c (x) = 1 + x β −(α−2) .
(36)For 1 < α ≤ 2, Z converges in probability to ∞ as system age T and size n both tend to ∞.
Note that for α > 2, the PDF of Z is completely monotone and thus suitable for our hyper-exponential model.
Also notice that Z is stochastically larger than residual lifetimes R under uniform selection for all choices of α.
In fact, Z shifts the shape of the Pareto distribution from α to α − 2, which is not achievable under max-age selection even as m → ∞.
Furthermore, for 1 < α ≤ 2, residuals Z tend to a defective random variable with all mass concentrated at +∞ as system size and age become infinite.
This shows that in asymptotically large systems, Z exceeds any lifetime L with probability 1 and no user suffers isolation (more on this below).
To obtain model φ under age-weighted random-walk selection, we fit the distribution of Z shown in (36) with its hyperexponential equivalent and then invoke Theorem 2 to solve for φ.
Next, we test the accuracy of model φ in simulations where n = 8, 000 nodes join and leave the system at random instances and each node performs age-weighted random walks to find its neighbors.
As shown in Fig. 6, simulation results are very close to the values predicted by theoretical φ.
Examples showing the relationship between of φ and α are presented in Fig. 7.
As shown in Fig. 7(a), simulation results are consistent with model φ under a variety of values α that allow quick simulations and do not require very large T or n (i.e., α ≥ 3).
It is interesting to observe in the figure that as α decreases, the gap between φ under age-weighted random walks and that under uniform selection drastically increases and reaches a factor of 10 4 for α = 2.5.
This shows that age-weighted random walks are extremely effective in systems with very heavy-tailed lifetimes (i.e., α below 2.5).
Fig. 6(b) shows that the same conclusion holds for E[S] = 3.6 seconds, in which case φ is on the order of 10 −20 and only allows computation using the model since simulations are impractical for such small probabilities.The most intriguing result shown in Fig. 7 is that φ tends to 0 as α converges to 2 from above.
However, as before, this convergence requires that system age tend to infinity.
In addition, the following result states that system size n must also be infinite to obtain φ = 0.
Theorem 7: For age-weighted random walks, Pareto lifetimes with 1 < α ≤ 2, any number of neighbors k ≥ 1, and any type of search delay (including S = ∞), the isolation probability converges to zero as system age T and size n approach infinity: lim n→∞ lim T →∞ φ = 0.
Note that Theorem 7 is a much stronger result than Theorem 3 since φ under uniform selection does not asymptotically approach 0 for any fixed α ∈ (1,2].
However, the asymptotic result of this section is more difficult to achieve since it requires not only an equilibrium system, but also an infinitely large user population.We finish this section by examining age-weighted random walks under finite T and n using several values of 1 < α ≤ 2.
For such cases, recall from Lemma 6 that Z converges in probability to ∞; however, initial analysis shows that the convergence rate of Z → ∞ and φ → 0 can only be expressed using complex Appell hypergeometric functions [4] of T and n for which no closed-form expansion exists.
We leave this task for future work and instead show simulations of φ in Fig.
8 as T becomes large (n is kept equal to T /10).
For both values of α, the figure shows that φ monotonically decreases as system age T increases.
In fact, for k = 7, the system achieves isolation probability below 10 −7 without replacing neighbors at T = 30, 000 hours and n = 3, 000 users.
Additional simulations with k = 7 suggest that increasing n to over 1 million users and keeping the age around 1 year will produce φ sufficiently small for most large-scale networks today.
Construction and maintenance of overlay networks consists of initial neighbor selection and subsequent replacement of dead links.
Many P2P systems, including structured [19], [26], [30], [23] and unstructured [2], [24], [17], perform neighbor selection and replacement to achieve the desired routing efficiency and search performance in the face of node joins and departures.
Previous work has used proximity-based neighbor selection to reduce lookup latency [7], [20], [29], [17], capacity-based selection to improve system scalability [2], [11], and age-biased neighbor preference to improve reliability of the system [1], [11], [25].
Additional studies have analyzed the tradeoffs between resilience and proximity [3] as well as studied how well different neighbor selection and recovery strategies could handle churn in DHTs [22].
Finally, only a handful of modeling studies of user isolation and neighbor selection under churn exist [9], [12], [15], [18] and they are mostly limited to exponential user lifetimes and centralized (age-unrelated) user replacement.
This paper derived a general model of resilience for unstructured P2P networks under heavy-tailed user lifetimes and formally analyzed two age-dependent neighbor-selection techniques.
Our results show that the proposed random-walk method may achieve any desired level of resilience without replacing the neighbors as long as 1 < α ≤ 2 and system size n and age T are sufficiently large.
This indicates that P2P systems under proposed neighbor selection and very heavy-tailed lifetimes (i.e., α < 2) become progressively more resilient over time and asymptotically tend to an "ideal" system that never disconnects as users join the network.Future work includes derivation of residual lifetime distributions in finite systems under age-weighted walks and analysis of the limiting distribution of U m as m → ∞.
