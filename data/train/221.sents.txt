The amount of biological data publicly available has experienced an exponential growth as the technology advances.
Online databases are now playing an important role as information repositories as well as easily accessible platforms for researchers to communicate and contribute.
Recent research projects in image bioinfor-matics produce a number of databases of images, which visualize the spatial expression pattern of a gene (eg.
"fj"), and most of which also have one or several annotation keywords (eg., "embry-onic hindgut").
C-DEM is an online system for Drosophila (= fruit-fly) Embryo images Mining.
It supports queries from all three modalities to all three, namely, (a) genes, (b) images of gene expression, and (c) annotation keywords of the images.
Thus, it can find images that are similar to a given image, and/or related to the desirable annotation keywords, and/or related to specific genes.
Typical queries are what are most suitable keywords to assign to image insitu28465.jpg or find images that are related to gene "fj", and to the keyword "em-bryonic hindgut".
C-DEM uses state-of-the-art feature extraction methods for images (wavelets and principal component analysis).
It envisions the whole database as a tri-partite graph (one type for each modality), and it uses fast and flexible proximity measures, namely, random walk with restarts (RWR).
In addition to flexible querying, C-DEM allows for navigation: the user can click on the results of an earlier query (image thumbnails and/or keywords and/or genes), and the system will report the most related images (and keywords, and genes).
The demo is on a real Drosophila Embryo database, with 10,204 images, 2,969 distinct genes, and 113 annotation keywords.
The query response time is below one second on a commodity desktop.
The goal of the C-DEM system is to provide a flexible way of querying and navigating large databases with biological images, and specifically annotated Drosophila (= fruit-fly) embryo images.
The problem has several challenges: (a) the ideal system has to be multi-modal, because we want multiple data types (images, text Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the VLDB copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Very Large Data Base Endowment.
To copy otherwise, or to republish, to post on servers or to redistribute to lists, requires a fee and/or special permission from the publisher, ACM.
VLDB '08, August 24-30, 2008, Auckland, New Zealand Copyright 2008 VLDB Endowment, ACM 000-0-00000-000-0/00/00.
Permission to make digital or hard copies of portions of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.
Copyright for components of this wor k owned by others than VLDB Endowment must be honored.
Abstracting with c redit is permitted.
To copy otherwise, to republish, to post on servers or to redistribute to lists requires prior specific permission and/or a fee.
Request permission to republish from: Publications Dept., ACM, Inc.
Fax +1 (212) dataset.
The back-end computing engine loads the graph representation and estimate the proximity from query to a target of any type using random walk with restarts (RWR), for which fast algorithms already exist [17].
Algorithmic details of the system are presented in [12].
The C-DEM demo can be accessed by visiting http://www.db.cs.cmu.edu/db-site/Projects/cdem.The remainder of the paper is organized as follows: Section 2 discusses the software architectures and describes the implementation of core computational part.
Section 3 demonstrates query and navigation operations, with screen shots of the browser-based UI, for a simple example and a more complicated one.
Related works are reviewed in Section 4, and Section 5 concludes this paper.
As shown in Fig. 1, the system architecture of C-DEM consists of three tiers.
A user interacts with the web server through the browser-based interface (the first tier), which sends the query information via the HTTP protocol.
The second tier is hosted on an Apache Tomcat web server with JSP pages to accept and process user inputs.
It issues queries to the computing engine (the third tier) by making remote function calls (Java Remote Method Invocation).
The computing engine then performs the RWR algorithm on the pre-computed graph representation (discussed in Sec. 2.2) given the query inputs and a few pre-defined parameters.
Results are first transferred back to the web sever using the RMI interface.
Then HTML pages are generated and sent to the browser.The remaining part of this section focuses on the implementation of the key component: the back-end computing engine, and we first discuss how to pre-process the image data and extract meaningful features.
Our data collection comes from a subset of digital photographs in the BDGP database which are taken in the same development stage, such that the expression patterns of different genes are comparable.
These raw images are of quite different image quality, due to focusing, noise, occlusion and other variable experimental conditions.
We pre-process them as described in [14], to do segmentation, de-noising, and to avoid overlaps and partial embryo images.
A final registration step translates, scales and rotates embryos to a "canonical" orientation, and produces 8-bit gray level images of size 352×160.
We choose a combination of local and global features derived from wavelet transformation and principal component analysis (PCA) respectively.
After this feature extraction step, each image is represented by a 24-dimensional vector of real numbers between 0∼1.
It is exactly these feature vectors that we use to measure the similarity between two images in the graph construction.
We represent images and their attributes (the corresponding gene and annotation keywords) as nodes in a graph and link them together with undirected edges.
Figure 2 is a schematic view of the structure of the graph.
Each image node is connected to a gene node according to its attribute.
Annotation keywords are connected to genes instead of images because in a fixed developmental stage, images of the same gene have identical annotations.
Between image nodes, we compute Euclidean distances of image feature vectors obtained in the previous subsection, and connect the nearest neighbors together.The next goal is to measure the proximity of two nodes on such a graph.
This is exactly what the random walk with restarts (RWR), measuring the closeness of the querying node(s) to any target node.
Given a connected graph and a query node set Q, the algorithm acts like a random walker who always starts his/her trip from a node randomly picked from Q.
At every discrete time unit, the walker moves to one of the neighbors of the current node with probability 1 − c (random walk) or it returns to a random node in Q to restart the trip with probability c (restart).
As time goes to infinite, the steady-state probabilities of this stochastic process is the "proximity vector" of every node to Q.
The computation can be summarized in a single formula:u = (1 − c)Au + cv(1)where A represents the adjacency matrix, c is the parameter of the restart probability, u represents the steady-state probability vector (desired "proximity" vector), and v represents the restart probability vector where all the elements are zero except that the element in Q.
The algorithmic details are presented in [12].
(a) (b) (c) patterns of the gene fj which are most representative for the keyword embryonic hindgut.
Then we can navigate by checking other keywords/genes/images, or we can follow the "Return" link to go back the index page.
In this section, we briefly review related works in three classes: multimedia query systems, database systems with ranking, and biological database systems.There are a number of multimedia query systems like the early QBIC system [9] and the more recent MMG [15].
The first one allowed for similarity queries on images only (with no annotations or other attributes).
The latter focused on automatic captioning and mining for a collection of images.Examples of database systems with ranking are ObjectRank [6], BANKS [5] as well as the link-based ranking method in [11].
They all represent a database as a graph, and use either page-rank or spanning trees, to find important/relevant nodes, in response to Fig. 3(c)).
the nodes that the user considers desirable.
All of them are on semistructured data, with no obvious extensions to multimedia data types.Online image databases of Drosophila include the Berkeley BDGP database [1], the Toronto Fly-FISH database [2] of fly embryos, the Oxford FlyTed database [4] of fly testes, etc.
They only support search and browsing by gene name or synonyms.
Systems like FEMine [14] focused on finding patterns and "eigenEmbryos" in a collection of images, using PCA or ICA.
The FlyExpress [8] system which is based on BDGP data, provided search and navigation from image to image only.In conclusion, C-DEM is the only system to our knowledge that combines multimedia, flexible querying, and ranking, for biological image databases.
We propose to demonstrate C-DEM, the CMU system for Drosophila Embryo Mining.
C-DEM has the following desirable properties:• It is multimodal, handling images, text and formatted attributes; • It is flexible, allowing queries from any modality to any other(s);• It is fast, with sub-second response time on commodity hardware and on a large real dataset; • It is user friendly, allowing querying and navigation with a few mouse clicks.Under the hood, we use state of the art image processing methods to extract features, and scalable algorithms to compute node proximities in a graph.
Future work will include support for additional query functionality, like the "center piece sub-graphs" [16], and graph clustering using METIS [13] or spectral methods.
This material is based upon work supported by the National Science Foundation under Grant No.
DBI-0640543.
Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.We would also like to thank Polo Chau for his suggestions on the interface.
