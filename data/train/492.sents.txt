The IETF's Integrated Services (IntServ) architecture together with reservation aggregation provide a mechanism to support the quality-of-service demands of real-time flows in a scalable way, i.e., without requiring that each router be signaled with the arrival or departure of each new flow for which it will forward data.
However, reserving resources in "bulk" implies that the reservation will not precisely match the true demand.
Consequently, if the flows' demanded bandwidth varies rapidly and dramatically, aggregation can incur significant performance penalties of under-utilization and unnecessarily rejected flows.
On the other hand, if demand varies moderately and at slower time scales, aggregation can provide an accurate and scalable approximation to IntServ.
In this paper, we develop a simple analytical model and perform extensive trace-driven simulations to explore the efficacy of aggregation under a broad class of factors.
Example findings include (1) a simple single-timescale model with random noise can capture the essential behavior of surprisingly complex scenarios; (2) with a two-order-of-magnitude separation between the dominant time scale of demand and the time scale of signaling and moderate levels of secondary noise, aggregation achieves performance that closely approximates that of IntServ.
Flow-based resource reservation schemes as embodied by the IETF's Integrated Services protocol (IntServ) [6] provide a means to guarantee each flow's quality-of-service requirements.
However, since processing reservation requests on a per-flow basis may not be feasible in high speed core routers, aggregation has been proposed as a mechanism to significantly reduce the signaling demands placed on core routers (e.g., [ 2]).
With aggregation, the per-flow guarantees of IntServ can be achieved without perflow signaling of core routers.
In particular, edge routers can maintain a long-time-scale aggregate reservation between a pair of ingress-egress routers.
With this existing reservation, individual flows need only signal the ingress node which locally accounts for resources along the path and independently accepts or rejects new flows.
Occasionally, when the aggregate reservation is determined to be too large or too small as compared to the actual demand, it can be readjusted via a "bulk" reservation adjustment in the core.
Thus, core nodes are infrequently signaled to achieve scalability, yet without sacrificing the service model of per-flow guarantees and ideally, with minimal sacrifice in network utilization.
Thus, aggregation has the potential to simultaneously achieve scalability, per-flow quality-of-service, and high utilization.
1 However, the performance of aggregation depends on a number of factors, the most important of which is the traffic characteristics of the underlying flows.
For example, in one extreme in which a class' aggregate traffic is relatively constant over time, the core reservation can be nearly static and reserved-resource utilization will be high given the close match between the reservation and the actual traffic.
At the other extreme, if a class' aggregate demanded bandwidth oscillates quickly and with high variance, aggregation would have relatively poor performance.
In this case, the choice would be to either rapidly re-adjust the core reservation to track the demand (thereby frequently signaling and losing the advantage of scalability), or incur inaccuracies between the demand and the reservation (thereby suffering from under-utilization).
In this paper, we explore the fundamental roles of the timescales and variance of traffic demand and the timescales of aggregate control on the performance of an aggregate reservation scheme.
Using a combination of modeling, analysis, and trace-driven simulations, we provide conditions under which aggregation is an accurate and highperformance approximation to the baseline IntServ.
Our contributions are as follows.First, we devise a simple model for aggregate traffic consisting of a sinusoid with random phase and additive white uniform noise.
While clearly omitting many facets of realistic workloads, the model serves to isolate the effects of a single demand timescale as well as the effects of additional variance.
Second, we develop a theoretical model which, under the above traffic demands, provides a closed-form expression for the system's key performance measures such as overload probability.
Third, we perform a set of simulation and numerical investigations into the performance of the basic model, and consider the impact of a number of simulated extensions to the basic model, such as correlated, rather than white additive noise.
Finally, we perform a set of tracedriven simulations.
This study provides practical insights into a number of factors not included in the theoretical model such as the role of network topology, correlated demand phases, and aggregating the traffic aggregates.
Moreover, we study the accuracy of the simplified demand model as well as via the theoretical results.Example findings are as follows.
First, we find that the basic demand model and theoretical result are able to predict the performance of complex and trace-driven scenarios.
For example, in experiments with QBone traces, we found that the model is able to predict the overload probability to within 11% accuracy, reserved resource utilization to within 1% accuracy and the available bandwidth to within 19% accuracy when the ratio of control to demand time scales is 1/36.
Second, we find via trace-and modeldriven simulations as well as the theoretical model, that if the control and demand time scales are separated by two orders of magnitude and additional variance is moderate, then aggregation provides performance quite similar to that of IntServ.
For example, we find that if the control and demand time scales are separated by a factor of 72 and the range of the additive noise is 0.42 times the range of primary demand, then aggregation achieves a utilization of 97% of the utilization achieved by IntServ.
However, for more highly variable NLANR traces in which the additive noise dominates the sinusoidal demand with a range nearly twice as large, both the model and trace driven simulations show that with the control and demand time scales separated by two orders of magnitude, aggregation achieves a utilization of 44% of that of IntServ.Previous research on aggregation addresses both the protocols (i.e., mechanisms and architectures) and algorithms (i.e., policies) required for aggregate reservation.
For example, an architecture for RSVP aggregation describing how to create and remove aggregate reservations is described in [2].
Furthermore, mechanisms have been devised for aggregation over label switched paths [1], multiple domains [9], and via RSVP tunnels [14] as well as via reservation agents [10].
Aggregation policies address issues such as how to accurately characterize an aggregate flow [ 11] and how to predictively make efficient bulk allocations including considerations of hysteresis [ 13].
In contrast, our work presents the first performance study to explore the role of traffic characteristics in the efficacy of aggregation, that is, to determine the regime under which aggregation is a high-performance mechanism.
Finally, alternate architectures (than aggregation) have been proposed to provide scalable per-flow quality of service.
Examples include endpoint control via probing [4], combined end-point and router control [ 7], and "dynamic packet state" [12].
However, discussion of the relative merits of such architectures is beyond scope of this work.The remainder of this paper is organized as follows.
In Section 2, we define the system and demand models, describe the problem formulation, and develop an analytical method to characterize the impacts of control time scale, demand time scale, and mean and variance of demand on the performance tradeoffs of aggregate reservations.
Next, in Section 3 we use model-driven simulation and numerical examples to study the performance impacts of periodic primary demand and additive secondary demand.
In Section 4, we present a set of trace-driven simulation experiments to further evaluate the performance tradeoffs of aggregation under a broader set of scenarios not treated by the basic model.
Finally, in Section 5 we conclude.
As described in the introduction, aggregation provides a mechanism to reserve network resources on behalf of multiple traffic flows.
In this section, we develop a simplified model to capture the key elements of the performance of aggregation, namely, we introduce a single-time-scale demand model in which the aggregate reservation is characterized by a sinusoid with random phase and additive random noise.
We describe a baseline scenario in which such aggregate flows are multiplexed onto a backbone link and describe three relevant performance measures: the overload probability, the reserved resource utilization, and the normalized available bandwidth.
Finally, we derive an expression for overload probability for the basic scenario.
We first consider a network model as shown in Figure 1 Ignoring delay requirements and considering only bandwidth, IntServ's guaranteed service can admit any set of flows such that 񮽙 i 񮽙 j ρ j i < C, whereas flows are rejected when the total reserved rate would exceed C.With aggregate resource reservation, individual flows do not signal the core routers.
Instead, a flow signals its ingress router which makes "bulk" or aggregate resource reservations in the core, and accepts or rejects incoming flow requests according to whether there is sufficient available capacity in the bulk reservation.
The ingress node will then periodically adjust the reservation in the core node according to its current demand.The aggregate demand of link-i is simply 񮽙 j ρ j i which we define by r i (t), a time varying function since the number of flows and their rates change over time due to flow arrivals and departures.
Similarly, we denote the aggregate reservation at time t by˜rby˜ by˜r i (t).
Consequently, when a new flow with rate ρ * i requests admission, if the ingress node has a current aggregate reservation such that񮽙 j ρ j i + ρ * i < ˜ r i (t), then the flow is admitted.
Otherwise, wheñ r i (t) is insufficient, the ingress node will signal the core node for aggregate requestˆrrequestˆ requestˆr i , at time t denoted byˆrbyˆ byˆr i (t).
Typically, the requested increment (ˆ r i (t) − ˜ r i (t)), often referred to as the bulk reservation, is substantially larger than ρ * i to avoid rapid subsequent requests to core routers.
Then, if 񮽙 l񮽙 =i˜r =i˜ =i˜r l (t) + ˆ r i (t) < C, the core node will grant the requestˆrrequestˆ requestˆr i (t) and the new aggregate reservation level˜rlevel˜ level˜r i (t) = ˆ r i (t) will be established and the new flow will be accepted; if 񮽙 l񮽙 =i˜r=i˜ =i˜r l (t) + ˆ r i (t) ≥ C but C − 񮽙 l ˜ r l (t) > ρ * i , then the new aggregate reservation level˜rlevel˜ level˜r i (t) = C − 񮽙 l񮽙 =i˜r =i˜ =i˜r l (t)will be established; otherwise, the current reservation level is maintained and the flow is rejected.
Likewise, if the ingress node determines that the current demand r i (t) is significantly less than the current aggregate reservatioñ r i (t), then a decrease in reserved bandwidth will be requested in order to more efficiently utilize network resources.
as well as the sequence of aggregate requests denoted byˆrbyˆ byˆr i (t) and the sequence of aggregate reservations denoted by˜rby˜ by˜r i (t).
Aggregation introduces a tradeoff.
If the aggregate reservatioñ r i (t) is infrequently adjusted, the signaling overhead in the core network is minimal.
However, if the demand r i (t) varies rapidly, it will diverge from˜rfrom˜ from˜r i (t) and cause either under-utilization of the reservation or unnecessarily blocked flows.
On the other hand, if the aggregate reservation is rapidly adjusted to match the current demand level, the system will achieve high utilization, yet the requirements of the signaling system are increased and in the limit (adjusting the reservation level for each flow), are identical to IntServ.Here, we introduce a simple model to study the relationship between system performance, control (or signaling) and demand time scales, and demand variance.
In particular, we consider as our "basic model", an aggregate demand of class (or link) i characterized byr i (t) = m i + a i cos 񮽙 2π T t + θ i 񮽙 + Z i (t),(1)where m i is the mean rate and a i is the amplitude of a sinusoid with period T .
The random nature of the demand is further modeled by additive white noiseZ i (t) (i.e., EZ i (t)Z i (t + s) = 0 for s 񮽙 = 0) that has uniform distribution, that is, Z i (t) ∼ U [−b i , b i ].
Finally, the sinusoids have random phase θ i which is also uniformly distributed withθ i ∼ U [0, 2π].
We denote p i (t) = m i + a i cos 񮽙 2π T t + θ i 񮽙as the primary demand and Z i (t) as the secondary demand such that r i (t) = p i (t) + Z i (t).
While the model clearly omits properties of realistic traffic, it serves to isolate the performance impact of two key factors: demand time scale and demand variance (via T , a i and b i ).
Moreover, despite its simplicity, the model exhibits coarse resemblance to some traces of traffic aggregates.
For example, considering the trace of Figure 1(b), the traffic exhibits a near-deterministic periodic long-term trend with additional variability.To characterize the aggregate reservatioñ r i (t), we consider periodic reservation adjustments at exactly intervals of τ seconds.
Moreover, we assume that the requested reservation level for a bulk reservation at time t,(k i − 1)τ ≤ t < k i τ , is given byˆr byˆ byˆr i (t) = max (ki−1)τ ≤s<kiτ r i (s), where k i = 1, · · · , T τ .
To avoid triviality, we assume that T τ is an integer.
In other words, the aggregate bandwidth reservation is adjusted every τ seconds with a requested rate sufficient for the future interval (i.e., "perfect prediction" of the future demanded rate).
While in practice, the adjustment interval might be made adaptive and perfect prediction is impossible, the model serves to also isolate the control time scale τ .
Thus, under the above scenario, we study the relative impact of demand and control time scales as well as demand variance on system performance, using the performance measures defined next.
Moreover, we show experimentally in Sections 3.3 and 4.1, that conclusions derived from the above "basic model" can generalize to significantly more complex scenarios.
To evaluate the effectiveness of aggregate-based resource reservation, we consider three performance metrics that we describe as follows.
First, the overload probability, denoted by P ol , is the ratio of the overloaded traffic (which cannot be admitted) to the total demand, i.e.,P ol = E( N 񮽙 i=1 (r i − ˜ r i ) + ) E( N 񮽙 i=1 r i ) ,(2)where r i denotes a random variable with the steady state distribution of r i (t).
Second, reserved resource utilization, denoted by U r , refers to the fraction of an aggregate reservation that has been utilized by the underlying traffic, i.e.,U r = (1 − P ol ) · E( N 񮽙 i=1 r i ) E( N 񮽙 i=1˜r i=1˜ i=1˜r i ) .
(3)Finally, the normalized available bandwidth, denoted by b A , also reflects the efficiency of aggregation by describing the fraction of bandwidth available after accounting for all aggregate reservations, i.e.,b A = C − E( N 񮽙 i=1˜r i=1˜ i=1˜r i ) C .
(4)Under the basic model of aggregate demand and the above performance measures, we compute the overload probability of aggregate resource reservation as follows.
Aggregation Performance.
Consider N aggregate demands sharing a single bottleneck link with capacity C as described in the basic model.
If the aggregate demand of classi is r i (t) = m i + a i cos 񮽙 2π T t + θ i 񮽙 + Z i (t), i = 1, 2, · · · , N, where Z i (t) is white uniform noise with Z i (t) ∼ U [−b i , b i ], then the overload probability is approximatelyP ol ≈ ( τ T ) N · T τ 񮽙 k1=1 · · · T τ 񮽙 kN =1 [ N 񮽙 i=1 f i,ki − C] + N 񮽙 i=1 (m i + 2τ T · a i + b i ) ,(5)wheref i,ki = max (ki−1)τ ≤s<kiτ [m i + a i * cos 񮽙 2π T s 񮽙 ].
A "sketch" derivation of the result is as follows.
To simplify the analysis, we first consider the phases θ i to be discretely uniform in [0, τ, 2τ, · · · T ].
In other words, aggregate reservation requests from different classes occur at identical epochs.
Second, we decouple the impact of the primary and secondary demands and observe that over a window τ , the secondary demand satisfies P(max 0≤s≤τ Z i (s) = b i ) ≈ 1 such that, to ensure sufficient bandwidth is available over the entire window τ , an additional bandwidth b i must be reserved.
2 Next, we exploit the odd symmetric characteristics of the cosine wave at points π/2 and 3π/2 to compute the mean discrete primary demand i asτ T T τ 񮽙 ki=1 f i,ki = τ T 񮽙 T τ · m i + 2a i 񮽙 ,(6)which simplifies to m i + 2τ T a i .
Finally, we compute Equation (2) by conditioning on the relative phases of the different aggregates, and after some manipulation, Equation ( 5) follows.Due to space limitations, the detailed derivation of all three performance measures is presented in [8].
However, we do consider analytical results for P ol , U r , and b A in the numerical and simulation studies that follow.
The theoretical model described above characterizes the relationship among the time scale of demand, the demand variance, the control time scale, and the performance of aggregation.
In this section, we present numerical and simulation investigations into these issues.
In particular, using the basic demand model described in Section 2, we quantify the role of the demand time scale and demand variance for the basic model.
Moreover, we show that alternate models of primary demand having different periodic functions, and alternate models of secondary demand having temporal correlation, have little impact on system performance.
Here, we isolate the roles of control and demand time scales by exploring the performance of the basic model under the special case of Z i (t) = 0, i.e., no secondary demand.
With this scenario, one can ask what frequency of reservation (1/τ ) is required for aggregate-based resource reservation to achieve performance similar to IntServ's flowbased resource reservation?
Similarly, if the control time scale τ is limited by scalability constraints (e.g., routers have a known upper limit on the frequency for which they can be signaled) what is the performance "cost" of aggregating demand?
We first consider a simple scenario with N = 2 classes, a bottleneck link capacity of C = 3, and demand of both classes given by m i = 1, and a i = 1.
We begin by illustrating the performance tradeoffs of aggregate-based resource reservation as the control time scale τ varies from 0 to T .
The results are depicted in Figure 2(a)-(c) for a fixed demand time scale of T = 2π ≈ 6.28 (for discussion, we refer to the units of T as hours).
We make the following observations about the figures.First, regarding the extreme cases of τ = 0 and τ = T , observe that τ = 0 corresponds to the case of no aggregation, or IntServ, that is, the core's requested reservation corresponds precisely to the flows' total demanded bandwidth (or equivalently, the aggregate reservation is continuously adjusted).
This provides an upper bound to the efficacy of aggregation, which under the given workload is given by an overload probability of 4.4%, a reserved resource utilization of 100% and an available bandwidth of 36%.
At the other extreme, when τ = T , the aggregate reservation is static, and corresponds to the maximum total flow demand over the entire period.
In this case, the overload probability is 15.9%, the utilization is 56.1% and the available bandwidth is 0.
This scenario provides a lower bound for the performance of aggregation.Second, observe that as compared to a static aggregate reservation, system performance rapidly improves as the control time scale τ is decreased from the extreme of T .
3 Furthermore, most of this improvement is incurred with moderate values of τ indicating little further performance improvements for extremely small values of τ and rapid signaling.
Two interpretations of this behavior are as follows.
First, the curves describe the signaling frequency required to achieve a certain level of performance.
For example, the figure shows that when τ is less than 1% of T , aggregation achieves near ideal performance.
In other words, if the control and demand time scales are separated by two orders of magnitude, the performance of aggregation is nearly indistinguishable from that of IntServ.
Second, the curves can be viewed in terms of "bulk size", i.e., the required increase or decrease in reserved bandwidth in order to achieve a certain performance level.
Observe that the mean bulk size is simply given byN 񮽙 i=1 T /τ−1 񮽙 k i =1 |f i,k i +1 −f i,k i | N ×T /τso that conclusions regarding time scales of control can be converted to conclusions regarding the magnitude of the reservation updates.
Figure 3 depicts the reserved resource utilization as a function of the demand time scale T for a fixed control time scale τ of 5.9 minutes.
This figure characterizes a scenario in which performance limitations of core routers dictate a maximum signaling frequency of once per 5.9 minutes (per class, the total number of signaling messages increases with the number of classes).
The curve then quantifies the performance penalty for performing aggregation rather than IntServ as a function of the demand time scale.
Observe that for aggregation to achieve performance within 10% of IntServ, the system period must be no smaller than 1.57 hr when the control time scale τ is 5.9 minutes.
Fig. 3.
Impact of the Demand Time Scale T .
Here, we explore the role of additional variation in the demand on the performance of aggregation.
Namely, we consider secondary demand given by From Figure 4 it is clear that variance in secondary demand hinders the efficacy of aggregation.
For a static aggregate reservation (τ = T ), the impact is quite severe as reserved resource utilization decreases from 100% to 53% when the variance of the secondary demand is 0.2.
For aggregation with an adjustment time scale of τ = T /16, the effects are mitigated, e.g., reserved resource utilization decreases to 70% under the same variance.
Regardless, sufficient "noise" in the demand can degrade the performance of aggregation to levels comparable to a static reservation.
Alternatively, if the noise is moderate, performance similar to IntServ can still be achieved.
For example, to achieve a reserved resource utilization within 20% of IntServ with aggregation and τ = T /16, the variance of the secondary demand must be limited to 0.05.
This corresponds to a range of noise 0.39 times the range of the primary demand (i.e., b i = 0.39a i ).
Of course, the detrimental effects of such variance can be alleviated with faster signaling (and reduced τ ).
Z i (t) ∼ U [−b i , b i ], b i ≤ m i − a i , Here, we consider the impact of alternate models of primary demand in addition to the sinusoid with random phase.
In particular, we consider periodic sawtooth and square waves with random phase, and in all cases set the secondary noise Z i (t) to 0.
4 For these three primary demand models, we consider a mean demand m i of 2, variance 1.33, and period T = 2π.
To achieve a variance of 1.33, the sinusoid has amplitude a i of 1.63, whereas the sawtooth has amplitude a i of 2, and the square wave has amplitude a i of 1.15.
Let C = 6 and N = 2.
As illustrated in the simulations reported in Figure 5, such variations on the basic model of primary demand have little impact on performance.
This illustrates that the essential tradeoff of control and demand time scales is quite similar under different demand functions.
Hence, consideration of more sophisticated periodic demand functions may be of limited impact for characterizing the performance of aggregation.
Thus, we limit further investigations to the sinusoidal model and in Section 4 evaluate the ability of this model to predict the performance of trace-driven experiments.
In this section, we use simulations to consider the performance impact of an alternate secondary demand model as compared to the uniform white noise considered in the basic model.
Specifically, we consider a Z i (t) to be given by a sawtooth wave with random phase.
In the experiments below, we consider a sawtooth with mean 0, variance 0.33, maximum 1, minimum -1, and period equal to T /4, and compare the performance with white noise with the same mean, variance, and range.
Figure 6 illustrates the impact of temporal correlation in secondary demand Z i (t) on overload probability for C = 6, N = 2, m i = 2, a i = 1 and b i = 1.
The figure shows that for small control time scales τ , correlated secondary noise improves performance whereas for larger τ it degrades performance.
Regardless, the difference is minimal, as 4 For example, if the phase θi is 0, and 0 ≤ t ≤ T /2, the sawtooth's demand is given by the figure depicts a worst-case scenario in which the period of the secondary demand sawtooth wave is 1/4 th that of the primary demand period T , and b i = a i .
For smaller periods of temporally correlated secondary demand and b i < a i , the difference is even smaller.
In this section, we broaden our experimental investigation to consider more realistic scenarios and trace-driven simulations.
In particular, we study issues such as the ability of the basic model to predict the performance obtained in trace-driven scenarios, as well as the impact of network and protocol characteristics in aggregation's performance.
The trace depicted in Figure 7(a) depicts aggregate measurements obtained from the QBone "PSC" ingress node on November 16, 2000.
5 The mean, variance and demand period T of the aggregate traffic are 56.8 Mb/sec, 191 and 24 hours, respectively.
In simulations, we use QBone and NLANR traces to represent the aggregate demand r i (t).
For multiple aggregate demands, we consider collections of traces each with random phase over their duration, with the exception of one experiment where we study the effects of synchronized phase (identical θ i ).
We consider a number of network topologies ranging from the single bottleneck of the baseline scenario to more complex meshes obtained using the topology generator of [ 5].
Moreover, we consider perfect prediction of future demand such that a core reservation request at time t of aggregate i is for maximum bandwidth required over the next τ second interval, i.e., max t≤s<t+τ r i (s).
Finally, for each scenario, we conduct 100 independent simulation runs to empirically obtain the average of the performance parameters.
For each run, we simulate four demand periods, and discard results from the first cycle as transient.
Further details of each scenario, including link capacities, the number of aggregate demands and their spatial distributions are described in the corresponding subsection.
Here, we consider a single bottleneck link with capacity 120 Mb/sec for trace 1 and 3 Mb/sec for trace 2 and compare the performance of the trace-driven simulations with that predicted by the basic model.
To compute the parameters of the basic model, we compute the mean, variance, and demand timescale of both traces.
For trace 1, considering only the primary demand, the basic model yields parameters r i (t) = 56.8 + 19.6 · cos(2πt/T + θ i ), whereas considering both primary demand and secondary demand, we have r i (t) = 56.8 + 18.5 · cos(2πt/T + θ i ) + Z i (t), Z i (t) ∼ U[−7.77, 7.77].
For trace 2, considering only the primary demand, the basic model yields parameters r i (t) = max{0, 0.65 + 1.1 · cos(2πt/T + θ i )}, whereas considering both primary demand and secondary demand, we have r i (t) = max{0, 0.63 + 0.63 · cos(2πt/T + θ i )+Z i (t)}, Z i (t) ∼ U[−1.2, 1.2],with the "max" required to ensure that even with the high variance of secondary demand, the aggregate rate is non-negative.
Figures 8-9 show the performance comparison between the trace driven simulations and the model predictions for the three performance measures described in Section 2.
For trace 1, we observe that the sinusoidal model with random phase, while highly simplifying the details of the true trace, is able to capture the basic behavior of the system.
For example, for τ/T = 1/36, the predictions of overload probability, reserved resource utilization, and normalized available bandwidth are with 11%, 1%, and 19% of the simulated values.
Furthermore, characterizing variance via additive random noise Z i (t) rather than purely through the sinusoid with random phase further improves the prediction, i.e., consideration of primary and secondary demand in general outperforms consideration of only primary demand.
Finally, we observe that as predicted by the model, if demand and control time scales are separated by two orders of magnitude and the secondary demand is moderate, aggregation attains performance nearly identical to IntServ.
For example, under τ = 10 minutes, T = 144τ = 24 hours, the overload probability is 4.56% for IntServ and 5% for aggregation.For the NLANR experiments, we observe that considering only the primary sinusoidal demand and ignoring secondary demand introduces large prediction errors.
However, characterizing demand variance via additive random noise Z i (t) rather than purely through the sinusoid with random phase is still able to capture the basic performance characteristics of the system.
Finally, we observe that, as predicted by the model, variance in secondary demand hinders the efficacy of aggregation.
For example, if the demand and control time scales are separated by two orders of magnitude, since the range of the additive noise is nearly twice (1.2/0.63 = 1.9 times) the range of primary demand, aggregation achieves a utilization of only 44.2% of that achieved by IntServ.
We next study the impact of different network topologies, including dumbbell, star, tree, mesh and freeway with on-ramps.
Figure 10 shows the corresponding network topologies, traffic distribution (arrow lines) and link capacities (Mb/sec).
For the dumbbell, star, and mesh, all links are potential bottlenecks and result in overload whereas only some of the links are bottlenecked for freeway with on-ramps and the tree (bottleneck links are represented by the bold lines in Figure 10).
Figure 11 shows the overload probability, reserved resource utilization and available bandwidth versus the control time scale for different network topologies.
We depict the performance of both bottleneck links (solid lines) and all links (dotted lines), and as a benchmark, also depict the performance of one bottleneck link with capacity 155 Mb/sec shared by two aggregate demands.We make three observations about the experiments.
First, considering all links, the freeway topology has slightly lower utilization but higher available bandwidth than other topologies due to resource contention among aggregate demands in both the freeway and cross traffic on-ramps.
Second, considering only bottleneck links, the performance difference for different network topologies is very small when all links are bottlenecked and the traffic is balanced (with the exception of freeway).
Similarly, there is little performance impact between a single and multiple bottleneck links in the different topologies.
In other words, from the perspective of bottleneck links with QBone-like demand, aggregate reservation incurs nearly the same performance tradeoffs as in the single-bottleneck scenario.
In this section, we study the role of the number of aggregate demands on aggregate resource reservation by considering 2, 4, and 8 aggregate demands sharing a bottleneck link with capacity scaled to 155, 311, and 622 Mb/sec respectively.Because of statistical multiplexing among aggregate demands, one may expect that like flow-based resource reservation, an increased number of aggregate demands (with a proportional increase in capacity) will reduce the overload probability and improve resource utilization for aggregate reservation.
However, we find that this is not always the case.
bandwidth.
In addition, as shown in Figure 12(a), when the control time scale τ is smaller than T /2, the system can achieve slightly lower overload probability under aggregate reservation (as with flow-based resource reservation).
However, when the control time scale τ is greater than T /2, an increased number of aggregate demands cause significantly higher overload probability under aggregation reservation, unlike the behavior of flow-based reservation.
For example, when the control time scale is T , the overload probability for 2 aggregate demands sharing one bottleneck link of 155 Mb/sec is less than 2% but more than 12% for 8 aggregate demands sharing one bottleneck link with capacity 622 Mb/sec.
This is because under a large control time scale, the negative effect of quantization error from bulk reservation is cumulative.
However, we observe that the performance impact of the number of aggregate demands is quite limited for faster control and τ ≤ T /2.
In the above experiments, each aggregate demand reserves its bandwidth independently, and as described in Section 2, a new reservation is admissible only if the total rate of all aggregate demands is less than the link capacity.
An alternate possibility is to merge multiple aggregate demands into a single reservation rather than to reserve resources for each aggregate's demanded bandwidth independently (which we refer to as isolation).
We consider 2, 4, and 8 aggregate demands sharing a bottleneck link with capacity scaled to 155, 311, and 622 Mb/sec respectively.
Observe that merging results in significant performance improvements, especially when the control time scale τ approaches T .
For example, as shown in Figure 13(a) and Figure 13(c), when the control time scale τ is as large as the system demand period T , merging makes the overload probability of 8 aggregate demands decrease from 13% (isolation) to 0, while the reserved resource utilization increases from 64% to more than 79%.
As an alternate viewpoint, the experiments illustrate that to achieve the same performance as isolation, merging can allow an increase in the control time scale τ .
For example, as shown in Figure 13(b), to keep the overload probability to zero for 4 aggregate demands, isolation requires τ ≤ T /128 while merging requires only that τ ≤ T /32.
Finally, Figure 13(c) illustrates that such gains increase with the number of aggregate demands.
For example, when the control time scale is τ = T /4, 8 aggregate demands can achieve a 10% gain, whereas 4 aggregate demands achieve a 5% gain.
Thus, exploiting the effects of statistical multiplexing for aggregate demands themselves can have an important effect, especially under larger control time scales.
For the final experiments, we consider the case of synchronized demands.
That is, both the theoretical model and the simulations are based on each aggregate demand having a uniformly independent phase.
However, as many traces' behavior indicates strong-time-of-day characteristics, it is possible that in practice, phases will be correlated.
Here we consider two aggregate demands with identical demand phase (θ 1 = θ 2 ) and a single bottleneck link with capacity 155 Mb/sec.
Figure 14(a) indicates that such synchronization increases the system overload, except under very large τ , in which the coarseness of the reservation overwhelms the effect.
Figures 14(b) and (c) indicate only a marginal performance impact for phase synchronization.
We observe that while a performance degradation for dependent phases is expected, the experiments indicate that they equally degrade the performance of aggregation as well as IntServ.
Hence, synchronized demand cycles are more of a capacity planning issue and play a lesser role in the efficacy of aggregation itself.
In this paper, we studied the problem of aggregate resource reservation and investigated the conditions under which aggregation can simultaneously achieve high utilization and scalability.
We presented a simple single-time-scale model with random noise and provided a derivation of overload probability for such aggregates.
Moreover, we used numerical and simulation experiments to explore the design space outside the scope of the basic model and found that aggregate reservation is largely insensitive to the particular shape of the (periodic) primary demand, as well as to temporal correlation in the secondary demand.
However, both the model and simulations indicate that the performance of aggregation is strongly related to the relationship between the demand and control time scales as well as to the variance of the secondary demand.
Finally, tracedriven simulations corroborated the conclusions obtained with the theoretical model and moreover showed that the model is able to characterize the performance of aggregation even under quite complex scenarios.
Example findings include that a separation of time scales of two orders of magnitude between demand and control (i.e., between the dominant traffic time scale and the time scale for adjustment of the aggregate reservation) ensure excellent performance of aggregation, provided that additional "noise" (random secondary demand in addition to the primary periodic demand) is moderate.
We found that in one trace the noise was sufficiently moderate whereas in a second trace the noise dominated the primary demand and aggregation incurred a 44% utilization penalty.
While neither trace is an ideal representation of aggregate real-time traffic as both traces are dominated by TCP flows, our results regardless provide both an insight into the basic performance tradeoffs of aggregation as well as a simple model-based technique for performance prediction.
