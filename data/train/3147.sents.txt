Phishing websites attempt to deceive people to expose their passwords, user IDs and other sensitive information by mimicking legitimate websites such as banks, product vendors, and service providers.
Phishing websites are a pervasive and ongoing problem.
Examining and analyzing a phishing website is a good first step in an investigation.
Examining and analyzing phishing websites can be a manually intensive job and analyzing a large continuous feed of phishing websites manually would be an almost insurmountable problem because of the amount of time and labor required.
Automated methods need to be created that group large volumes of phishing website data and allow investigators to focus their investigative efforts on the largest phishing website groupings that represent the most prevalent phishing groups or individuals.
An attempt to create such an automated method is described in this paper.
The method is based upon the assumption that phishing websites attacking a particular brand are often used many times by a particular group or individual.
And when the targeted brand changes a new phishing website is not created from scratch, but rather incremental upgrades are made to the original phishing website.
The method employs a SLINK-style clustering algorithm using local domain file commonality between websites as a distance metric.
This method produces clusters of phishing websites with the same brand and evidence suggests created by the same phishing group or individual.
Phishing websites attempt to convince people to deliver their passwords, user IDs and other sensitive information by mimicking legitimate websites such as banks, product vendors, and service providers.
Security workers at the victim brand, the one that is being imitated, must determine from a large collection of potential phishing sites which sites are phishing sites and targeted at their institution.
These URLs generally are gathered from sources such as forwarded emails to the "abuse" email for the brand, or via emails from the Customer Service department from the brand.
From this large collection of emails, URLs are extracted, but then must be reviewed to find the phishing sites which need to have an incident response action taken against them.
Manual review of these assorted complaint-generated URL lists is a time-consuming process that in some cases is actually abandoned due to the significant manpower costs associated with the activity.
Automated methods need to be created that group large volumes of phishing website data and allow investigators to focus their investigative efforts on the largest phishing website groupings that represent the most prevalent phishing groups or individuals.An attempt to create such an automated method is described in this paper.
The method is based upon the assumption that phishing websites attacking a particular brand are often used many times by a particular group or individual.
And when the targeted brand changes a new phishing website is not created from scratch, but rather incremental upgrades are made to the original phishing website.
The method employs a SLINK-style clustering algorithm using local domain file commonality between websites as a distance metric.
This method produces clusters of phishing websites with the same brand and evidence suggests created by the same phishing group or individual.The method has been evaluated against a collection of phishing sites in the UAB Phishing Data Mine [12] and has been shown to successfully create clusters of confirmed phishing URLs, grouped first by brand, and then by significant subgroups composed of many identical files.
One common method of distributing phishing websites is by using "Phishing Kits", which are zip files used to store all the files and directory structures necessary to create a phishing website.
These phishing kits are often used repeatedly by a single criminal or criminal group to create phishing sites.
There is limited evidence showing the significant subgroups of identical files are in fact groups of highly related phishing kits or phishing kit families used or created by a small group or individual.To implement such a clustering technique a SLINKstyle algorithm [7] was implemented using a file set comparison method, Deep MD5 Matching [14], as a distance metric.
The clustering technique was limited in its ability to process large volumes of phishing data as runtime increased substantially as the data set was increased.
To reduce run time, the phish clustering technique was divided into two phases.
Phase1 is used to reduce the number of comparisons while phase2 implements the SLINK algorithm.
Additionally, to reduce the run time the two-phased approach was run over chronologically limited windows of one month each.The resultant clusters are evaluated based upon brand and phishing kit relationships.
Clusters are evaluated to see if cluster members agree on brand.
A small number of the largest potential phishing clusters are evaluated to see if individual phishing kits relate to one or multiple phishing clusters.
And a case in point example is presented showing the relationship between phishing kits.
Phishing researchers have presented a number of classification methods for identifying phishing attacks.
These methods can be categorized into three groups: email-, URL-, and content-based approaches.
Email-based approaches are used to prevent the phishing attack from reaching the intended recipient.
Some researchers classify the words in the email body to determine the legitimacy of the email [10].
Other email-based approaches use features derived from the email message such as the sender email, sender IP address, and non-matching URLs between the hyperlink and anchor tag [1].
These features are used to classify the email through machine learning algorithms [1] [4].
One issue with email filters is the vast number of email hosting providers that do not provide their users with this type of protection.In response, research has been conducted to determine phishing attacks through the browser.
Content-and URL-based approaches have been suggested for detection by the browser.
Gyawali et al. and Ma et al. proposed solutions to phishing identification by using features that can be derived from a URL [6] [9].
These researchers demonstrated that URL-based methodologies can identify phishing URLs with high accuracy; however, such techniques can be attacked causing lower detection rates by shortening the phishing URLs or hosting the website in the root directory.
Content-based approaches use the content of the website for detection.
Dunlop et al. presented a method for determining the visual similarity between screenshots of phishing websites [3].
Other researchers have used components within the source code [2] [11].
While such approaches have demonstrated good detection and false positive rates, there are attacks against these methodologies as well.
Therefore, there have been a number of researchers that use combinations of all three categories [16][17] [18].
Phishing website aggregation has been an area of interest for researchers that are proactively trying to determine the prevalence of the criminals behind the phishing attack [2][8] [15].
Phishing actors used to create domains on the same IP blocks.
In response, Weaver and Collins presented a clustering algorithm using the IP address or network hosting the phishing website as a measure of prevalence [15].
The researchers in Wardman et al suggested that domains compromised by the same attack may indicate the same phisher [13].
This research presents a method for aggregating phishing websites by phishing actor using a content-based approach that is based upon the phishing website's files.
Utilizing a content-based approach based upon the phishing website's files is harder for prevalent phishing actors to avoid than approaches based upon domain and/or IP.
The data set for this research was collected through the UAB Phishing Data Mine [12] from January 1 st , 2011 to May 25 th 2011.
This data set consists of 265,611 potential phishing websites collected from a large spam-based URL provider, a large anti-phishing company (Internet Identity), and a number of other feeds including private companies, security companies, and financial institutions.
The source of the URLs is either URLs contained in spam or URLs reported by the public to fraud alert email addresses.Comparing phishing collections is an inexact science, due to a number of disagreements throughout the industry on how phishing pages should be counted.
Many vendors and public sources count each occurrence as distinct if there is any variation in the URL, which leads to extreme "over-counting" in conditions where URLs are customized per user, or where randomization is combined with a wild-card DNS entry to allow every domain name to be unique.
Virtual hosts, where the same directory path can be resolved for every domain hosted on a single IP address also lead to over-counting by some other sources.
UAB uses a conservative counting mechanism that attempts to deduplicate URLs that are actually the same phishing content prior to counting.
UAB's data is biased in favor of phishing against financial institutions and currently underrepresents gaming and social media phishing when compared to some other phishing collections.The data consists of all files referenced in the potential phishing website that were hosted on the same domain as the potential phishing website.
The website files were fetched using an automated web crawler that makes use of GNU's Wget [5].
After the files were downloaded, a hash value was generated for each file using the MD5 hashing algorithm.
A combination of human and automatic labeling was employed by the UAB Phishing Data Mine to determine whether the website was a phish or legitimate website.
The automatic labeling strategies include main page hash matching, and Deep MD5 [14] matching.
These two automatic labeling strategies depend upon already detected and branded phish to brand incoming phish.
If the potential phish is labeled as a phishing website by a human, then an associated brand is chosen by the human.
If the potential phish is labeled as a phishing website using automatic confirmation then the confirmed phishing website is given the same brand as the phishing website used to confirm it.
This data set contains 349 different spoofed organizations.
Out of all of the potential phishing websites received, the data set consists of approximately 38% manually or automatically confirmed phish, 12% manually or automatically confirmed non-phish, 30% marked as unreachable or fetching errors, and 20% marked as unconfirmed.
The data was split into five time windows based upon the month the potential phishing website was first observed.
A two phased approach is used to cluster the potential phishing websites.
Phase1 creates website clusters based upon an exact match of the MD5 value of the main index page of the phishing website.
All pages are placed into phase1 groups based upon their main page's MD5 value.
If a page has no matches, it is placed into a phase1 group consisting of only itself.
Phase2 employs a SLINK-style algorithm [7] using Deep MD5 Matching as the distance metric between phase1 clusters.
Deep MD5 generates a score using the count of candidate one's files (count1), the count of candidate two's files (count2), and the number of matching MD5 values between candidate one and candidate two (overlap The SLINK clustering algorithm is a graph theoretic clustering algorithm.
The graph has vertices (potential phishing websites).
For each pair of vertices a score (DeepMD5 score) is generated and an edge is drawn when the score exceeds some threshold.
After all edges have been created each connected component is a cluster.The Phase2 clustering algorithm depends on setting an appropriate threshold between 0 and 1.
After performing a statistical analysis of the DeepMD5 threshold, a 0.8 threshold was chosen to make sure clusters consisted of highly similar sites.
Phase2 clustering implements the SLINK-style algorithm by selecting a phase1 candidate as a seed for the phase2 cluster from a phase1 representative list.
Next, an MD5 similarity coefficient is generated between the phase1 candidate and all other phase1 representatives.
If the similarity coefficient meets or exceeds the phase2 clustering threshold, then it is added to the phase2 cluster and removed from the phase1 representative list.
The above operation is then recursively applied to every new member of the phase2 cluster.
When all members of the phase1 representative list that match the current phase2 cluster have been assigned, a new representative is chosen to create the next phase2 cluster.
The process repeats until all phase1 representatives have been assigned to a phase2 cluster.
To determine how similar phishing website cluster members are to a particular phishing kit a file set comparison was made between the phishing kit files and phishing website files.
A phishing kit can contain files such as php or other scripting files that dynamically construct html to display or implement functionality that is not observable in the web browser, such as emailing the stolen personal information to the criminal.
Since phishing kits contains many files that cannot be seen when the phishing website is downloaded the Kulczynski 2 coefficient would not be suitable because half of the score is derived by using the larger phishing kit file set count as a denominator.
Instead the Simpson coefficient was used, which generates a score by taking the number of files shared by the phishing kit and the potential phishing website (overlap) and dividing by the potential phishing website file count (count1).
Phishing kits were chosen from the UAB Phishing Data Mine collected between July 1 st 2010 and November 30 th 2011 consisting of 27,801 phishing kits.
Many of the phishing kits are duplicates or very similar to one another.
A similarity score is generated by comparing a phishing website and phishing kit.
An association between the two is made only if the Simpson coefficient is 0.8 or greater.
The 27,801 phishing kits had 1,485,774 files causing a high run time when creating connections between all phishing kits and suspected phishing websites.
Hence, connection scores are only calculated between suspected phishing websites in the top 24 clusters and the 27,801 phishing kits to maintain a reasonable runtime.
The SLINK-style clustering algorithm generated 185,892 clusters for the five monthly data windows combined.
Of which there are 162,206 singleton clusters and only 22,904 multi-member clusters.
Out of the 22,904 multi-member clusters there are 14,129 clusters where all cluster members have been assigned a brand.
The 14,129 multi-member branded clusters are going to be the focus as singleton clusters are would not be helpful to an investigation and branded clusters establish a ground truth allowing for evaluation.
In the 14,129 multi-member branded clusters there are 199 brands.
Out of these 14,129 multi-member branded clusters there were only seven where all members did not have the same brand.
Approximately 99.5% of multi-member branded phishing website clusters are pure brand and approximately 0.5% contain multiple brands or are cross-branded.
January The seven cross-branded clusters are the result of a shared structure that produces a similar look and feel between the cluster members, but targets different brands.
These websites use the same template for creating phishing websites for different brands.
For example, the three websites in Figure 1 are from one of the seven cross branded clusters and all have the same look and feel.
The cluster contained four websites branded MasterCard, two websites branded Key Bank, and the rest of the websites were branded Bank of America.
and file counts between the three samples demonstrates that most of the files in the website file sets are the same.
The main index page for each of the three sample files is different, as well as various other files consisting of several .
gif, a .
js, and an .
ico.
The phishers have changed only the images or fields listed on each website creating a generic phishing website.
Therefore, generic phishing websites may share a similar structure that creates a similar look and feel, but target different brands.
Out of the largest 24 potential phishing website clusters there were eleven potential phishing website clusters where the files from a cluster member were highly correlated with an archived phishing kit.
All eleven of the potential phishing website clusters that had a phishing kit associate to a member has the property that every member is a branded phishing website.
There are four clusters for Financial Institution A, three clusters for Payment Processor A, three cross-branded clusters, and one cluster for Financial Institution B. All of the eleven phishing clusters have many different kits relating to most members and all of these clusters have some kits that related to only a few members.
Table 2 presents homogeneity and completeness scores for phish kits relating to phishing website clusters.
The high completeness scores show phishing kits usually associate with members from a single phishing cluster.
The low homogeneity scores show that the relationship of kits to clusters is many kits relate to one phishing cluster; a typical cluster is related to many kits.
However, the small number of phishing clusters per window may be skewing the results.
Especially given there was only a single phishing cluster in this evaluation for April and May and less than four clusters for each of the other monthly windows.
Further work needs to be done to provide stronger support for phishing kit completeness within a phishing cluster.Out of the 27,801 phishing kits compared to the top 24 clusters there are 8,489 kits that associated to at least a single member of a phishing cluster.
The 8,489 phishing kits related to 6,458 phishing cluster members in one of the eleven phishing clusters.
Six phishing kits related to more than one of the eleven branded phishing clusters within the same monthly window.
One of the kits related to a February window Financial Institution A phishing cluster and a cross-branded phishing cluster.
Five kits related to a March window Financial Institution A phishing cluster and a March window cross-branded phishing cluster.There is a "one to many" relationship between phishing website clusters and phishing kits.
Phishing kits were not de-duplicated and there can be multiple incremental versions of the same phish kit in the UAB Phishing Data Mine.
The large number of kits relating to a large number of a phishing cluster's members and not another phishing cluster could be the result of duplicate or very similar phishing kits.
The fact that out of 8,489 phishing kits only six related to multiple phishing clusters in the same time window and the high completeness measures suggest that the kits relating to a single phishing cluster are strongly associated to each other.
This supports the idea that the phishing kits are duplicates or updated versions of the same phishing kit.
To show how cluster members relate to each other, other phishing cluster members, and to phishing kits an example is given.
Three URLs have been chosen from one of the largest financial institution phish clusters (Phish Cluster 1) for January.
The cluster has 364 members, all of which are phishing the same financial institution brand.
Three phishing websites have also been chosen from a smaller financial institution phishing cluster (Cluster 2) of the same brand as Phish Cluster and Phish Kit 3.
Examining these six phishing websites across two different phishing website clusters shows that Phish 2 and 3 are created by Phish Kit 2 and are present in the same cluster as Phish 1 that was created by an update version of Phish Kit 2, Phish Kit 1.
Phish Kit 1 and Phish Kit 2 are a part of the same phish kit family.
Also, while members of Phish Cluster 1 and Phish Cluster 2 share similar files they were not created by the same phishing kit.
In this example Slink-style Deep MD5 clustering creates cluster based upon brand and phish kit family.
SLINK Clustering using Deep MD5 as a distance metric does not deal well with all phishing websites.
There are several cases where it does have issues.The first case is when there are large numbers of innocuous files such as single pixel image files or common scripts such as web statistics.
Large numbers of innocuous files lead to higher DeepMD5 scores where the websites being compared may not have very strong structural similarities, but rather only share innocuous files that are not vitally important to the website.Another problem case is small file count websites and the UAB Phishing Data Mine contains many small file count potential phishing websites.
The Deep MD5 comparison technique is not effective at comparing and linking phishing websites with small file counts [14].
Since the Deep MD5 comparison is used as a distance metric for SLINK clustering the result is a tendency to place phishing websites with small file counts in singleton clusters.While not necessarily a limitation it should be noted that SLINK Clustering using the Deep MD5 distance metric does not produce clusters based upon similar look and feel, but rather based upon website structure as given by websites utilizing the exact same local domain files.
The algorithm does produce clusters where the members share a similar look and feel because they share so many local domain files.
However, there can be potential phishing websites that share a similar look and feel that are not clustered together by this algorithm.
The Deep MD5 distance metric does not perform well when evaluating small file count phishing websites.
Using another structural distance metric with a SLINK-style algorithm to cluster only small file count phishing sites instead of the Deep MD5 algorithm may lead to a reduction in the number of small clusters.
Syntactical Fingerprinting [14] could be used as a distance metric.
Syntactical Fingerprinting utilizes the main page's html code to generate multiple keys for the page.
Since potential phishing websites with small file counts will still have a main page the Syntactical Fingerprinting could still be effectively used.The "one to many" relationship between phishing website clusters and phishing kits needs to be explored further.
The limited relations generated between the largest eleven phishing clusters and phish kits shows phishing kits almost always relate to only a single phish cluster.
The sample phish cluster analysis section shows on a very limited example that the phish kits that relate to particular phish cluster are from the same phish kit family.
To gain more evidence of clustering based on phish kit family further work needs to be done.
Creating a clustering algorithm that clusters different versions of the same phishing kit together could result in phishing kit family clusters.
Relating phish clusters to kit clusters could provide a run time reduction to allow for relating larger numbers of phishing clusters to phishing kits.
Analyzing how the resulting phishing kit family clusters tie to phishing website clusters may show more substantial evidence that SLINKstyle DeepMD5 clusters phishing websites based on phishing kit family.
SLINK-style DeepMD5 clustering generates clusters where members are highly consistent in brand.Comparing phishing kits to potential phishing website clusters shows phishing kits are only tied to actual phishing website clusters.
It also shows phishing kits rarely relate to more than one phishing cluster, which suggest there is some relationship between the phishing kits.
There is limited evidence showing the phishing kits relating to the same phishing cluster are from the same phishing kit family.
While not substantial there is evidence showing SLINK-style DeepMD5 clustering groups phishing websites based on phish kit families which would allow investigators to target prevalent phishing groups and individuals.
