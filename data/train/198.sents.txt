We present the KPC-Toolbox, a collection of MATLAB scripts for fitting workload traces into Markovian Arrival Processes (MAPs) in an automatic way.
We first present detailed sensitivity analysis that builds intuition on which trace descriptors are most important for queueing.
This sensitivity analysis stresses the importance of matching higher-order correlations (i.e., joint moments) of the process inter-arrival times rather than higher order moments of the distribution and provides guidance on the relative importance of different descriptors on queueing.
Given that the MAP parameterization space can be very large, we focus on first determining the order of the smallest MAP that can fit the trace well, using the Bayesian Information Criterion (BIC) for determining the best order-accuracy trade-off.
Having determined the order of the target MAP, the KPC-Toolbox automatically derives a MAP that captures accurately the most essential features of the trace.
Extensive experimentation illustrates the effectiveness of the KPC-Toolbox in fitting traces that are well-documented in the literature as very challenging to fit, showing that the KPC-Toolbox provides a simple and powerful solution to fitting accurately trace data into MAPs.
Markovian Arrival Processes (MAP) are a class of Markov-modulated processes [15] used for fitting real workload traces with time-varying characteristics, e.g., for approximating workloads with short-or long-range dependent behavior [1,10].
Traces of this type are commonly found in networks and systems, such as disk drives or ecommerce applications [17,14].
Accurate models of these traces are indispensable in the capacity planning process, otherwise the robustness of capacity planning models may be undermined [4,14].
The main advantage of MAPs is that they can be easily integrated within queueing systems or queueing networks, and then used in the computation of performance metrics such as mean response times or server utilizations [4].
However, it is often prohibitive to derive MAPs that can reproduce the characteristics of real workloads with temporal dependence.
The main reason for this difficulty is the vast parameterization space of MAPs.
Matching accurately traces with time-varying characteristics may require assigning the jumping rates between several tens of states, a task that must be supported by proper software tools which currently do not exist.In this paper, we introduce the KPC-Toolbox, a set of MATLAB scripts for automatic fitting of real workload traces using MAPs.
The KPC-Toolbox takes as input a trace of inter-arrival times, automatically searches for the best order of the MAP that can fit the trace accurately, and then derives a MAP which captures the most essential statistical features of the real workload.
The underlying technology is the recently-proposed Kronecker Product Composition 1 (KPC) fitting method for MAPs [6].
KPC reduces fitting problems to determining the characteristics of small MAPs composed by no more than two phases.
These MAPs can be easily fitted with closed-form formulas and are later composed into a large MAP by Kronecker products.
A similar compositional approach, instead based on MAP superposition, has been widely-used in past MAP fitting literature [1].
The novelty of KPC is that the method is able for the first time to impose moments or correlations of any order to the resulting MAP, while superposition methods are mostly limited to first and second-order statistical descriptors (e.g., mean arrival intensity, variance-time curve) that can be largely insufficient for accurate queueing prediction [2].
We further stress the generality of KPC pointing out that, in addition to processes with time-varying characteris-tics, it can also fit traces into renewal processes if no autocorrelation exists in the trace.
In such cases, the tool can be used for moment fitting and a phase-type (PH-type) renewal process is returned.An open fundamental problem is determining which trace descriptors to fit in the target MAP.
To give intuition on this problem, we study the performance of a M AP/M/1 queue in order to determine the best moments and correlations to be matched by KPC.
We observe that higher-order statistical descriptors that are changed by a modification of the skewness (e.g., tail of the distribution, higher-order correlations) can result in dramatic performance changes.
Instead, performance is sometimes insensitive to the coefficient-of-variation and to the autocorrelations values.
We also give evidence that the higher-order correlations (i.e., joint moments [19]), rather than the tail or the higher-order moments of the distribution, are more likely to be responsible of performance differences of the M AP/M/1 system.
Guided by the above observation, the KPC algorithm focuses on matching the higher-order correlations rather than the higher-order moments of the interarrival times.A fundamental innovation of the KPC-Toolbox is to determine automatically the order of the MAPs used in fitting (i.e., the number of phases to be used in the underlying CTMC).
Order selection in MAPs is an important issue because the MAP order can dramatically affect the running times of fitting.
To the best of our knowledge, no criteria have been proposed in previous work for determining the size of a MAP.
The KPC-Toolbox tackles this issue with an order-selection technique based on the Bayesian Information Criterion (BIC) [18], that is a widely-accepted method for determining the best order-accuracy tradeoff in fitting models such as ARIMA processes.
We use a recursive characterization of the MAP autocorrelations given in [6] as input to BIC to evaluate the best MAP order to use.The paper is organized as follows.
Background on MAPs is given in Section 2.
In Section 3 we present a sensitivity analysis on the M AP/M/1 queue that guides KPC to decide which moments and autocorrelations are the most important and should thus be matched.
Section 4 introduces the KPC-Toolbox and the new BICbased order selection method.
We illustrate the effectiveness of the tool using the case studies in Section 5.
Finally, Section 6 concludes the paper and outlines future work.
The KPC-Toolbox is available for download at http://www.cs.wm.edu/MAPQN/kpctoolbox.html.
Here we provide a simple introduction to Markovian Arrival Processes and explain some fundamental difficulties of MAP fitting.
We also summarize the Kronecker Product Composition (KPC) fitting method for MAPs [6].
For a detailed theoretical treatment of properties of MAPs on which KPC is based upon, we direct the interested reader to [6].
Here, we present the tool implementation of the KPC as well as new results that aid the tool user in finding a best MAP fitting in an automatic way.
A MAP(N ) [15] can be expressed as a continuous-time Markov chain (CTMC) with N phases and an absorbing state.
Upon entering the absorbing state from phase s, an interarrival time sample ∆T k is generated by considering the cumulative time passed from when the CTMC was started.
Then, the CTMC is re-started from a phase s ′ with probability p s,s ′ .
Intuitively, the stochastic matrix P = {p s,s ′ }, called the embedded process of the MAP, allows to create temporal dependence between consecutive values of ∆T k , as it connects the sampling process of two consecutive inter-arrival times.
This allows to create temporal dependent workloads and generalizes PH-type renewal processes [15], for which the only difference is that the probabilityp s,s ′ = α s ′ is independent of s.The most frequently used MAP representation is the (D 0 , D 1 ) description [13].
If the CTMC of the MAP has an infinitesimal generator Q of order N , the (D 0 , D 1 ) representation is obtained by filtering the transitions of Q according to whether or not they lead to an absorption.
That is, D 0 has the same diagonal as Q but its off-diagonal elements are the rates of transitions that do not jump to the absorbing state; D 1 includes only transitions to the absorbing state and is immediately computed as the matrix that assures Q = D 0 + D 1 .
In this representation, the embedded process is given byP = (−D 0 ) −1 D 1 .
For fitting, the fundamental property of the (D 0 , D 1 ) representation is the simplicity of evaluating MAP feasibility.
A MAP is feasible if D 0 is invertible, Q is irreducible, and all entries of D 0 and D 1 are non-negative except for the diagonal of D 0 .
These conditions can be easily checked.
Other representations are possible, e.g. ((−D 0 ) −1 , P ), but it is hard to discriminate without computing D 0 and D 1 if they produce a valid MAP.
We do not consider these representations in the rest of the paper.
Fitting a trace requires to capture the properties of a time series in terms of distribution and correlations between samples, which jointly summarize the observed patterns.
Because of the difficulty in obtaining robust estimates of the probability density function, moment matching is largely used in fitting, e.g., [11,19].
This also allows a compact representation of the most important characteristics of the trace.The inter-arrival time distribution of a MAP is PH-type distributed, thus moments are obtained from standard theory of PH-type distributions asE[X k ] = k!
π e (−D 0 ) −k e, k = 1, 2, . . . ,(1)where π e P = π e .
The vector π e is independent of the last visited phase before absorption, which means that temporal dependence does not affect the inter-arrival time distribution.
For this reason, fitting algorithms for PH-type distributions can be also applied to MAP distribution fitting [16].
A popular approach to matching the temporal dependence structure is to use second-order properties of the trace [1], such as the correlationsE[X j X j+k ] = π e (−D 0 ) −1 P k (−D 0 ) −1 e, k = 1, 2, . . . ,(2)where X j and X j+k are inter-arrival times spaced by k − 1 arrivals.
The autocorrelation function is a normalization of these values, i.e.,ρ k = π e (−D 0 ) −1 P k (−D 0 ) −1 e − E[X] 2 2E[X 2 ] − E[X] 2 , k = 0, 1, . . .Equation (2) is more difficult to fit to real data than (1) because of P k that accounts for the temporal dependence.
In addition, imposing a certain distribution by (1) reduces the degrees of freedom for manipulating the matrices in (2), because D 0 and π e have been already constrained to set some moments E[X k ].
This builds intuition on the main issue of inter-arrival time fitting in MAPs: we need to control the properties of moments and correlations by jointly manipulating products of matrices appearing in (1)-(2).
Separate fitting of moments and correlations has been recently attempted [11] and can work successfully on small processes, but the underlying optimization suffers from numerical infeasibility on larger MAPs.
The KPC method presented in the next section provides instead a simple divide-andconquer approach of fitting both (1)-(2) in large MAPs.
Kronecker Product Composition (KPC) is a new technique proposed in [6] for imposing moments and correlations of arbitrary order to a MAP.
The idea is to use fundamental properties of the Kronecker (or tensor) product operator [3] to simplify the control of the matrix products and inversions appearing in (1)-(2).
The aim of KPC is to provide a simple way to match a set of moments and autocorrelations by composing together small MAPs, typically MAPs with two phases that can be fitted easily with closedform formulas [8,9].
Given M AP a = {D a 0 , D a 1 } and M AP b = {D b 0 , D b 1 },we define the KPC of the two processes as the new MAP M AP a ⊗ M AP b = {D 0 , D 1 } = {−D a 0 ⊗ D b 0 , D a 1 ⊗ D b 1 },(3)D a 0 = −a 1,1 0 0 −a 2,2 , D b 0 = −b 1,1 b 1,2 b 2,1 −b 2,2 ,where a i,j ≥ 0 and b i,j ≥ 0 are nonnegative real numbers, then the composition yields The logic behind the KPC definition (3) is that the Kronecker product satisfies the algebraic relationsD 0 = −D a 0 ⊗ D b 0 where D 0 =     −a 1,1 b 1,1 a 1,1 b 1,2 0 0 a 1,1 b 2,1 −a 1,1 b 2,2 0 0 0 0 −a 1,2 b 1,1 a 1,2 b 1,2 0 0 a 1,2 b 2,1 −a 1,2 b 2,2     is a feasible D 0 matrix,(A⊗ B)(C ⊗ D) = AC ⊗ BD, (A⊗ B) −k = A −k ⊗ B −k ,which allow to decompose matrix products and inversions in terms of similar operations on smaller matrices.
For in-stance, (−D 0 ) −1 = (−D a 0 ) −1 ⊗ (−D b 0 ) −1and similarly it can be shown that P = P a ⊗ P b and π e = π a e ⊗ π b e , where the indexes a and b refer to M AP a and M AP b .
From these relations, it is easy to show that moments and correlations are decomposed as well.
For example, the mean of the KPC M AP a ⊗ M AP b is decomposable asE[X] = E a [X]E b [X], where E a [·] and E b [·]denote moments and correlations of the original processes M AP a and M AP b .
The general decomposition formulas are as followsE[X k ] =E a [X k ]E b [X k ]/k!
, (4) E[X j X j+k ] =E a [X j X j+k ]E b [X j X j+k ],(5)and generalize similarly to higher-order moments [6], e.g.,E[X u j X v j+k X z j+k+h ] = E a [X u j X v j+k X z j+k+h ]× × E b [X u j X v j+k X z j+k+h ]/(u!v!z!)
.
(6)The KPC technique, shown above for the case of two MAPs, generalizes in a recursive fashion to KPC of several processes.
For example, the mean of the composi-tion M AP a ⊗ M AP b ⊗ M AP c is given by E[X] = E a [X]E b [X]E c [X].
Formulas (4)- (6) state that the MAP fitting of real traces can always be re-formulated in a divide-and-conquer fashion as follows: assign moments and correlations of smaller MAPs such that their composition (3) yields a MAP with prescribed moments and correlations by (4)-(6).
The KPCToolbox presented in Section 4 defines an automatic fitting scheme based on the KPC divide-and-conquer approach.
Before describing the features of the KPC-Toolbox, we focus our attention on a challenging, but fundamental, question: what statistical descriptors are the most important in fitting by MAPs?
A standard approach in current literature is to match the most important moments and correlation coefficients using the simplest available model, e.g., a two-phase MAP(2) process.
For example, the first three momentsE[X], E[X 2 ], E[X 3 ], and the lag-1 correlation E[X j X j+1 ], which determines the lag-1 autocorrelation ρ 1 , are sufficient to fully parameterize a MAP(2), see [8,9] for fitting formulas.
Matching these four parameters is often considered a viable approach to fit a trace; however, we argue that this frequently results in models with poor predictive capabilities.
For example, Figure 1 shows the simulated queue-length probabilities for a T race/M/1 queue driven by the Bellcore Aug89 trace inter-arrival times 2 [12] and compares them with the probabilities of a M AP (2)/M/1 queue, where the MAP(2) matches exactly the first three moments and the lag-1 autocorrelation of the Bellcore trace.
The results clearly show the poor modeling accuracy of the MAP(2) fitted with this approach.The experiment in Figure 1 motivates the investigation in this section: we study numerically the sensitivity of the M AP/M/1 queue-length distribution with respect to the parameters used in MAP fitting.
The aim is to derive qualitative recommendations for the best moments and correlations to be matched.
We perform a sensitivity analysis in two phases.
We first evaluate the M AP (2)/M/1 sensitivity and later confirm our observations using a larger MAP(4) process defined by the KPC of two MAP(2)s. Concerning the first analysis on the MAP(2), the process is studied as a function of its first three normalized moments (mean inter-arrival time M EAN , squared coefficient-of-variation SCV , and skewness SKEW ) and the lag-1 autocorrelation coefficient ρ 1 of inter-arrival times.
A fundamental difficulty in the analysis is that a variation of a single parameter may result in several modifications of the process, e.g., any variation of SKEW results in a simultaneous change of the skewness of the distribution, of the tail of the distribution, of higher-order moments, and of higher-order correlations (e.g., the bicorrelations E[X j X j+k X j+k+z ] in (6)).
This is a consequence of linear dependencies that relate moments and correlations in a MAP(N ) [6].
Only first and secondorder moments and correlations are unaffected by changes of SKEW .
Our conjecture is that higher-order correlations, such as the bicorrelations (6), rather than the tail of the distribution or the skewness, are the main determinant of the quality of the fitting.
We will provide evidence of this claim in Section 3.3; before, we will generically call "higher-order properties" the moments and correlations changed in a M AP (2) by a variation of SKEW for fixed M EAN , SCV , and ρ 1 .
The sensitivity analysis is performed as follows.
Recall that for a M AP/M/1 queue, the queue-length probabilities decay asymptotically as P (n = k) ∼ c 0 η k , where η is the decay rate (also called caudal characteristic [15]) and c 0 is a positive constant [15].
We investigate the sensitivity of the M AP/M/1 results by determining the queue-length value x where η x < 10 −8 .
Results for different values of the threshold are qualitatively similar.
Intuitively, x represents a position of the queue-length distribution after which the probability values are in practice too small to affect performance.
If the M AP/M/1 queue is nearly-insensitive to a M AP parameter (e.g., a moment), we expect x to change slightly under variations of that parameter, i.e., the shape of P (n = x) should not be altered significantly.
Therefore, we check sensitivity to a fitting parameter by evaluating the sensitivity of "the threshold" x; the analysis is done for different server utilization levels ρ ∈ [0.1, 0.9] by varying the mean of the exponential service process.
We first investigate the sensitivity of the M AP (2)/M/1 results with respect to SCV , SKEW , and ρ 1 .
We focus on the cases SCV > 1 and autocorrelations ρ k > 0, which are the most frequently found in real traces.Sensitivity to SKEW .
We consider a MAP(2) with unitary mean M EAN = 1, SCV = 10, ρ 1 = 0.446 (which corresponds to an autocorrelation decay rate ρ k /ρ k−1 = 0.99, for k = 1, . . . , +∞.)
, and evaluate the cases SKEW = 5 and SKEW = 100.
The value SKEW = 100 represents a distribution with light tail, since the large asymmetry places most of the probability mass around small values; conversely, SKEW = 5 has a fat tail.
Similar considerations apply to the higher-order correlations: if we normalize the bicorrelations E[X j X j+1 X j+k ], e.g., asθ k = E[X j X j+1 X j+k ] − E[X] 3 E[X 3 ] − E[X] 3 ,it is easy to verify numerically that SKEW = 5 has a considerably larger temporal dependence than SKEW = 100.
Figure 2(a) shows the impact of SKEW on the threshold x: for all utilization levels, the threshold is ∼ 1000 times larger if SKEW = 5 instead of SKEW = 100, i.e., the performance degrades dramatically for SKEW = 5 with the tail of the queue-length probabilities being orders of magnitude longer than for SKEW = 100.
It is striking to see that the impact of SKEW is considerable also at utilizations as low as ρ = 0.1, where the variation of x is even maximal (about three orders of magnitude).
The result indicates that the higher-order properties affected by a change of SKEW can have a remarkable influence on queueing predictions.
We remark that if the same experiment is performed after setting all autocorrelations to zero, the variations of x under changes of SKEW are not as dramatic.
This is an indication that a long tail in the distribution or higher-order moments may be insufficient to capture alone the M AP/M/1 queueing performance, which is consistent with the claim that higher-order correlations are the main determinants of queueing performance.Sensitivity to SCV .
We have performed several experiments for different values of SCV , SKEW , and ρ 1 , and found that for large skewness (e.g., SKEW = 100), the queue-length probabilities are weakly sensitive to SCV .
From now on, we focus on the most difficult case where the tail is not too small and specifically we consider MAPs with SKEW = 5 and SKEW = 15, where the 99th percentile of SKEW = 5 is in the range [11.7, 16.2], while for SKEW = 15 it is in [5.6, 9.6]; in the previous section, for SKEW = 100 the 99th percentile is in [4.4, 4.5].
The sensitivity to the SCV is evaluated by setting SCV = 5 or SCV = 10.
Since in general a change of SCV implies also a change in the autocorrelations [6], for SCV = 10 we either keep the same ρ 1 of the model for SCV = 5 or the same index of dispersion IDC = SCV (1 + 2 ∞ k=1 ρ k ).
The results of the experiments are shown in Figure 2(b) and Figure 2(c).
The value of SKEW is again fundamental: if SKEW = 5, the impact of the SCV is mostly at low utilization, otherwise for SKEW = 15 only the high utilization is affected by a change of SCV .
The choice of fixing ρ 1 or IDC impacts only at larger loads and suggests that the differences between the two figures cannot be attributed to the autocorrelations only.
Explaining the large difference between Figure 2(b) and Figure 2(c) is difficult and the tail of the distribution does not give any clear intuition behind these effects.
Instead, a more detailed analysis of temporal dependence reveals that the distance between bursty arrival periods is dramatically changed by SCV and SKEW , e.g. for SKEW = 5 the autocorrelation in counts [7] between consecutive bursty periods of length T = M EAN is ρ c 1 = 0.91 for SCV = 10 and ρ c 1 = 0.57 for SCV = 5, while for SKEW = 15 the two cases are similar.
This suggests that the busy period of the queue may be substantially affected by the SCV and SKEW changes and this could reasonably explain the very different results in Figure 2(b)-2(c).
Once again, this stresses the importance of matching correlations, which clearly shape the average distance between bursty periods.
Sensitivity to ρ 1 .
Due to limited space, we do not report figures for this case and limit only to summarize our findings.
We have evaluated different MAPs for SCV = 10, SKEW = 5 or SKEW = 15, and ρ 1 ∈ [0.0, 0.446].
The results indicate the following properties: if SKEW = 15, then ρ 1 mostly impacts for utilization values larger than 70% with a gap of two orders of magnitude for x between the extreme cases ρ 1 = 0.0 (x ≈ 10 3 ) and ρ 1 = 0.446 (x ≈ 10 5 ).
For utilization values smaller than 30% and SKEW = 15 the queue is almost insensitive to changes in ρ 1 .
Conversely, for SKEW = 5 the threshold x varies up to two order of magnitude under changes of ρ 1 for all utilization values.
This is consistent with our previous findings that the higher-order properties are critical for a good fitting, but also stresses that for medium-high utilizations a good match of the autocorrelations is always fundamental.Summary.
The experiments performed in this section indicate that it may be difficult to fit real traces by relaying on first and second order properties of the trace only.
The higher-order properties controlled by SKEW affect dramatically the performance of a M AP/M/1 queue.
Also SCV and autocorrelations remain very important, although we have found some insensitivity for certain combinations of utilization and SKEW values; in light of this last observation, it also appears quite difficult to discriminate which is more important between SCV and ρ 1 , as their relative impact changes with the utilization and the SKEW values.
In the next section, we complete our analysis on higherorder properties by investigating which is the most important for the performance of the M AP/M/1 queue: higherorder moments or higher-order correlations.
We use KPC to discriminate whether higher-order correlations are more important than higher-order moments in fitting traces with temporal dependence.
We proceed as follows.
We consider two M AP (2) processes M AP a and M AP b such that the resulting KPC M AP a ⊗ M AP b has fat tail and temporal dependence, and we study the resulting threshold x as a function of the utilization ρ.
Then, we repeat the experiment using two different M AP (2) processes M AP c and M AP d such that the resulting M AP c ⊗ M AP d has same M EAN , SCV , SKEW , and approximately the same tail of the distribution and higher-order moments as M AP a ⊗ M AP b .
Table 1 Since the two distributions are virtually identical in terms of tail decay, we would expect reasonably similar performance if the distribution would be the main determinant of the M AP/M/1 queue performance.
However, Figure 3 shows that the variation of the threshold x in the two cases is extreme.
Except for the high-utilization case where the results must converge because of the identical value of the index of dispersion IDC of the two MAPs, the results of M AP c ⊗ M AP d are orders of magnitude worse in terms of performance than M AP a ⊗ M AP b .
This confirms our intuition that fitting higher-order correlations is fundamental.
Further, it appears consistent with the very different counting-process fitting approach in [10], which illustrates the importance of fitting higher-order properties of the counting process.Summary.
Matching higher-order correlations in the KPC-Toolbox has priority over matching higher-order moments or the tail of the distribution.
In practice, it is reasonable to assume that matching the first two-three moments of the distribution of temporal dependent traces may be sufficient for capturing the impact of the distribution on queueing performance.
All residual degrees of freedom of the model should be spent into matching correlations of different orders.
Due to the cost of computing on a real trace a large number of correlations with more than three terms, the correlations E[X j X j+k ] and E[X j X j+k X j+k+z ] are often the most practical descriptors to be matched.
Note also that higher-order correlations of the type E[X 2 j X j+k ] are included as special cases of E[X j X j+k X j+k+z ].
The KPC-Toolbox is a set of MATLAB scripts for fitting real traces into MAPs.
The toolbox implements an algorithmic solution of the divide-and-conquer fitting problem defined by KPC, see [6].
Several design choices have been made to strike a good balance between simplicity of use and accuracy of fitting; in particular, the underlying fitting paradigm is based on the sensitivity analysis results found in Section 3.
In the next subsections we outline the key ideas behind the design of the KPC-Toolbox.
The KPC-Toolbox approach to MAP order selection is based on a recursive characterization of MAP autocorrelations found in [6].
We consider the trace autocorrelations and, using the characterization in [6], we bound from above the goodness-of-fit of a MAP(N ) model, for different choices of the order N .
From these values, we select the best order using an information-theoretic approach.
For simplicity, we consider autocorrelations, but the approach may be easily extended to evaluate moments or higher-order correlations using the formulas in [6]; this is left as a future extension of the KPC-Toolbox.
It is possible to show that MAP moments and correlations satisfy simple linear recurrence expressions [6].
For example, the autocorrelations ρ k of a MAP with N phases satisfyρ k = a 1 ρ k−1 + a 2 ρ k−2 + . . . + a N ρ k−N , k ≥ N, (7)where the a k coefficients are computed from the eigenval-ues of P = (−D 0 ) −1 D 1 [6].
Therefore, a necessary condition for a good matching of the measured trace autocorrelationsˆρrelationsˆ relationsˆρ k is that they can be fitted accurately by (7) for some choice of the coefficients a k .
This is not a sufficient condition, unless the a k 's are constrained in sign and magnitude to be generated from a feasible MAP(N ); unfortunately, feasibility expressions for the a k 's are prohibitive to obtain for large MAPs because of the high-order of the nonlinear equations involved.
For this reason, our order selection approach relies only on necessary conditions.
We select the best MAP order N * by (7) as follows.
For a trace we consider m autocorrelation coefficientsˆρcoefficientsˆ coefficientsˆρ k and give a preliminary evaluation of MAP(N ) fitting by defining a linear system of equations (7), i.e.,           ˆ ρ k+1 = a 1 ˆ ρ k + a 2 ˆ ρ k−1 + . . . + a N ˆ ρ k−N +1 , ˆ ρ k+2 = a 1 ˆ ρ k+1 + a 2 ˆ ρ k + . . . + a N ˆ ρ k−N +2 , . . . . . . . . .
ˆ ρ k+m = a 1 ˆ ρ k+m−1 + a 2 ˆ ρ k+m−2 + . . . + a N ˆ ρ k−N +m .
(8)The linear system is solved efficiently by linear regression to compute the residual sum of squares RSS = k (ˆ ρ k − ρ k ) 2 .
Linear regression of hundreds of equations (7) can be solved with small time and space requirements, usually in a few seconds.
In particular, the KPC-Toolbox uses 500 logarithmically-spaced autocorrelationsˆρautocorrelationsˆ autocorrelationsˆρ k , k ∈ [1, 10 5 ], to parameterize the linear system (8).
If the trace has low RSS relatively to the normalizing constant k ˆ ρ 2 k , then its correlation structure should be relatively easy to fit with a MAP, and the results of the KPC-Toolbox are expected to provide a good fitting model because the temporal dependence structure can be matched well by a MAP.
Otherwise, large RSS values indicate that MAPs are unlikely to provide a good fitting of the considered trace and, if no order N has good RSS value, other models with higher-order or different from MAPs should be considered.After this first evaluation, we use the computed RSS values for different choices of the model size N ∈ {2, 4, 8, 16, 32, 64} to select the best trade-off between accuracy and model size as follows.
We adopt the Bayesian Information Criterion (BIC) [18] as quantitative method to estimate the best trade-off.
The BIC is defined as [18] BIC(N ) = m log RSS m + N log m, where, in our application, m is the number of autocorrelationsˆρlationsˆ lationsˆρ k used in the regression.
According to its definition [18], the BIC should be intended as a cost function, i.e., lower values of BIC denote better trade-offs.
Thus, the best order is immediately selected as N * = {N : min N BIC(N )}, and it is used by the KPC-Toolbox as the best choice for the MAP order.
Indeed, similar criteria may be defined by replacing BIC with similar cost-accuracy objective functions, e.g., the Akaike Information Criteria (AIC).
However, the BIC is known to be better than AIC as the number of available observations becomes asymptotically large [18] and is therefore used by KPC-Toolbox as the best-available information-criterion method.We conclude by remarking that, in the special case of traces that are not autocorrelated, the BIC order selection method does not apply, but the KPC toolbox can be used to fit a PH-type renewal process by manually specifying the number of moments desired for the fitting.
Matching the first five moments is often sufficient for very accurate distribution fitting, see [6] for case studies.The resulting MAP(2)s are finally composed by KPC into a MAP(N * ) that is returned to the user.
More precisely, the three stages described above are run several times to find the best MAP to be returned to the user.
The selection algorithm operates as follows.
The KPC-Toolbox first runs several times stage 1 while keeping stored the solutions that produced the best ten RSS value of the stage 1 optimization.
Then, stage 2 is run several times for each of the solutions selected in stage 1.
The KPC-Toolbox returns as best MAP the stage 2 solution associated to the overall lowest RSS for the bicorrelations.
According to this selection approach, the final MAP should have a high-quality fitting of the autocorrelations (stage 1) and a nearly-optimal fitting of the bicorrelations (stage 2) and is thus consistent with the sensitivity analysis conclusions presented in Section 3.
We conclude with experiments on the accuracy of the KPC-Toolbox in fitting both real and synthetic traces.
Consistently with the sensitivity analysis, we focus our evaluation on the queueing prediction accuracy for a −/M/1/F CF S queue and we fit two traces:• Seagate Web trace: This trace is composed by 3.6 × 10 6 interarrival times of requests at the disk drive of a Web server, see [17] for a description of this trace and related analyses of its temporal dependence structure.
• Bellcore Aug89 trace: this is a benchmark case for evaluating the quality of long-range dependent trace fitting approximations [1,10,11].
The traffic consists of 1 million inter-arrival time samples collected in 1989 at the Bellcore Morrison Research and Engineering facility.We remark that the two traces are used also in the manually-performed fitting experiments in [6].
However, the results presented here are generated automatically, and not manually, using the KPC-Toolbox.
In this section, we compare the results for the Seagate and the Bellcore traces with the manually-generated results in [6] in order to prove that the automatic fitting approach compares very well with time-consuming manual fitting.
For each of the three traces, the KPC-Toolbox runs the BIC order selection for different orders, i.e., {4,8,16,32,64}.
The results of the BIC order selection are shown in Figure 4.
For the Bellcore Aug89 trace, the BIC selection in Figure 4 indicates that order 16 is the best choice, order 32 is a close candidate, while the other orders are significantly worse in terms of BIC.
Similarly, for the Seagate Web trace, the BIC criterion indicate a best order of 16 phases.
These results are consistent with our manual fitting experience, since we were never able to fit MAPs with less than 16 phases that could reproduce effectively the Seagate and Bellcore traces queueing performance.
In particular, to the best of our knowledge, the best available fitting for the Bellcore Aug89 trace have either 16 or 32 states [1,10], which further confirms the reliability of the BIC results in Figure 4.
In figures 5 and 6, we present the complementary cumulative distribution function (CCDF) of the queue length probabilities for a M AP/M/1 queue and the empirical CCDF obtained by simulating the T race/M/1 queue.
The CCDFs of the M AP/M/1 queue are obtained by solving the underlying quasi-birth death process using MAMSolver (available at http://www.cs.wm.edu/MAMSolver/).
The service rate of the exponential server is adjusted to tune the load of the server at different utilization levels.
We plot the queueing distributions at utilizations 20%, 50%, and 80%, standing for the low, medium and high load, respectively.The Bellcore Aug89 trace has been identified as a difficult trace to fit and thus extensively used in the literature of MAP fitting to evaluate the effectiveness of fitting [5].
At 20% utilization level, the fitted MAP(16) underestimates the queueing probabilities.
When the utilization increases, the queueing probability prediction improves.
At 50% utilization level, the fitted MAP captures the small and medium queue lengths probabilities better than the 20% utilization level.
At 80% utilization, the fitted MAP(16) almost overlaps the trace up to the queue length equal to 8 × 10 3 .
Further, as shown in comparison with the manual fitting, the queueing prediction accuracy for the KPC is comparable with the best in the literature [6] with the additional benefit that KPC automatically generates the MAP while other methods require exhaustive manual tuning to obtain a good MAP.
Similarly with the Seagate Web trace, as utilization increases, the fitted MAP(16) captures more accurately the queueing behavior of the Trace/M/1 queue.
For utilization levels 50% and 80%, the fitted MAP captures the beginning probabilities of the queue length very well.
Also in this case, the result is comparable with the manually fitted MAP determined in [6] and also plotted in the figure.
In this paper, we have presented the KPC-Toolbox, a set of MATLAB scripts for fitting workload traces into MAPs.
One of the greatest challenges in MAP fitting is to (a) decide the order of the MAP that is necessary to fit the trace data and (b) determine the relative importance of the various stochastic descriptors to be of the trace that should be matched by the MAP.
The KPC-Toolbox meets the above challenges with a novel approach that uses the BIC criterion to determine the best order-accuracy trade-off for a MAP and by using optimization to explore a vast parameter space of alternatives such that the most important stochastic properties of the trace are captured by the resulting MAP.
Detailed queueing analysis that confirms the importance of matching higher-order correlations (i.e., joint moments) rather than higher order moments is used to guide the optimization.The tool implements the theoretical results of [6], and guided by BIC and the various derived criteria for fitting, it produces good MAP fittings of challenging traces in an automatic way.
Experimental results on real traces from both the systems and networking domains show the effectiveness of deriving a MAP that captures well the workload characteristics.
Although the robustness of the toolbox has been extensively examined and has been shown successful with a large set of traces that are not presented here due to lack of space, we intend to extend the theory and the tool implementation so that it can also apply to traces with arbitrary autocorrelation functions (e.g., periodicity, complex eigenvalues).
Ongoing work also includes the trace preprocessing for noise reduction to improve the stability of fitting.
The KPC-Toolbox is available for download at http://www.cs.wm.edu/MAPQN/kpctoolbox.html.
