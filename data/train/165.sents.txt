Vehicle chatting is one of the most promising applications in VANETs, which allows like-minded vehicles to chat on the topics of common interest on the road.
However, there exist some newly emerging privacy challenging issues in vehicle chatting application, such as how to find a like-minded vehicle on the road and how to prevent one's interest privacy (IP) from others who are not like-minded?
In this paper, to tackle these challenging issues, we propose an efficient privacy-preserving finding like-minded vehicle protocol (FLIP), and apply the provable security technique to demonstrate its security.
In addition, extensive simulations are also conducted to examine its practical considerations, i.e., the relation between the expected IP-preserving level and the delay of finding like-minded vehicles on the road.
In this section, we define the problem by formalizing the system model and identifying our design goal.
We consider a VANET in a city environment, which consists of a large number of vehicles V = {V 1 , V 2 , · · · } and a single offline trusted authority (TA), as shown in Fig. 1.
Since we confine our problem to the scenario where vehicles find likeminded vehicles with common interest on the road without the assistance of RSUs, we do not include RSUs in our current model, although they are still deployed to support V-2-I communication.
• Trust Authority (TA): TA is a trustable and powerful entity.
The responsibility of TA is in charge of management of the whole network, for example, initializing the system, registering the vehicles in the system by assigning a finite set of pseudo-IDs and the corresponding key materials to each vehicle.
Note that TA is an offline entity, which is not directly involved in the V-2-V communications.
• Vehicles V = {V 1 , V 2 , · · · }: Each vehicle V i ∈ V isequipped with the OBU device, which allows them to communicate with each other for sharing some information of common interest.
Different from the mobile nodes in the general ad hoc network, the OBU device in VANET has no power-constrained issue and at the same time, is equipped with powerful computational and communication capabilities.
According to [6], the medium used for communications among the neighboring vehicles is 5.9 GHz Dedicated Short Range Communication (DSRC) identified as IEEE 802.11p, and the transmission range of each vehicle is 300 m.
When two vehicles V a , and V b ∈ V are within their transmission range, they can chat on the topics of common interest on the road.
1) Security requirements and design goal: Security and privacy are always of vital importance to the flourish of vehicle chatting application in VANET.
Without the guarantee of vehicle's privacy including identity privacy [7], location privacy and interest privacy, vehicle chatting application can't be widely accepted by the public.
Therefore, it is essential to protect vehicle's privacy.
Specifically, the following security requirements should be ensured in vehicle chatting application: i) vehicle's real identity should be protected; ii) vehicle's location privacy should be guaranteed; and iii) vehicle's interests should be protected against others who doesn't have the common interest.In regard of the former two security requirements, each vehicle can use pseudo-ID to conceal the real identity, and periodically change multiple pseudo-IDs to achieve the location privacy [1], [3].
However, for the third security requirement, vehicles should use some IP-preserving protocols to find other vehicle who has the common interest on the road.
Concretely, when a vehicle V a wants to talk with another vehicle V b nearby, if V b has the common interest with V a , V a and V b can establish a shared session key used for secure chatting on the topics of common interest.
However, if V b doesn't have the common interest with V a , neither V a nor V b can know the counterpart's interest.To satisfy the above security requirements, our design goal is to develop an efficient privacy-preserving finding likeminded vehicle protocol (FLIP) in VANET environment.
With FLIP, vehicles who have the common interest can establish a shared session key without violating IP to others who have non-common interest.
To subtly check the security of FLIP protocol in terms of IP-preserving, we should formally define its security model as follows.2) Security model of FLIP: To model all possible leakages of IP in finding like-minded vehicle protocol on the road, we define the security model of FLIP by borrowing some ideas from security model of authenticated key exchange (AKE) protocols [8] to describe some possible attacks.
Specifically, in the model, the vehicles do not deviate from the FLIP protocol, while an adversary A, whose attack capabilities are modelled by a set of pre-defined oracle queries, can passively monitor and/or actively control all the inter-vehicle communications.
We assume that two vehicles V a and V b participate in FLIP for common interest based on the common interest I s α , where 1 ≤ α ≤ k, A is given either the actual session key or a random value drawn from the session key space, according to a random bit β ∈ {0, 1}, i.e., actual session key is given when β = 0 and a random value is drawn when β = 1.
The Test query can be asked at most once by A. FRESHNESS: The freshness is a useful notion, which identifies the session keys about which the adversary A ought not to know anything since A has not revealed any oracles that have accepted the session key and has not corrupted • In the game, A may ask some queries and get back the answers from the corresponding oracles.I α ∈ I = {I 1 , I 2 , · · · , I k }.
V i ∈ {V a , V b }.
An oracle Π s Va,V b is said fresh if i) Π s Va,V• At certain point, A asks a Test query to a fresh oracle, and outputs its guess α 񮽙 for α, where 1 ≤ α ≤ k, and β 񮽙 for the bit β in the Test query.
The success of A in the game is quantified in terms of A's advantage in distinguishing whether A guesses the correct common interest I s α , and receives a real session key or not, i.e., its ability guessing α, β.
We define A's advantages asAdv α P (A) = k·Pr[α = α 񮽙 ]−1, Adv β P (A) = 2·Pr[β = β 񮽙 ]−1We say that the FLIP is secure if both Adv α P (A) and Adv β P (A) are negligible.
In this section, we introduce some preliminaries, including some used notations, elliptic curve group and complex assumption, on basis of our proposed FLIP protocol.
Let an integer k ∈ N, then 1 k is the string of k 1s.
If x, y are two strings, then x񮽙y is the concatenation of x and y.
If S is a finite set, s R ← − S denotes sampling an element x uniformly at random from S.
If A is a randomized algorithm, y ← − A(x 1 , x 2 , . . .) means that A has inputs x 1 , x 2 , . . . and outputs y. Let p be a large prime, (eg.
p > 3).
Randomly choose two field elements a, b ∈ F p and define the elliptic curve equation E : y 2 = x 3 + ax+ b (mod p) over F p , where 4a 3 +27b 2 񮽙 = 0 (mod p).
The cardinality of E should be divisible by a large prime number with regard to the security issue raised by Pohlig and Hellman [9].
Let P = (x P , y P ) be a generator point over E(F p ) whose order is a large prime number q, where P 񮽙 = O, and O denotes the point at infinity.
Then, G = 񮽙P 񮽙 is an efficient elliptic curve group of order q.
In the following, we define the quantitative notion of the complexity of the problem underlying the proposed protocol, namely the Computational Diffie-Hellman (CDH) Problem.Definition 1: (CDH Problem) The Computational DiffieHellman (CDH) problem in G is as follows: given (P, xP, yP ) ∈ G for unknown x, y ∈ Z * q , compute xyP ∈ G. Definition 2: (CDH Assumption) Let A be an adversary that takes an input of (P, xP, yP ) ∈ G for unknown x, y ∈ Z * q , and returns a new element Z ∈ G.
We consider the following random experiment.
Experiment Exp CDH A x, y R ← − Z * q , Z ← A (P, xP, yP ) if Z = xyP then b ← 1 else b ← 0 return b In this section, we present our efficient privacy-preserving finding like-minded vehicle protocol (FLIP), which mainly consists of two parts: system initialization and privacypreserving finding like-minded vehicle on the road.
In system initialization phase, the Trusted Authority (TA) first initializes the whole system by running the following steps.
Given the security parameter l, TA generates an elliptic curve group G = 񮽙P 񮽙, where the generator P has a large prime order q with |q| = l. Then, TA chooses a random vehicle Va (pid a ) vehicle V b (pid b ) choose I + ∈ I = {I 1 , I 2 , · · · , I k }, x ∈ Z * q X = xH(I + ), σa = ECDSA(I||X) I||X||σa||pid a ||certa − −−−−−−−−−−−−− → if σa is valid choose I − ∈ I, y ∈ Z * q , Y = yH(I − ), Z = yX Auth 0 = H 0 (pid a ||pid b ||Z) if σ b is valid When a vehicle V a ∈ V is on the road and wants to find a like-minded vehicle V b ∈ V on the common interest I α nearby, as shown in Fig. 2, they will run the following steps to establish a shared session key sk regarding the common interest I α .
Step 1.
V a first sets an interest set I, which consists of k kinds of interests {I 1 , I 2 , · · · , I k }, where V a 's actual interest I + is involved.
Then, V a chooses a random number x ∈ Z * q , computes X = xH(I + ), and uses the ECDSA algorithm to make a signature σ a = ECDSA(I||X) on I||X with regard to the pseudo-ID pid a and the certificate cert a .
In the end, V a broadcasts the request I||X||σ a ||pid a ||cert a to the nearby vehicles.Step Z 񮽙 = xY = xyH(I − ) 񮽙 = xyH(I + ) = yX = Zwhich indicates that Auth 0 , and Auth 1 are not valid, and the shared session key sk can't be established.
Therefore, the correctness of the proposed FLIP protocol follows.
Note that, the responsor V b can only response once for the same request.
Otherwise, by successive responses to the same request, the requestor's IP can be guessed by non-like-minded vehicles.
In reality, the requestor V a usually can detect whether a nearby vehicle V b has responded more than once based on V b 's relative location and other correlative information on the road.
Thus, the successive-response attack can be prevented.Efficiency.
The proposed FLIP protocol is very efficient in terms of computational costs.
Let T mul denote the time to perform one point multiplication in G, and T sig and T ver the times of ECDSA signing and verification, respectively.
Since these operations dominate the speed of FLIP, we neglect others such as hash operations in measure of FLI.
Then, only 2T mul + T sig + T ver are required at both the requestor V a and the responsor V b in the proposed FLIP protocol.
Based on the results in [10], we know that T mul ≈ 2.92 ms, T sig ≈ 2.92 ms, T ver ≈ 3.87 ms for a 224-bit ECDSA with the MIRACL cryptographic lib [11] running on a 3GHz Pentium IV system.
Then, the computational costs are only 2T mul + T sig + T ver ≈ 12.63 ms. In addition, since the 802.11p physical layer offers different bitrates, ranging from 3 to 27 Mbps, from which we can choose [6].
Therefore, the transcripts in the proposed FLIP protocol can be fast exchanged between the requestor V a and the responsor V b .
In this section, we will demonstrate the IP can be protected against non-like-minded vehicles without collusion in the proposed FLIP protocol.
Note that, since the ECDSA signature is unforgeable, all transcripts in FLIP are detectable if they are altered by the adversary.
Therefore, we should only consider an adversary can't break the proposed FLIP protocol without altering the transcripts.Theorem 1: Let A be an adversary against the proposed FLIP protocol in the random oracle model [5], where the hash functions H, H 0 , H 1 , and H 2 behave as random oracles.
Assume that A has the advantage Adv α P (A) = ε to guess the correct interest I α , and the advantage Adv β P (A) = 񮽙 break the proposed FLIP protocol without altering the transcripts, within the running time τ , after several oracles defined in the adversarial model.
Then, there exist 񮽙 񮽙 ∈ [0,1] and τ 񮽙 ∈ N as follows񮽙 񮽙 = Succ CDH A ≥ 񮽙 q s q H2 , τ 񮽙 ≤ τ + Θ(.)
such that the CDH problem can be solved with probability 񮽙 񮽙 and within time τ 񮽙 , where Θ(.)
is the time complexity for the simulation, q H2 is the total number of H 2 oracle queries, and q s is the total number of session instancesΠ 1 Va,V b , Π 2 Va,V b , · · · , Π qs Va,V b .
Proof: Since the adversary A can, with non-negligible advantage Adv β P (A), break the proposed FLIP protocol, we can use A's attack capabilities to construct another algorithm B to solve the CDH problem.
In specific, B is given a random instance of the CDH problem (P, xP, yP ), where x, y ∈ Z * q .
Then, B runs A as a subroutine and simulates the attack environment required by A.At Y i = 񮽙 x i P ,as well as the certificate cert i with the resort of TA.
Then, B interacts with A and simulates all the instances with queries of oracles SendReq, SendRes, Execute, Reveal, Corrupt, and Test.
In order to make use of A's attack capability, B first guesses γ such that A asks the Test query in the γ-th session.
Because there are total q s session instances, the probability for successful guessing γ is 1/q s .
Besides the above oracles, B should also simulates the random oracles H, H 0 , H 1 , and H 2 by maintaining the lists H-list, H 0 -list, H 1 -list and H 2 -list to deal with the identical queries as follows. )
, the adversary A guesses α 񮽙 ∈ {1, 2, · · · , k} for α and β 񮽙 ∈ {0, 1} for β, and returns (α 񮽙 , β 񮽙 ) to B. Then, we analyze A's successful guess probability on α 񮽙 and β 񮽙 .񮽙
sim-H 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 On input of an interest I i ∈ I = {I 1 , I 2 , · · · , I k } choose a fresh random number r i R ← − Z * q compute H i = r i P , set H(I i ) = H i add (I i , r i , H i ) to H-list return H i 񮽙 sim-H 0 , H 1 , H 2 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 On input of pid a ||pid b ||Z i on H j , j ∈ {0, 1, 2} choose a fresh random number u ij R ← − Z * q set H j (pid a ||pid b ||Z i ) = u ij add (pid a ||pid b ||Z i , u ij ) to H j -list return u ij 񮽙 sim-SendReq(Π s Va , init) 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 if s = γ then 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 randomly choose an interest I α ∈ I obtain the tuple (I α , r α , H α ) in H-list compute X = r α xP , σ a = ECDSA(I||X) returnI α , r α , H α ) in H-list compute Y = r α yP , set Z = 񮽙 choose a fresh random number u α0 R ← − Z * q set Auth 0 = H 0 (pid a ||pid b ||Z) = u α0 add (pid a ||pid b ||Z, u α0 ) to H 0 -list compute σ b = ECDSA(X||Y ||Auth 0 ) return X||Y ||Auth 0 ||σ b ||pid b ||cert b else if s 񮽙 = γ then 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 񮽙 choose the same interest I i identified with s obtain the tuple (I i , r i , H i ) in H-list chooses y i ∈ Z * q , set Y = y i H i , Z = x i y i H i choose a fresh random number u i0 R ← − Z * q set Auth 0 = H 0 (pid a ||pid b ||Z) = u i0 add (pid a ||pid b ||Z, u i0 ) to H 0 -list compute σ b = ECDSA(X||Y ||Auth 0 ) return X||Y ||Auth 0 ||σ b ||pid b ||cert b 񮽙 sim-SendReq(Π s Va , X||Y ||Auth 0 ||σ b ||pid b ||cert b ) 񮽙 񮽙= H 1 (pid a ||pid b ||Z) = u i1 add (pid a ||pid b ||Z, u i1 ) to H 1 -list set session key sk = H 2 (pid a ||pid b ||Z) = u i2 add (pid a ||pid b ||Z, u i2 ) to H 2 -list returnFirst, we consider the transcripts X = xH(I α ) and Y = yH(I α ) with unknown x, y ∈ Z * q .
Because G is a cyclic group, we can see there always exist other x i , y i ∈ Z * q such that X = x i H(I i ) and Y = y i H(I i ).
Therefore, the transcripts (X, Y ) can be linked to each interestI i ∈ {I 1 , I 2 , · · · , I k } equally.
Therefore, we can know Pr[α 񮽙 = α] = 1 k and Adv α P (A) = k · Pr[α = α 񮽙 ] − 1 = 0, i.e., ε = 0Second, we analyze the advantage probability Adv β P (A) on guessing the correct β, wherePr[β = β 񮽙 ] = 1 2 + Adv β P (A) 2Let E denote the event that pid a ||pid b ||Z has been queried by A on H 2 oracle, where Z = r α xyP .
If the event E does not occur, B has no idea on the session key sk, thenPr[β 񮽙 = β|¬E] = 1 2 and Pr[β = β 񮽙 ] = Pr[β = β 񮽙 |E] · Pr[E] + Pr[β = β 񮽙 |¬E] · Pr[¬E] = Pr[β = β 񮽙 |E] · Pr[E] + 1 2 · (1 − Pr[E]) ≤ Pr[E] + 1 2 · (1 − Pr[E]) = 1 2 + Pr[E] 2Therefore, based on the above relations, we havePr[E] ≥ Adv β P (A)Because H 2 -list contains q H2 entries, we can pick up the correct pid a ||pid b ||Z, where Z = r α xyP , with the success probability 1/q H2 .
Then, by computing Z/r α = xyP , where r α is included in the entry (I α , r α , H α ) in H-list, we can get the CDH challenge xyP .
Combining the probability 1/q s for guessing the correct γ, we have񮽙 񮽙 = Succ CDH A ≥ Adv β P (A) q s q H2 = 񮽙 q s q H2In addition, we can obtain the claimed bound for τ 񮽙 ≤ τ +Θ(.)
in the above simulation.
In summary, the IP can be protected in the proposed FLIP protocol.
Thus, the proof is completed.
In the proposed FLIP protocol, to prevent successiveguessing attack from non-like-minded vehicle, the responsor V b is only allowed to respond once for the same request.
Therefore, the larger the Interest Set I = {I 1 , I 2 , · · · , I k } that the requestor V a chooses, the harder the actual interest I α ∈ I can be guessed by non-like-minded vehicle, and thus the IP can be protected.
However, when the set I becomes large, multiple interests I 񮽙 = {I α , I β , I γ , · · · } of the like-minded vehicle V b could belong to I. Then, it is hard for V b to choose the correct I α ∈ I 񮽙 , which thus causes the long delay for finding the likeminded vehicle.
Therefore, in this section, we use a custom simulator built in Java to study how the interest set I affects the delay for finding the like-minded vehicle on the road.
In specific, the performance metric used in the evaluation is the average delay for finding the like-minded vehicle, denoted by FD, which is defined as the average time between when the requestor V a sends a request and when V b successfully finds a like-minded vehicle V b on the road.
We consider a large number of vehicles V = {V 1 , V 2 , · · · } are moving on a multi-lane same-direction road with velocity varying from 40 km/h to 80 km/h.
Consider other vehicles passing-by a vehicle V a ∈ V follows a Poisson process, and the inter-passing-by time t a has an exponential distribution with the mean 1/λ.
In the simulation, the vehicle V a will broadcast the request with Interest set I of different size |I| varying from 1 to 10, to find the like-minded vehicle.The detailed parameter settings in the simulations are summarized in Table I.
We perform the simulations for the specified interest set size |I| varying from 1 to 10 with increment of 1.
For each case, we run the simulation 10,000 times, and the average FD is reported.
Fig. 3 shows the average FD under the different |I| and λ within 1 hour.
From the figure, we can see, the larger the |I|, the longer the average FD; but at the same time, the average FD can be reduced with the increase of λ.
Therefore, by setting a proper size of |I| on considering of λ, a vehicle V a can find a like-minded vehicle within an expected time on the road while keeping his IP from non-like-minded vehicles.
[12], [13], which are closely related to the proposed FLIP protocol, but focus on other scenarios different from VANETs.
Atallah and Du [12] present secure multi-party computation problems and several privacy-preserving applications including privacypreserving database query, intrusion detection, data mining, and geometric computation.
Although they take some initial attempts to tackle these problems, their solutions are less than satisfactory because a semi-trusted third party is required to be involved in the privacy-preserving computations.
Based on the homomorphic encryption, Zhong et al. [13] propose three protocols called Louis, Lester and Pierre to resolve the nearby friend problem, where a mobile user can determine whether or not one of his friend is in a nearby location in a privacy-preserving way.
However, Louis still requires an online semi-trusted third party, and both Louis and Lester are found insecure [14], [15].
Recently, Chatterjee et al. [14] propose a new efficient protocol for the nearby friend problem without resorting to a semi-honest third party.
However, due to lack of authentication, their protocol could suffer from replay attack and man-in-the-middle attack, and thus can't be directly applied in VANET scenarios.
Different from the above works, our proposed FLIP protocol can provide mutual authentication and establish a shared session key between two like-minded vehicles.
But more importantly, it is a provably secure protocol suitable for VANET scenarios.
Secure finding like-minded vehicles protocol (FLIP) can protect vehicle's IP and is of vital importance to the success of vehicle chatting application on the road, yet it hasn't been paid enough attention in VANET.
In this paper, based on the elliptic-curve technique, we have proposed an efficient IPpreserving FLIP protocol.
With the provable security technique, the proposed FLIP protocol has been demonstrated to be secure in the VANET scenarios.
In addition, extensive simulations have also been conducted to its practical considerations, i.e., how to balance the level of IP-preserving and the delay of finding like-minded vehicles on the road.
Because the proposed FLIP protocol keeps each other's IP-preserving if two vehicles don't have the common interest, it can be widely accepted by the public.
