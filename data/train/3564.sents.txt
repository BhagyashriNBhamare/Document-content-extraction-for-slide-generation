In this paper, we design and implement a versatile MIMO backscatter (VMscatter) system, which leverages the diversity features of MIMO to dramatically decrease bit error rate (BER) and increase throughput with negligible overhead.
Our approach is different from existing WiFi MIMO backscatter approaches which simply reflect the signals from the WiFi MIMO sender and do not take advantage of MIMO tech-nologies' advanced features (i.e., low bit error rate and high throughput).
In our approach, the backscatter can achieve the same full diversity gain as traditional MIMO system by implementing the space-time coding on the backscatter tag under the constraint that backscatter tags cannot control the reflected signals to be orthogonal.
Moreover, the backscatter can reflect excitation signals from the senders that have either a single antenna or multiple antennas.
To implement the VMscatter system, we addressed the special design challenges such as complicated channel estimations among the sender, tag, and receiver by using a novel pre-scatter channels elimination method and a post-scatter channels equalization method.
Our VMscatter design introduces negligible overheads (in terms of hardware cost, energy consumption, and computation) on the backscatter tag.
We further extended our design to support any number of antennas that the sender, tag, and receiver have.
Our MIMO backscatter design is generic and has the potential to be extended to achieve massive MIMO.
We extensively evaluated our system in different real-world scenarios.
Results show that the BER is reduced by a factor of 862 compared to the most related work MOXcatter [68].
In the last few years, backscatter systems have been proposed to piggyback data on ambient signals such as WiFi [33,59], Bluetooth [30], LoRa [28,47], FM [53], etc.
By doing this, the backscatter device consumes very little energy to wirelessly transmit data, which can enable lots of Internet-of-Things applications, such as device tracking [31], smart homes and smart health [5,30].
On the other hand, the Multiple-Input * Both authors contributed equally to the paper Multiple-Output (MIMO) technique has become an essential element of wireless communication.
To explore the benefits of the MIMO technique, researchers have proposed various important approaches, such as full duplex MIMO [10,11,15], multi-user MIMO [9,19,35,[48][49][50]56], massive MIMO [12,29,32,65,66], distributed MIMO [26,27], and MIMO networks [21,25,43,44,57,67].
Although MIMO has been widely used and explored in wireless systems, little work has been conducted to effectively integrate MIMO techniques into a backscatter system for more reliable and faster backscatter communications.
The only related work (MOXcatter [68]) tries to backscatter MIMO signals from the WiFi MIMO sender.
However, the multiple antennas on MOXcatter do not take advantage of advanced features of MIMO technology.
Specifically, although MOXcatter uses multiple antennas, the phase changes among these antennas are always the same when reflecting the WiFi signals.
Therefore, MOXcatter does not fully leverage the spatial diversity, which leads to even higher bit error rate and lower throughput than the corresponding non-MIMO WiFi backscatter system FreeRider [62].
Moreover, the MOXcatter tag needs explicit control signals from the sender to identify whether the sender is sending a single stream or multiple streams signals.
These explicit control signals prevent MOXcatter to be widely deployed in an environment where the sender is uncontrollable.Different from existing WiFi backscatters that reflecting non-MIMO [14,33,61,62] and MIMO [68] signals, our highlevel goal in this paper is to design a versatile MIMO backscatter (VMscatter) system, which leverages the diversity features of MIMO to dramatically decrease bit error rate (BER) with negligible overhead because the backscatter communication has a very low signal-to-noise ratio (SNR) which leads to a high BER.
With a lower BER, the backscatter communication can have a longer effective communication range, better robustness, and better reliability.
We note that the sender of VMscatter is not required to be a MIMO device.
In our design, we encountered the following challenges: C1.
How to realize MIMO transmissions on a low-power backscatter tag for reliable communication?
A traditional MIMO system improves the reliability by utilizing a spacetime coding scheme to generate orthogonal symbols (which increase the diversity gain) among antennas.
However, the low-power backscatter tag cannot demodulate the incoming ambient signals (which are used to piggyback backscatter data) due to limited resources on the tag.
Therefore, the backscatter tag is not able to generate orthogonal symbols.
We discovered that by implementing space-time coding on the backscatter tag, we can achieve the same full diversity gain as traditional MIMO systems, even though the reflected backscattered symbols are non-orthogonal.
We note that the non-orthogonality is not a hard constraint.
Our proposed algorithm is applicable for the reflected symbols being either orthogonal or non-orthogonal.
However, it is very challenging to implement space-time coding on the tag by only turning on/off the switches, because we do not want to increase the tag's computation and energy overheads.
C2.
How to demodulate the backscattered data?
The MIMO backscatter system is more complicated than traditional MIMO system because we need to deal with the prescatter channels (i.e., the channels between the sender and the backscatter tag) and post-scatter channels (i.e., the channels between the backscatter tag and the receiver) for proper demodulation.
For example, a 2 × 2 MIMO system has four different physical channels among the two sender antennas and two receiver antennas.
The receiver needs to estimate these four channels in order to correctly demodulate the data.
With a two-antenna backscatter tag in the middle (i.e., 2 × 2 × 2 setup), the situation becomes even more complicated.
To obtain the backscattered data, eight physical channels need to be estimated (i.e., four pre-scatter channels and four postscatter channels).
Furthermore, we also considered frequency mismatch (including cumulative clock drift and oscillator instability) between the VMscatter tag and receiver as well.
C3.
How to achieve a generic M × K × N setup?
As a versatile MIMO backscatter system, it needs to support an arbitrary number of antennas at the sender, tag, and receiver sides (shown in Fig. 1).
It is important to support any number (i.e., M) of antennas that the senders may have, because we want to leverage various types of existing infrastructures.
However, it is very challenging to achieve this because the lower-power backscatter tag cannot decode the packet from the sender to obtain the knowledge of the number of antennas.
Existing work such as MOXcatter [68]) needs to modify the sender to explicitly send out control messages (i.e., four consecutive special packets) to the tag so that the tag can identify the types of the sender's excitation signals (i.e., MIMO v.s. non-MIMO), which is impractical.
We mathematically demonstrate how to eliminate the impact of the pre-scatter channels such that the impact of the number (i.e., M) of senders' antennas can be eliminated (see Sec. 4.3).
Therefore, we do not need to modify the sender.
We further describe how to support an arbitrary number of antennas at both the tag (i.e., K) and receiver (i.e., .
We also validate our design using both experiments and simulations.Our key contributions are as follows:• To the best of our knowledge, this is the first work that designed and implemented a versatile MIMO system, which leverages the diversity features of MIMO to dramatically decrease bit error rate (BER) and increase throughput with negligible hardware cost, energy consumption, and computation overheads on the low-power backscatter tag.
• To implement the versatile MIMO backscatter system, we addressed the special design challenges on the backscatter tag (e.g., how to implement space-time coding by only turning on/off the switches) and on the receiver side (e.g., frequency mismatch and complicated channel estimations among the sender, tag, and receiver).
• Our design is generic.
It can support an arbitrary number of antennas at the sender, tag, and receiver.
The design principles have the potential to be extended to achieve massive MIMO.
• We build a hardware prototype of the proposed VMscatter system and design an IC circuit.
We also extensively evaluated our system under different real-world settings.
Evaluation results demonstrate that VMscatter can provide faster and orders of magnitude more reliable communication than stateof-the-art backscatter systems.
For example, VMscatter's bit error rate is smaller than that of MOXcatter by a factor of more than 800.
Our work is motivated by the recent advances in MIMO technology, such as Surface MIMO [16] which enables MIMO communication between devices using surfaces coated with conductive paint or cloth.
For example, a single-antenna sender-receiver pair can achieve 3 × 3 MIMO communication by using two points of contact on the conductive surface.
By doing this, the number of antennas on the sender and receiver sides can be as low as 1.
We also note that with the advances in printed antennas [3,23] and RF Micro-Electro-Mechanical Systems (MEMS) [4,6,36] technologies, multiple antennas can be integrated into a device.
Therefore, it is essential to explore how to achieve MIMO on backscatter tags and what the benefits are.Applications.
Since MIMO technology can enable reliable and fast communication, by leveraging the advantages of MIMO technology, our VMscatter has the potential to be applied to applications in noisy and multipath-rich environments, such as smart buildings and smart cities for low-power and reliable sensing data collection.As shown in Fig. 1, our system contains three parts: Sender: The sender does not need to be controlled for transmitting explicit control messages.
The sender can be equipped with either a single antenna or multiple antennas.
VMscatter Tag: The backscatter tag piggybacks backscatter data on the ambient signals emitted by the sender.
To support a variety of existing infrastructures, our VMscatter tag can naturally support any number of sender antennas without the need of explicit control messages.
The MIMO modulation module not only modulates the binary data into in-phase and quadrature values but also encodes the data depending on the number of available antennas.
Two coding methods can be used for reducing bit error rate or increasing throughput (details in Sec. 4.2).
The RF switches for different antenna ports reflect the incoming RF signals based on the output of the MIMO modulation module.
By doing this, the backscatter data piggybacks on the ambient RF signal and the MIMO signals are transmitted out.
Receiver: The receiver takes the incoming signal and decomposes the signal by using an FFT module.
A backscatter packet structure is proposed to cooperate with the conventional channel estimation and equalization module for eliminating the impact of the pre-scatter channel (the channel between the sender and the VMscatter tag).
A backscatter demodulation module (including the backscatter channel estimator, maximum likelihood detector, and space-time decoder) is designed on top of the conventional channel estimation and equalization module.
The backscatter channel estimator and maximum likelihood detector are used to combat the impact of the post-scatter channel, cumulative clock drift, and oscillator instability.
The space-time decoder decodes the data obtained from all the antennas according to the coding method (detailed in Sec. 4.3).
In this section, we first provide the background of a traditional MIMO system.
then, we describe why we cannot use existing backscatter systems to achieve MIMO.
In the end, we discuss why VMscatter is different.
We first review the background of space-time coding for the M × N MIMO-OFDM system which serves as the base of the advanced WiFi protocol (e.g., IEEE 802.11n).
For the sake of simplicity, we show the structure of a typical 2 × 2 MIMO-OFDM system with Alamouti space-time coding [7] in Fig. 2 ﹡ ﹡ -ψ b , ﹡ ψ a ψ a , ﹡ ψ b (b)The structure of MIMO backscatter for a 2 × 2 × 2 setup.
The pre-scatter and post-scatter channels are H R and H T .
Figure 2: 2 × 2 Alamouti MIMO system and 2 × 2 × 2 MIMO Backscatter.
Conventional MIMO systems need to create the orthogonal symbols to construct the space-time coding.
MIMO backscatter can realize the diversity gain of the spacetime coding by using the non-orthogonal symbols.to create orthogonal symbols which provide the full diversity gain [55] for reliable wireless communications.
Fig. 2(a) shows the creation process of the orthogonal symbols.
First, the data streams (i.e., bit streams) are modulated to complex values (i.e., in-phase and quadrature values).
Next, the spacetime coding module encodes the complex values based on Alamouti code scheme and feeds the coded data into the Inverse Fast Fourier Transform (IFFT) module for each antenna.
Then, each IFFT module efficiently allocates the coded data on multiple subcarriers to form two OFDM symbols (e.g.,{x 1 , −x * 2 } or {x 2 , x * 1 }).
Finally, two antennas are used to transmit the four OFDM symbols in two time slots.
Because of the orthogonal design in the code scheme, the code matrix formed by the four transmitted symbols fulfills the orthogonal property [54]:x 1 x 2 −x * 2 x * 1 H · x 1 x 2 −x * 2 x * 1 = (|x 1 | 2 + |x 2 | 2 ) · 1 1 (1)where (·) H denotes the complex conjugate transpose operator, (·) * denotes the conjugate operator.
Hence, Alamouti code has a full diversity gain [55].
During wireless transmission, the transmitted symbols suffer from channel fading and at the receiver, their sum will be received.
Therefore, the 2 × 2 MIMO system with Alamouti Code can be represented by the following:y 1A y 1B = h A1 h A2 h B1 h B2 · x 1 x 2 + n 1A n 1B y 2A y 2B = h A1 h A2 h B1 h B2 · −x * 2 x * 1 + n 2A n 2B (2)where [y 1A , y 1B ] denotes the received vector in the first time slot by receive antennas 1 and 2 respectively, [y 2A , y 2B ] denotes the received vector in the second time slot by receive antennas 1 and 2 respectively, h nm denotes the channel impulse response from the m th transmit antenna to the n th receive antenna, and n nm denotes the corresponding noise.3.2 Why can't we use existing backscatter systems to achieve MIMO?Since the existing backscatter tag (such as the system in [33,62,68]) cannot afford the demodulation (which requires power hungry modules) of incoming signals, the orthogonal property is not guaranteed for backscattered signals.
As shown in Fig. 2(b), let us assume the pre-scatter channel (i.e., the channel between the sender and VMscatter tag) is H R and the post-scatter channel (i.e., the channel between VMscatter tag and the receiver) is H T :H R = h a1 h a2 h b1 h b2 , H T = h Aa h Ab h Ba h BbIn the t th time slot, let x tk be the transmitted symbol on the k th transmit antenna, s tk be the incoming symbol on the k th backscatter switch and n R tk be the corresponding noise.
Then, the incoming symbol vectors in two time slots can be represented by the following:s 1a s 1b =H R · x 11 x 12 + n R 1a n R 1b , s 2a s 2b =H R · x 21 x 22 + n R 2a n R 2b (3)From Eqn.
3, we can see that the information of the incoming symbol s tk includes the channel interference H R and the baseband value of the transmitted symbol x tk .
The backscatter cannot estimate the channel or demodulate the baseband signals without high power components.
Therefore, the backscatter does not have knowledge about the incoming signals and cannot guarantee the backscattered signals to be orthogonal.As a result, even though the backscatter leverages the space-time coding scheme to code its data, the reflected symbols are not orthogonal.
For example, as shown in Fig. 2(b), if the backscatter wants to transmit the data {ψ a , ψ b }, the coded data being modulated into the incoming symbols[s 1a , s 1b , s 2a , s 2b ] are [ψ a , ψ b , −ψ * b , ψ * a ].
Therefore, the re- flected symbols are [s 1a ψ a , s 1b ψ b , −s 2a ψ * b , s 2b ψ * a ].
The representation of the received vectors in two time slots are:y 1A y 1B = H T · s 1a ψ a s 1b ψ b + n T 1A n T 1B y 2A y 2B = H T · −s 2a ψ * b s 2b ψ * a + n T 2A n T 2B (4)where n T tm is the noise of the received symbol y tm .
By plugging the reflected symbols into Eqn.
1, we obtains 1a ψ a s 1b ψ b −s 2a ψ * b s 2b ψ * a H · s 1a ψ a s 1b ψ b −s 2a ψ * b s 2b ψ * a = R · 1 1where R is a real number.
It is clear that the four reflected symbols cannot fulfill the orthogonal property.
In this section we describe our VMscatter's two unique features: i) it achieves the same full diversity gain as traditional MIMO system without transmitting orthogonal signals; and ii) our demodulation scheme estimates the complicated channels among sender, backscatter tag, and receiver while solving the demodulation errors caused by practical facts (e.g., cumulative clock drift and oscillator instability).
Feature 1: Although there is no orthogonal symbols for the MIMO backscatter to construct the space-time coding, we discover that MIMO backscatter can achieve the same full diversity gain as the space-time coding by using the nonorthogonal symbols.Firstly, we define M(s i j , s pq ) = H T · diag(s −1 i j , s −1 pq ) · H T −1.
By multiplying M(s i j , s pq ) to both sides of Eqn.
4, we get:M(s 1a , s 1b ) y 1A y 1B = H T · ψ a ψ b + M(s 1a , s 1b ) n 1A n 1B M(s 2a , s 2b ) y 2A y 2B = H T · −ψ * b ψ * a + M(s 2a , s 2b ) n 2A n 2B (5)We note that Eqn.
5 has the same standard representation as that of conventional 2 × 2 Alamouti MIMO systems (showed in Eqn.
2).
In other words, if the value of M(s i j , s pq ) in Eqn.
5 is known, the MIMO backscatter system can also achieve full diversity gain, as proven in the following:ψ a ψ b −ψ * b ψ * a H · ψ a ψ b −ψ * b ψ * a = (|ψ a | 2 + |ψ b | 2 ) · 1 1 (6)To realize the space-time coding, the conjugate operations are required.
Traditional RFID works by selecting different antenna impedance loading.
To reduce the design complexity, VMscatter only leverages the two states of switch (on and off) to realize the conjugate operation (detailed in Sec. 4.2).
Feature 2: To solve Eqn.
5, we must know M(s i j , s pq ).
However, to detect M(s i j , s pq ), we face two challenges.
The first challenge is that the backscatter tag does not exactly shift the ambient signal as the desired phase in reality because of some practical facts (such as cumulative clock drift and oscillator instability).
The difference of the desired shifting phase and the real shifting phase interfere the detection result of M(s i j , s pq ).
The second challenge is that the existing channel estimation module cannot resolve both of the pre-scatter and post-scatter channels to extract the backscatter data.
We will discuss how to overcome these two challenges in Sec. 4.3.
This section presents the detailed design of the VMscatter system.
We first propose the channel model of the VMscatter system.
Secondly, we introduce the modulation scheme at the VMscatter tag.
Thirdly, we describe the demodulation scheme at the receiver.
Finally, we explain how to extend from 2 × 2 × 2 to M × K × N.
In order to explain the signal propagations of our MIMO backscatter, we build a mathematical channel model for our system.
Though a backscatter tag does not "receive" the signal (the tag "reflects" the signal out immediately when the signal comes in), we decompose the receiving and transmitting processes in the channel model.
Fig. 2 as an example to describe the channel model.
From Eqn.
4 and 3, we can rewrite the representation of the receive vector in the first time slot as:y 1A y 1B = H T · s 1a ψ a s 1b ψ b + n T 1A n T 1B = H T · ψ a ψ b · s 1a s 1b + n T 1A n T 1B (7)Let us assume X, Y , Ψ, and N are the transmitted signal at the sender, the received signal at the receiver, the backscatter data, and the noise respectively.
We rewrite Eqn.
7 here:Y = H T ΨH R X + N (8) Eqn.8 gives the channel model of a 2 × 2 × 2 MIMO backscatter system.
It proves that the backscatter modulation not only splits the whole channel (from sender to receiver) into two parts: H R and H T , but also inserts the backscatter information into the whole channel.
Therefore, to demodulate the backscatter data, it is important to estimate the channel H R and H T .
However, since existing channel estimators estimate the whole channel without considering the backscatter modulation, the estimation result is interfered by the backscatter data.
To address this challenge, we first need to understand the backscatter modulation scheme.
In this section, we introduce how a VMscatter tag creates MIMO signals which can increase the communication performance.
Our goal is to realize MIMO transmission while maintaining low power consumption at a power constrainted VMscatter tag.
The MIMO transmission can significantly reduce the bit error rate (BER) or increase the throughput by increasing the number of antennas.
It is challenging to transmit spatial coded information at a lower power VMscatter tag to improve the communication performance at the receiver side.
To understand it, we first introduce the basic modulation scheme with a 2 × 2 × 2 setup, then describe two coding methods for improving the throughput and reducing the BER.
Basic modulation scheme: In a basic modulation scheme, the backscatter tag shifts the phase of an ambient OFDM signal on one antenna port or multiple antenna ports (transmitting same data on all ports) to transmit backscatter data.
For example, the phase can be shifted by e jθ k , where k is the index of antennas.
θ k = 0 or π indicates data bit "0" or "1".
Fig. 3 shows a simple example that, in a 2 × 2 × 2 setup, two antennas (a and b) transmit the same data by using RF switches (i.e., ADG902 [8]) to shift the ambient signal's phase.
In Fig. 3(a), continuous square waves (θ a,b = 0) from T 1 to T 4 are driving the RF switches.
Thus, no phase shift is caused to the ambient OFDM signal and the data of "0000" is transmitted.
In Fig. 3(b), the square waves are shifted by θ a,b = π during T 2 which yields the data of "0100" being transmitted.
Improving throughput: The VMscatter tag takes advantage of the MIMO system to increase throughput.
For example, with two antennas, the throughput can be doubled.
To increase throughput, the data is encoded across two antennas as follows: at time slot T n , the aggregate value of two data streams (i.e., ψ a + ψ b ) is transmitted from antenna a while the difference (i.e., ψ a − ψ b ) is transmitted from antenna b simultaneously.
Thus, the received signals at the receiver are: Fig. 4 shows that 8 bits (i.e., "00110110") are encoded and transmitted on antenna a and b during time slots T 1 to T 4 .
The phase changes of ψ a + ψ b and ψ a − ψ b can be defined as e j(a+b) and e j(a−2b) .
For example, during T 2 , data "11" is transmitted.
Therefore, antenna a is transmitting ψ a + ψ b = e j2π = 1 (i.e., zero phase change) while antenna b is transmitting ψ a − ψ b = e − jπ = −1 (i.e., a phase inversion).
Reducing BER: It is more challenging to reduce the BER on power constrained backscatter tag.
In the VMscatter system, in order to have a more reliable transmission, we utilize the space-time coding on top of the basic modulation across all the antennas (i.e., the antennas at the VMscatter tag) and adjacent time slots.
However, it is very challenging to implement space-time coding on the tag by only turning on/off the switches, because we do not want to increase the tag's computation and energy overheads.
We note that since the backscatter data is real number, the conjugate of the backscatter data is itself.
For example, ψ a = ψ * a and −ψ * b = −ψ b .
Therefore, VMscatter can construct the space-time coding by using the two states of switch (on and off).
Fig. 5 illustrates how four bits of data (i.e., "0101") are transmitted on antenna a and b during time slots T 1 to T 4 .
We take time slots T 1 and T 2 as an example.
During T 1 , the first data bit "0" (represented by ψ a = e j0 ) is transmitted from antenna a while the second data bit "1" (represented by ψ b = e jπ ) is transmitted from antenna b.
During T 2 , the encoded data (according to Eqn.
10) −ψ * b = −e − jπ and ψ * a = e − j0 are transmitted from antenna a and b, respectively.Y = H T ψ a + ψ b ψ a − ψ b H R X + N(9)Y 1 = H T ψ a ψ b H R X 1 + N 1 Y 2 = H T −ψ * b ψ * a H R X 2 + N 2(10) In Sec. 4.2, we described the modulation scheme on a low power VMscatter tag.
In this section, we will introduce how to demodulate the signal from a VMscatter tag.
The most challenging part is to estimate the pre-scatter channel H R (the channel between sender and backscatter) and post-scatter channel H T (the channel between backscatter and receiver) in a MIMO setup, which is crucial for achieving reliable backscatter communication.To demodulate the backscatter data, the first challenge is that in reality, the backscatter tag does not exactly shift the ambient OFDM signal by e jθ k , which may yield demodulation error at the receiver.
As we introduced in Sec. 4.2, the backscatter tag shifts the ambient signal by e jθ k , where k is the index of the antennas, to modulate backscatter data.
i.e. θ k = 0 indicates data bit "0", θ k = π indicates data bit "1".
However, due to some practical facts (i.e., cumulative clock drift and oscillator instability), the backscattered signal is not exactly shifted by e jθ k .
Fig. 6 shows the distribution of a backscattered signal sample set.
The desired phase shift is e jθ k , where θ k = π.
The total symbols of the sample set are more than 800,000.
We can observe that around 50% of the symbols are shifted by π while another 50% are shifted either less or more than π.The second challenge is that the existing channel estimation method (i.e., simply solving the channel matrix) cannot resolve both of the pre-scatter channel matrix H T and postscatter channel matrix H R , which is important to demodulate the backscatter data (as we modeled in Eqn.
8).
As shown in Fig. 7, the conventional channel estimation module relies on the Long Training Fields (LTFs) in the preamble to estimate the channel between the sender and receiver.
Then the equalizer uses the estimated channel matrix to compensate for the upcoming data symbol.
However, with a backscatter tag in the middle (of the sender and the receiver), we need to resolve both channel matrices H T and H R (as shown in Eqn.
11) for reliable demodulation.To overcome the first challenge, we have the following analysis.
Though the two practical facts (cumulative clock drift and oscillator instability) cause the frequency mismatch between the VMscatter tag and OFDM receiver, these two facts behave as a phase offset in the demodulation procedure.
Fig. 6 shows the distribution of a sample set of the backscatter signal.
The expected phase is π because the VMscatter tag transmits a e jπ .
However, due to the cumulative clock drift and oscillator instability, a portion of the symbols are not as expected.
To show the impact of these two practical facts, we elaborate Eqn.
8 to be:Y = H R ΨPH T X + N = H R ΨH T X + N (11)where P is the unwanted phase offset caused by cumulative clock drift and oscillator instability.
Since the essences of P and H T are all phase offsets, we can combine them as H T = PH T .
So far, we have solved the first challenge and the second challenge becomes resolving H R and H T .
To overcome this challenge, we propose a special backscatter packet structure (shown in Fig. 8) as well as a backscatter demodulation module on top of the conventional channel estimation and equalization modules (shown in Fig. 7).
The packet includes three fields: i) "0" sequence; ii) reference signal; and iii) backscatter data.
i) "0" sequence: The VMscatter tag transmits a "0" sequence during the ambient signal's Long Training Fields (LTFs).
The "0" sequence can shift the LTFs to the adjacent channel for minimizing the strong self-interference from the original channel and getting a high SNR [63].
However, it does not embed any useful backscatter data in the LTFs.
Thus, the backscatter data Ψ in this filed equals to an identity matrix I 2 and Eqn.
11 becomes:Y LTFs = H R I 2 H T X LTFs + N = H E X LTFs + N(12)where H E = H R I 2 H T = H R H T is the channel response for the transmitted LTFs (i.e., X LTFs ).
Since X LTFs are known to the receiver, H E is resolved by the existing channel estimator (shown in Fig. 7).
Then it is used to equalize the data symbol in existing equalizers by using the following equation:X = H −1 E Y = H −1 T H −1 R Y (13) whereX is the estimated symbol value.
By plugging Eqn.
11 into Eqn.
13, we will get: X=H−1 T H −1 R H R ΨH T X+H −1 E N = H −1 T ΨH T X+H −1 E N (14)We note that the impact of the pre-scatter channel H R is eliminated so far by using the "0" sequence and the existing channel estimation and equalization process.
To obtain Ψ, we need to resolve H T .
H −1 E N is random noise which can be resolved by a Maximum Likelihood estimation.ii) Reference signal: To resolve H T , we designed the second field Reference signal in the VMscatter packet structure (Fig. 8).
A group of agreed on (between VMscatter tag and OFDM receiver) symbols are transmitted to estimate H T .
The backscatter channel estimation module (in Fig. 7) calculates the estimated H T by using:H T = arg min H T ∑ Ψ re f || X − H −1 T Ψ re f H T X|| 2(15)where Ψ re f is the backscatter reference symbols as shown in Fig. 8.
X can be obtained from the original TX-RX channel without backscatter's interference (similar techniques are proposed in [61,62]).
Eqn.
15 is a minimum mean squared error (MMSE) channel estimator.
A reduced complexity MMSE estimator can be achieved by employing the optimal rank reduction [60], which has a computational complexity of O(LSC 2 ).
Where L is the number of reference symbols, S is the number of subcarriers and C = min(K, N).
For a low power edge computing platform Jetson Nano [45] Fig. 9 shows example signals at different demodulation stages.
In Fig. 9(a), the blue circle indicates the I/Q values of the ambient signal while the red circle indicates that the signal is shifted by π after backscattering.
Fig. 9(b) shows the received signal without any equalization.
We can observe the rotating pattern which may be caused by channel and frequency mismatch.
Fig. 9(c) shows the signal passed through the conventional channel estimation and equalization module, in which the pre-scatter channel H R is eliminated.
Finally, the signal in Fig. 9(d) is processed by our backscatter demodulation module where H T (which includes the post-scatter channel H T and cumulative clock drift and oscillator instability P) is resolved.
We can observe that most dots are in the first quadrant, which can be correctly demodulated.
Γ(θ a , θ b ) = e jθ a e jθ b −e − jθ b e − jθ a(17)When there are 4 antennas on the backscatter (K = 4), the transmitted backscatter data becomes {θ a , θ b , θ c , θ d }.
Then, from Matrix 17, the coding matrix will be extended as follows:Γ(θ a , θ b , θ c , θ d ) = Γ(θ a , θ b ) Γ(θ c , θ d ) −Γ * (θ c , θ d ) Γ * (θ a , θ b )(18)Each element in the coding Matrix 18 can be calculated from Matrix 17.
In other words, for the backscatter with 4 antennas, each element in the coding matrix can be represented by the coding matrix of the backscatter with 2 antennas.
Therefore, for the backscatter with K antennas, the coding matrix can be represented as follow:Γ(θ 1 , . . . , θ K )= Γ(θ 1 , . . . , θ K 2 ) Γ(θ 1+ K 2 , . . . , θ K ) −Γ * (θ 1+ K 2 , . . . , θ K ) Γ * (θ 1 , . . . , θ K 2 )(19)In this coding matrix, each element can be calculated from the coding matrix of backscatter with K/2 antennas.
Demodulation.
In Sec.
[20].
Therefore, we can still leverage the backscatter channel estimation model and the maximum likelihood estimation model to estimate H T and further demodulate the backscatter data.
Hardware Tag.
We implement VMscatter on a customized four-layer printed circuit board (PCB).
As shown in Fig. 10, We use a low-power FPGA (Microsemi Igloo Nano AGLN250 [40]) as the baseband processor.
The processor controls the RF front, which consists of 4 RF switches (ADG902) and connects up to 4 antennas.
All the design introduced in Sec. 4.2 is implemented in the processor.
Fig. 11 shows a basic VMscatter that can support 2 antennas.Comparing with conventional backscatter systems [62,68], VMscatter only needs to add several low-power RF switches and antennas to build the MIMO system.
These switches and antennas can be easily implemented on conventional backscatter systems.
The space-time coding can be achieved by shifting the phase of the backscatter data to its orthogonal alternative, which also can be easily employed on the conventional backscatter system.
To be more specific, as mentioned in Passive WiFi [34], the phase shift can be realized by shifting the initial phase of the square wave on the switch.
As a result, the modulation complexity of VMscatter is low.
Sender and Receiver Implementation.
As shown in Fig. 12, we implement the MIMO-OFDM sender on a B210 USRP, which connects two antennas and is placed 3 feet away from the tag.
The sender's output power is set as 0 dBm.
The receiver is implemented on two X310 USRPs with four 9dbi omnidirectional antennas.
Therefore, there is a 2 × 4 MIMO across the sender and receiver.
Each receiving antenna is connected to a UBX-160 daughterboard, which down-converts the backscattered signal to the baseband signal and samples it.
To synchronize and align the sample clocks, the two USRPs are connected in a daisy chain configuration [1], where one device in the chain is configured as a master and exports its 10MHz clock and PPS time references to the other device.
To extensively evaluate the performance of VMscatter, we conducted the experiments in the following configurations: Single Input Multiple Output (SIMO): The sender has a single data stream (therefore a single transmitting antenna).
We evaluate the performance of VMscatter in SIMO with different number of backscatter antennas (2 and 4), which constructs a 1 × 2 × 2 and a 1 × 4 × 4 setup, respectively.
Multiple Input Multiple Output (MIMO): The sender has two independent data streams (therefore two transmitting antennas).
We evaluate the performance of VMscatter in MIMO Baseline.
We implemented the state-of-the-art MIMO backscatter system (MOXcatter [68]) as our baseline.
Because it neither employs the space-time coding nor introduces any backscatter channel estimation.
We also implemented a 1 × 1 × 1 Single Antenna setup (SA), which only employs the backscatter channel estimation technique.
Comparing it with MOXcatter, the performance of the backscatter channel estimation is evaluated.
Comparing it with VMscatter, the performance of space-time coding is evaluated.
In this section, we show the evaluation results of VMscatter with one transmitting antenna (i.e., single data stream).
Fig. 13 shows the BER of VMscatter under the low bit error rate mode.
The performance of VMscatter is much better than that of MOXcatter.
When the distance between backscatter and the receiver is as low as 6 f t, the BER for VMscatter with 4 antennas is around 0.00002, which is reduced by a factor of 366 compared to MOXcatter (0.007).
As the distance increases to 66 f t, the BER of VMscatter is still low enough to conduct communication while the BER of MOXcatter is 1.
The reasons why VMscatter shows dominant performance is because VMscatter uses a novel backscatter channel estimation technique and leverages the spatial diversity for communication, which eliminates the errors introduced by cumulative clock drift or oscillator instability, etc and significantly reduce the BER.
In addition, we can also observe that by simply using channel estimation, the BER of a 1 × 1 × 1 single antenna setup (SA) is better than that of MOXcatter with multiple antennas.
In contrast, although MOXcatter can backscatter a single stream from the WiFi sender, it does not leverage the spatial diversity in the reflected signals and channel estimation techniques, which increases the BER.
Fig. 14 shows the Packet Reception Ratio (PRR) of VMscatter (low bit error rate mode) under different distances between backscatter and receiver.
The PRR of MOXcatter drops rapidly as the distance increases from 6 f t to 30 f t while the performance of SA is still better than that of MOXcatter.
For the distances larger than 30 f t, nearly all the packets transmitted from MOXcatter cannot be correctly decoded at the receiver side.
On the contrary, since SA utilizes channel estimation, it can still conduct communication until the distance reaches 50 f t.
Our VMscatter shows great advantages as distance increases.
The curves are much more stable for both the 2 antennas and 4 antennas configurations.
For the first 30 f t, the PRR of VMscatter is more than 90%, which is much higher than that of MOXcatter.
As shown in Figure 15, we also study the Packet Reception Ratio (PRR) of VMscatter (low bit error rate mode) with the packet length varying from 50 bits to 150 bits.
Since the experiments reveal similar trends, we only show the results of the 4 antennas configuration (1x4x4).
We can observe that the PRR decreases with the increasing of the packets length while VMscatter is more robust against different packet lengths.
As shown in this figure, the PRR reaches nearly 0 as the distance increases to 70 f t. For MOXcatter, it does not use any spacetime coding and channel estimation techniques.
As a result, the PRR is nearly 0 when the distance increases to 30 f t for the 50 bits packet length.
However, when the packet lengths are 100 and 150 bits, the PRR is nearly 0 as the distance increases to 24 f t. Therefore, VMscatter can effectively increase the communication range of backscatter.
We show the throughput of VMscatter under the high throughput mode with the increasing of the distance between backscatter and receiver.
As we can see from Fig. 16, the throughput of VMscatter with two antennas is around 2 times as high as that of MOXcatter.
This is because VMscatter takes advantages of the MIMO communication techniques.
Specifically, the antennas on VMscatter are transmitting different data, which doubles the throughput.
As the number of transmitting antennas increases to 4, the throughput of VMscatter is around 4 times as high as that of MOXcatter.
On the contrary, the antennas on MOXcatter are transmitting the same data, which wastes the communication resources.
In addition, due to the lack of channel estimation, the throughput is further hampered.
As a result, the performance of MOXcatter is even worse than that of single antenna setup (SA).
In this section, we evaluate the performance of VMscatter with two transmitting antennas (i.e., multi-data stream).
As shown in Fig. 17, similar to a single data stream, the BER of VMscatter is still much lower than that of MOXcatter and SA.
When the distance is as low as 6 f t, the BER of VMscatter is around 0.000011, which is reduced by a factor of 862 compared to the BER of MOXcatter.
When comparing with sender-to-receiver distance the single data stream scenario in Fig. 13, we can also observe that the BER of VMscatter with two transmitting antennas is lower than the BER with one transmitting antenna.
Interestingly, as shown in Table 1, the BER of MOXcatter shows the opposite trends, that is, the BER with two transmitting antennas is higher than the BER in the single data stream scenario and even higher than BER of the non-MIMO WiFi backscatter system FreeRider [62].
This is because as the number of transmitting antennas increases, the interference and multi-path effects become more severe than the single antenna scenario, which degrades the performance of MOXcatter.
In contrast, VMscatter fully leverages the feature of the MIMO spatial diversity.
As the number of transmitting antennas increases, it is easier for VMscatter to conduct communication.
Therefore, different from MOXcatter, VMscatter shows great advantages in this scenario.
Fig. 18 and Fig. 19 show the Packet Reception Ratio under various distances and packet lengths, respectively.
Similar to the single antenna scenario, the packet reception ratio of VMscatter is much higher than that of MOXcatter and SA.
We can observe that the performance of SA with 150 bits packet length is better than that of MOXcatter with 50 bits packet length.
This results prove the advances of our channel estimation technique.
Moreover, we also can observe that the packet reception ratio of VMscatter is almost 100% for the first 36 f t, which shows the reliability of the low bit error rate mode of VMscatter.
Fig. 20 shows the throughput of VMscatter with 2 and 4 backscatter antennas under the high throughput mode.
The throughput of MOXcatter is even worse than that of the single antenna SA.
This is because MOXcatter does not introduce any channel estimation techniques.
As the number of transmitting antennas increases, the interference is higher, which reduces the throughput.
In contrast, VMscatter can estimate the channel to minimize the interference and other unwanted errors.
Moreover, VMscatter utilizes the MIMO technique to conduct backscatter communication.
As the number of backscatter antennas increases to 2 and 4, the throughput of VMscatter also increases, which is around 2 and 4 times as high as that of MOXcatter.
To better understand the gain of MIMO technique for backscatter communication, we investigated the relationship between BER and SNR.
In this experiment, we fixed the locations of sender, backscatter tag, and receiver while varying the transmission power of the excitation signals.
Figure 21 plots the captured data points of BER over SNR for VMscatter in a 2 × 2 × 2 (VM) configuration comparing with the signal antenna configuration (SA).
We can observe that the BER is around 3 × 10 −5 which is at least two orders of magnitude lower than that of SA.
In this section, we evaluate VMscatter under a variety of settings to further show the advantages of our design.
5.5.1 Impact of Sender-to-Tag Distance The sender-to-tag distance is an important factor for the backscatter communication range.
We evaluate its impact in two sets of experiments.
In the first experiment, we fix the tag-to-receiver distance to be 1 f t and move the tag and receiver to different locations, searching for the maximum backscatter communication range.
As shown in Fig. 22, when the sender-to-tag distance increases to 45 f t, the BER for VMscatter with 4 antennas is around 0.01, which is still low enough to conduct communication.In the second experiment, we fix the location of the sender and place the receiver at a distance of 24 ft. Then, we move the tag along the line from the sender to the receiver and measure the BER and the packet reception ratio reported by VMscatter.
Fig. 23 and Fig. 24 show the BER and packet reception ratio results, which can be improved either by reducing the senderto-tag distance or the tag-to-receiver distance.
This is because the signal strength at the receiver can be modeled by using Friis Transmission Equation [34,42].
As the sender-to-tag distance or the tag-to-receiver distance decreases, the signal strength is increased at the receiver side, which means the SNR is also improved.
We study the impact of oscillator accuracy under VMscatter low bit error rate mode.
The distance between the backscatter and the receiver is 6 f t.
As shown in Fig. 25, with the decrease of crystal oscillator accuracy, the BER of MOXcatter increases while the BER of VMscatter almost remains the same.
This is because MOXcatter is suffering cumulative clock drift and oscillator instability.
Therefore, the performance of MOXcatter is highly related to the oscillator accuracy.
In practice, an oscillator with high accuracy is more expensive and power hungry, which will limit the potential low power applications of MOXcatter.
In contrast, our VMscatter utilizes a channel estimation technique, which eliminates the errors introduced by oscillator.
In summary, VMscatter is stable against oscillator accuracy.
A low power ring oscillator is enough for VMscatter to achieve low BER.
Therefore, VMscatter has the potential to be widely adopted to real world scenarios.
Fig. 26 (low bit error rate mode) and Fig. 27 (high throughput mode) study the performances of VMscatter with human movements.
During the experiments, the distance between the backscatter and the receiver is 36 f t. Two people are walking between the backscatter and the receiver.
As shown in Fig. 26, the performance of VMscatter is robust against human movements.
The BER remains at the level of 10 −3 for single data stream and 10 −4 for multi-data stream, respectively.
Fig. 27 shows the throughput of VMscatter under high throughput mode.
As we can see from this figure, when there are no human movements, the throughputs of VMscatter are 239.7Kbps and 245.9Kbps for single data stream and multidata stream, respectively.
For the human movements scenario, the throughputs of VMscatter still remain at 230.2Kbps and 238.5Kbps, which further demonstrates the reliable communication of our VMscatter.
To demonstrate that VMscatter can work under massive MIMO scenarios, we show the simulation results in this section.
In the simulation, the physical layer configurations of the sender and receiver follow the 802.11n specification [2].
Fig. 28 and Fig. 29 study the BER with the increase of signal to noise ratio (SNR) under different number of antennas configurations.
These two figures show a similar trend, that is, the BER decreases as the SNR increases.
Moreover, the BER of VMscatter is lower when the number of antennas increases.
When SNR reaches 30dB, the BER results are significantly reduced (at the level of 10 −5 ).
These results show that VMscatter can achieve better performance in massive MIMO scenarios, especially when the numbers of sender and receiver antennas are large.
Fig. 30 shows the results with different number of antennas on a backscatter device.
When the number of antennas increases, the BER decreases.
When the SNR is as low as 2dB, the BER for 32 antennas is at the level of 10 −1 while the BERs for 128 antennas are at the level of 10 −2 .
As SNR increases to 30dB, the BER for 32 antennas is at the level of 10 −5 .
In contrast, the BER for 64 antennas drops to the level of 10 −6 while the BER for 128 antennas drops below the level of 10 −6 .
These results further demonstrate that VMscatter can effectively leverage the spatial diversity to conduct reliable backscatter communication.
In this section, we first measure the power consumption of our hardware tag.
We then design an integrated circuit based on the hardware and conduct power simulations to show the potential low-power capability.
The hardware power consumption of VMscatter tag is similar to those traditional backscatter systems [61,62,69] that do not support MIMO communication.
First, VMscatter only has 1 ∼ 3 more passive antennas and low-power RF switches than traditional backscatter systems.
Therefore, the power consumption on the RF front is low.
Second, the low-power FPGA [40] provides an internal ring oscillator to generate the clock, which consumes significantly less power than an external oscillator [64].
Third, the low-power FPGA supports the flash freeze technology.
According to our lightweight modulation technique, 80% flash can be frozen.We utilize a KEITHLEY 2701 multimeter to measure VMscatter tag's DC power draw.
Under the work mode, the tag consumes as low as 464µW (it is 32µW in IC design simulation), which is 516× lower than existing 802.11n MIMO chip [51].
Under the sleep mode, it consumes as little as 2.4µW of power, which is 25× lower than existing 802.11n MIMO chip [51].
We can find that the work mode saves much more power than that of the sleep mode when comparing with MIMO chip.
This is because the advantage of the backscatter is passive radio communication while the WiFi chip needs to generate the active radio under work mode.
If the duty-cycles of the backscatter are from 1% to 10%, the overall power consumptions are around 5µW to 50µW .
To show the potential low-power capability of VMscatter, we designed an integrated circuit (IC) for VMscatter tag.
The IC design consists of four main components: RF transistors, modulation logic gates, coding logic gates, and a ring oscillator.
The simulation is conducted by using the HSPICE model for TMSC 55nm process.
In the power consumption simulation, we considered multiple factors including operating voltages, operating temperature, system clock frequency, and power mode usage.
Overall , the results show that the power consumption of VMscatter tag IC under work mode is 32µW .
The related work can be divided into two categories:Backscatter Communications.
Backscatter is one of the hot topics in recent years for its potential to support lowpower and low-cost applications [5,24,38,41,52,64].
Lots of work has been proposed to support various types of backscatter communications, such as WiFi [33,59], Bluetooth [30], TV [39], FM [53].
LoRa [28,47], or even Quantum Backscatter Communication [22] etc.
Furthermore, researchers also improved backscatter to support full duplex [13].
The most related work to VMscatter is WiFi backscatter techniques.
The first work of backscattering WiFi signals is WiFi Backscatter [33], which mainly modulates the CSI/RSSI information to conduct backscatter communication.
Based on this work, BackFi [14] modulates phase information of the received WiFi signal and leverages the full-duplex technique to improve the throughput and communication range at the same time.
HitchHike [61] introduces a codeword translation technique to make backscatter communication compatible with 802.11b radios.
To support OFDM transmissions, [58] introduces a system model that analyzes the OFDM backscatter.
FreeRider [62] can support backscatter communications with OFDM signals by leveraging the codeword translation to OFDM signals.
MOXcatter [68] is able to backscatter MIMO signals from the WiFi MIMO sender.
However, the multiple antennas on MOXcatter do not take advantage of the advanced features of MIMO technology.MIMO Techniques.
MIMO techniques have become one of the most important part in modern communication systems.
Lots of projects have been proposed with focus on full duplex MIMO [10,11,15], Multi-User MIMO [9,19,35,[48][49][50]56], Massive MIMO [12,29,32,66], MIMO networks [21,25,57,67] and novel MIMO systems [16-18, 37, 46], etc.
For example, to improve the energy efficiency, CMES [46] mainly targets at finding the efficient antenna settings for MIMO 802.11 devices.
To study full duplex MIMO, [15] introduces a full duplex WiFi-PHY based MIMO radios while [11] compares the capacity of multiple-antennas half-duplex MIMO with a full-duplex MIMO.
Researchers have also presented lots of systems with focus on Multi-User MIMO (MU-MIMO) and Massive MIMO.
MUSE [50] proposes a user selection framework on commodity devices to improve the throughput gains while Hekaton [56] combines a beamforming technique with phased-array antennas to improve the capacity gains in large-scale MU-MIMO systems.
[66] introduces a scalable directional training method to obtain CSI in FDD massive MIMO systems.
Surface MIMO [16] leverages the conductive paint or cloth on the surface to create an additional spatial path for communication between small devices.Our work builds on top of the existing techniques in backscatter and MIMO.
To the best of our knowledge, VMscatter is the first work that designed and implemented a versatile MIMO system.
By doing this, VMscatter effectively leverages the spatial diversity feature of ambient MIMO signals, which significantly reduces the bit error rate and improves the throughput.
Moreover, our design is generic and has the potential to be extended to massive MIMO.
In this paper, we present a new MIMO system on the backscatter device that can i) support various number of antennas at the sender, backscatter, and receiver; ii) significantly reduce the bit error rate or increase the throughput; and iii) achieve a similar level of energy consumption as existing backscatter systems.
We built a hardware prototype and extensively evaluated our system under various real-world settings to demonstrate its extremely low BER performance.
For example, the BER is reduced by a factor of 862 compared to the most related work MOXcatter [68].
This project is supported by NSF grants CNS-1652669 and CNS-1824491.
We also thank anonymous reviewers and our shepherd Dr. Dinesh Bharadia for their valuable comments.
