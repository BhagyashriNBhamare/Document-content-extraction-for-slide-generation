A wireless sensor network has unidirectional links because sensors can have different transmission ranges, sensors have unstable transmission ranges, and a hidden terminal problem exists.
In this paper, we introduce a virtual coordinate assignment protocol (ABVCap Uni) to assign virtual coordinates to nodes that have no geographic information in wireless sensor networks with unidirectional links, and we propose a routing protocol based on the ABVCap Uni virtual coordinates.
Our routing protocol guarantees packet delivery without computation and storage of global topology features in a discrete domain.
Using simulation, we evaluate the performance of the proposed routing protocol (ABVCap Uni routing), the greedy landmark-descent routing protocol (GLDR+VLM routing), and the greedy routing protocol based on physical coordinates (Euclidean routing).
The simulations demonstrate that our routing protocol ensures moderate routing path length cost overhead.
A wireless sensor network consists of several sensors, each of which has the ability to collect, process, and store environmental information as well as to communicate with others via inter-sensor communication.
These characteristics allow wireless sensor networks to be used in a wide range of applications, including environmental monitoring, battlefield surveillance, health care, nuclear, biological, and chemical (NBC) attack detection, intruder detection, and so on.
In wireless sensor networks, routing is an important issue and has received considerable attention.
In this paper, we undertake the development of routing protocols in wireless sensor networks.Geographic routing uses the physical location as the node address.
GPSR [1] forwards the packet to a neighbor having a smaller Euclidean distance to the destination, and uses the FACE algorithm to forward the packet if no neighbor is closer to the destination.
GSR [2] uses GPSR to route packets on a planar graph in which there exists a path whose distance, in terms of Euclidean distance or hop distance, is only the constant times to the minimum distance between any pair of nodes.
GPSR and GSR guarantee packet delivery [3].
In MGGR [4], all nodes are divided into Voronoi cells by landmarks, and each node is addressed by the physical location of the landmark in its residing cell.
A packet is routed from the source cell to the destination cell by GPSR on a planar graph extracted from the Combinatorial Delaunay Graph (CDG) that represents the connections between neighboring cells.
In geographic routing, nodes are required to have geographic information that is difficult to obtain because GPS devices are expensive and do not work indoors.In many routing protocols, nodes are not required to obtain the geographic information.
GLIDER [5] is a landmark-based routing protocol.
Each node must memorize the minimum hop distances to all neighboring landmarks.
A packet is routed via the shortest path from the source cell to the destination cell in the CDG identified by the source node.
The efficiency of GLIDER depends on whether a good set of landmarks are selected.
MAP [6] uses a Medial Axis Graph (MAG) as the guide for routing without selecting landmarks.
In GLIDER and MAP, each node is required to compute and memorize global topology features.
In GLDR+VLM [7], each node must obtain the minimum hop distances to all landmarks.
Subsequently, GLIDER, MAP, and GLDR+VLM demand a considerable amount of message communication and memory overhead.
VCap [8], GREENWIS [9], and ABVCap [10] rapidly assign virtual coordinates to nodes, and neither routing protocol requires global topology features to generate a routing decision.
ABVCap routing guarantees packet delivery in a discrete domain, but VCap and GREENWIS routing does not.
These routing protocols, except for GLDR+VLM, assume that all links are bidirectional.In actual practice, a wireless sensor network has unidirectional links because sensors can have different transmission ranges [11], [12], [13], [14], sensors have unstable transmission ranges [4], [15], [16], [17], [18], and a hidden terminal problem exists [14], [19], [20], [21].
To the best of our knowledge, GLDR+VLM is the only method capable of being used in wireless sensor networks with unidirectional links.
However, GLDR+VLM guarantees packet delivery only in a continuous domain.
The remainder of this paper is organized as follows.
Section II presents research related to ABVCap and GLDR+VLM routing.
In Section III, we propose an AxisBased Virtual Coordinate assignment protocol (ABVCap Uni) to assign virtual coordinates to nodes in wireless sensor networks with unidirectional links.
In Section IV, the routing pro-tocol based on ABVCap Uni virtual coordinates is introduced that is shown to be delivery-guaranteed in the discrete domain in Section V.
In Section VI, using simulations, we compare the performance of ABVCap Uni routing with Euclidean and GLDR+VLM routing.
Finally, this paper concludes with a discussion of future research in Section VII.
Related works ABVCap and GLDR+VLM are presented and selected notations are introduced.
Each node is assumed to be static or quasi-static and to have a unique identifier (ID).
All links are assumed to be bidirectional.
Each node, u, is assigned at least one 5-tuple virtual coordinate (u.lo, u.la, u.rp, u.up, u.dn) in a four-phase process, where u.lo, u.la, u.rp, u.up, and u.dn denote the longitude, latitude, ripple, up, and down coordinates, respectively.In phase one, four anchors X, Y , Z, and Z are selected.
W is the sink node, X is the node having the maximum hop distance from W , Y is the node having the maximum hop distance from X, Z is the node in S x=y±1 having the maximum hop distance from W , and Z is the node in S x=y±1 having the maximum hop distance from Z, where S x=y±1 is the set of nodes whose hop distances from X and Y each differ by one.
In phase two, the shortest path is established from Y to X, called the parallel of latitude, and for each node, u, in the parallel of latitude, a meridian, consisting of the shortest path from u to Z and the shortest path from u to Z , is established.
Each node in the parallel of latitude is assigned the longitude coordinate to the hop distance from X, and the latitude and ripple coordinates to 0.
Each node in the meridian established by u is assigned the longitude coordinate to the longitude coordinate of u, the ripple coordinate to 0, and the latitude coordinate to the hop distance from u, if the node is in the meridian between u and Z, and the negative value of the hop distance from u, if the node is in the meridian between u and Z .
In phase three, each node, u, not in the meridian, is assigned the longitude and latitude coordinates to the longitude and latitude coordinates of the node in the meridian from which u has the minimum hop distance, and the ripple coordinate to the hop distance from that node.
In phase four, each node, u, having the longitude coordinate, i, is assigned the up (or down) coordinate to the minimum hop distance in the subnetwork induced by the nodes having the longitude coordinate, i, from a node that has a neighbor having the longitude coordinate, i + 1 (or i − 1).
Landmarks, including virtual landmarks out of boundary, are selected such that each node can reach at least one landmark within r hops.
Each node is required to store the hop distances to all landmarks, and the hop distances from the k nearest landmarks are used as the address of the node.
Once a source routes a packet, the node selects, from the landmarks that address the destination, the landmark which maximizes the ratio of hop distances to the node and the destination.
Subsequently, the packet is forwarded toward the chosen landmark along the shortest path until reaching a node whose hop distance to the chosen landmark is equal to the hop distance from the chosen landmark to the destination.
At this time, the node chooses a landmark by repeating the same strategy.
If, for each landmark that addresses the destination, the ratio of hop distances to the node and the destination is not greater than one, the packet is greedily forwarded to the closer neighbor, in terms of L 1 and L ∞ norms, to the destination.
If no neighbor is closer to the destination, the packet is forwarded by scoped flooding.
In this paper, G N denotes the Node Graph, G V denotes the Virtual Node Graph, and G E denotes the Extended Node Graph, as defined below.Definition 1.
G N = (V (G N ), E(G N )) is a directed graph,where u ∈ V (G N ) denotes a sensor node in the network, and a directed edge (u, v) ∈ E(G N ) indicates that v can receive messages from u. Nodes u and v have a unidirectional link(u, v) if (u, v) ∈ E(G N ) and (v, u) ∈ E(G N ), and a bidirec- tional link (u, v) if (u, v) ∈ E(G N ) and (v, u) ∈ E(G N ).
Definition 2.
Given G N , a cluster CL is a maximal set of nodes such that there is a path in which all links are bidirectional between any two nodes in CL.Definition 3.
Given G N , a directed cycle C in G N is termed a ring if all nodes in C are not in a cluster.Definition 4.
Given G N and a set, RS, of rings in G N , G V is a directed graph obtained from G N .
For each node, u, not in a ring in RS, a virtual node, u 1 , exists denoting u in G V .
For each node, u, in k rings, R 1 , R 2 , . . . , R k , in RS, k virtual nodes, u 1 , u 2 , . . . , u k , exist denoting u that are in rings, R V 1 , R V 2 , . . . , R V k , respectively.
In G V , a bidirectional link exists between two virtual nodes, u i and u j , denoting node u, and a bidirectional (or unidirectional) link exists between two virtual nodes, u i and v j , denoting nodes u and v, respectively, if u and v have a bidirectional (or unidirectional) link in G N .
(16,29).
Definition 5.
Given G N , G V , RS,In G V , R V 1 = (29 1 , 33 1 , 16 1 ), R V 2 = (33 2 , 16 2 , 29 2 ), R V 3 = (7 1 , 26 1 , 5 1 ), R V 4 = (26 2 , 5 2 , 7 2 ), and R V 5 = (30 1 , 7 3 , 26 3 , 5 3 , 28 1 ).
Fig.
3 shows G E , given RS V = {R V 1 , R V 2 , R V 3 , R V 4 , R V 5 }.
Because R 1 (or R 2 ) is Similarly to ABVCap, each node is assumed to be static or quasi-static and to have a unique ID.
We also assume each node u has the information of visible neighbor v ∈ u.N OU T (see Definition 6) [12].
Each node, u, is assigned at least one virtual coordinate, including eight entries: longitude (u.lo), latitude (u.la), ripple (u.rp), up (u.up), down (u.dn), ring-initiator (u.r-ini), ring-number (u.r-num), and ring-order (u.r-ord).
We call (u.r-ini, u.r-num, u.r-ord) the ring-relative coordinate of u, and (u.lo, u.la, u.rp, u.up, u.dn) the ring-irrelative coordinate of u.Given a strongly connected G N , our concept is to obtain a connected G E , then to assign each virtual node in G V the same ring-irrelative coordinates as that of the corresponding extended node in G E assigned by ABVCap, and finally, to assign node u in G N the ring-irrelative coordinates of all virtual nodes in G V denoting u. Six phases exist in ABVCap Uni.
The first two phases are used to construct a connected G E , and the others to assign virtual nodes in G V the ring-irrelative coordinates in a manner analogous to ABVCap for the extended nodes in G E .
In phase one, clusters are constructed.
In phase two, rings are established.
Each virtual node is also assigned a ring-relative coordinate in this phase.
In phase three, four anchors are selected.
In phase four, axes, including a parallel of latitude and a number of meridians, are established.
The longitude, latitude and ripple coordinates are also assigned to virtual nodes on axes in this phase.
In phase five, the longitude, latitude and ripple coordinates are assigned to virtual nodes not existing on axes.
In phase six, each virtual node is assigned the up and down coordinates.
The following notations are used for the description of ABVCap Uni.
Each node, u, having the minimum ID value in the 2-hop bidirectional neighborhood in G N , first generates and broadcasts a CL SET message containing the ID of u.
Once a node receives the CL SET message from a neighbor via a bidirectional link, the node broadcasts the message and assigns its Cluster-ID to the ID in the CL SET message that is generated by the node having the minimum ID.
Each node, u, having a neighbor, v ∈ u.N IN , in a different cluster generates and forwards by scoped flooding a HC SET message containing the IDs of v and u, the ring-number of u, and a hop counter initially set to 1, where the ring-number of u is a counter for rings that u initiates.
Once a node receives a HC SET message, the node increases the hop counter in the message by one and broadcasts the updated HC SET message.
If a node receives more than one HC SET message containing the same IDs of v and u and the ring-number of u, the node broadcasts the message containing the smallest hop counter.
Once node v receives a HC SET message containing the IDs of v and u, the ring-number i of u, and a hop counter n, the i-th ring of u, R u,i = (u, u 1 , u 2 , . . . , u n−1 , v), is established.
Node v sets (v.r-ini, v.r-num, v.r-ord) to (u, i, n), and sets the predecessor to u n−1 .
Once node u j becomes the predecessor of u j+1 , u j sets (u j .
r-ini, u j .
rnum, u j .
r-ord) to (u, i, j), and sets the predecessor to u j−1 .
In ring R u,i , u j (or u) is the successor of u j−1 (or v).
Each node in k rings is denoted by k virtual nodes in G V (see Definition 4) and each is assigned a ring-relative coordinate.
If u is not in any ring, (u.r-ini, u.r-num, u.r-ord) is set to (−1, −1, −1).
Anchors, X, Y , Z, and Z , are selected, and all virtual nodes are assigned the w, x, y, z, and z coordinates.
Anchor X (or Y ) is the virtual node having the maximum pair of the w (or x) coordinate and the virtual ID value; anchor Z (or Z ) is the virtual node having the maximum pair of the w (or z) coordinate and the virtual ID value, whose x and y coordinates each satisfy the relationship x = y±1.
Each virtual node is assigned a w coordinate, as implemented below.
Once the network is deployed, the virtual node denoting the sink node, W , first assigns the w coordinate to 0.
Subsequently, W generates and broadcasts a W SET message containing a hop counter initially set to 0.
Once a virtual node, u i , receives a W SET message from virtual node v j , u i assigns the w coordinate and updates the W SET message, as follows:1) if u i and v j have a bidirectional link that is not in a ring, u i increases the hop counter in the message by one, assigns the w coordinate to the updated hop counter, and broadcasts the updated message; or, 2) if u i and v j are in a ring, u i assigns the w coordinate to the hop counter in the message, and broadcasts the message.
If u i receives more than one W SET message, u i broadcasts the message containing the smallest hop counter and assigns the w coordinate according to the message.
Subsequently, if u i has maximum pair of the w coordinate and the virtual ID value in the 2-hop bidirectional neighborhood in G V , u i generates and broadcasts a X SET message containing the virtual ID of u i , the w coordinate of u i , and a hop counter initially set to 0.
Once a virtual node receives a X SET message, it updates the message and assigns the x coordinate in a manner analogous to that for the W SET message and the w coordinate.
If a virtual node receives more than one X SET message, it broadcasts the message containing the smallest hop counter, which is generated by the virtual node having the maximum pair of the w coordinate and the virtual ID value, and assigns the x coordinate according to the message.
For virtual node u i , the virtual node that generates the message that is used to assign the x coordinate of u i is the selected anchor X.
The y and z coordinates are assigned in a manner analogous to that for the x coordinate, and anchors Y , Z, and Z are selected in a manner analogous to that for anchor X.
The virtual node having the maximum ID value in a ring that has a virtual node in the 1-hop bidirectional neighborhood in G V whose x (or z, z ) coordinate is smaller by one, termed the x (or z, z ) representative of the ring, is first selected.
Subsequently, the parallel of latitude from anchor Y to anchor X is established.
Anchor Y generates a PARA SET message, which is forwarded until received by anchor X or, in the case in which X is in a ring, all virtual nodes in the same ring as X. Each virtual node that receives the PARA SET message is located on the parallel of latitude, and is assigned the longitude coordinate to its x coordinate and the latitude and ripple coordinates to 0.
Virtual node u i on the parallel of latitude having the longitude coordinate k establishes the k-th meridian by generating a MERI k+ SET (or MERI k− SET) message if u i is not in a ring or if u i is the z (or z ) representative of the ring.
The MERI k+ SET (or MERI k− SET) message contains the z (or z ) coordinate of u i , which is forwarded until received by anchor Z (or Z ), or, in the case in which Z (or Z ) is in a ring, all virtual nodes in the same ring as Z (or Z ).
Each virtual node that receives the MERI k+ SET (or MERI k− SET) message is located on the k-th meridian, and the longitude coordinate is assigned to k, the ripple coordinate to 0, and the latitude coordinate to the value (or the negative value) of the z (or z ) coordinate of the virtual node that generates the message minus its z (or z ) coordinate.
Virtual node u i deals with the PARA SET (or MERI k+ SET, MERI k− SET) message as follows: 1) if u iis in a ring, u i forwards the message to the successor; 2) if u Every virtual node, u i , existing on axes first generates and broadcasts a COOR SET message containing the longitude and latitude coordinates of u i and a hop counter initially set to 0.
Once a virtual node receives a COOR SET message that contains the smallest hop counter, it first assigns the longitude and latitude coordinates to the longitude and latitude coordinates of the virtual node that generates the message, and then updates the message and assigns the ripple coordinate in a manner analogous to that for the W SET message and the w coordinate.
Example 2.
An example of the assignment of the virtual coordinates to nodes using ABVCap Uni is presented in Fig.
1 2 , the z (z ) representative of ring R V 2 , establishes the 5th meridian by generating a MERI 5+ SET (or MERI 5− SET) message.
Subsequently, the MERI 5+ SET (or MERI 5− SET) is forwarded to virtual node 19 1 (or 6 1 ) whose z (z ) coordinate is smaller than that of virtual node 29 2 .
Once virtual node 19 1 (or 6 1 ) receives the MERI 5+ SET (or MERI 5− SET) message, it sets the longitude, latitude, and ripple coordinate to 5, 1 (or -1), and 0, respectively, where virtual node 19 1 (or 6 1 ) is assigned the latitude coordinate 1 (or -1) because its z (or z ) coordinate is smaller than that of virtual node 29 2 by one.
In phase five, virtual node 6 1 generates and broadcasts a COOR SET message that contains a hop counter set to 0.
Once virtual node 10 1 receives the COOR SET message generated by virtual node 6 1 , it sets the longitude, latitude, and ripple coordinate to 5, -1, and 1, respectively.
Finally, in phase six, virtual node 1 1 generates and broadcasts an UP SET message because the longitude coordinate of virtual node 18 1 , in the 1-hop bidirectional neighborhood of virtual node 1 1 in G V , is larger than that of virtual node 1 1 by one.
Once virtual node 25 1 receives the UP SET message generated by virtual node 1 1 , it assigns the up coordinate to 1.
Node 29 is assigned the ring-irrelative coordinates (5, 0, 1, 0, 0) and (5, 0, 0, 0, 0), which are the ring-irrelative coordinates of virtual nodes 29 1 and 29 2 , respectively, as shown in Fig. 1 Once node u routes a packet, the one that has the smallest pair of numbers (|u.lo − d.lo|, u.rep) is the virtual coordinate chosen in longitude routing, and the one that has the smallest pair of numbers (|u.la − d.la|, u.rp) is the virtual coordinate chosen in latitude routing.
Repeating the same strategy, u chooses a virtual coordinate for each neighbor, v, in u.N IO ∪ u.N OU T that has multiple virtual coordinates.
Similarly, the packet is forwarded to node 5, and then to node 20 using latitude routing.
Finally, using proactive routing, the packet is forwarded to node 25.
We first show that ABVCap Uni assigns at least one 8-tuple virtual coordinate to each node.
Secondly, we show that ABVCap Uni routing guarantees packet delivery.
Lemma 1.
If G N is strongly connected, G E is connected.Proof: Let u i and v j be two virtual nodes in G V denoting nodes u and v in G N , and let u E and v E be the corresponding extended nodes of u i and v j in G E , respectively.
Suppose that (u, v) ∈ E(G N ).
It suffices to show that u E = v E or that a path exists between u E and v E in G E .
Two cases are discussed: (c1) a ring exists that contains u and v, and (c2) no ring contains both u and v. For c1, if u i and v j are in a ring, u E = v E ; otherwise, because a bidirectional link exists between any two virtual nodes denoting u (or v), if u E = v E , a path exists between u E and v E in G E .
For c2, link (u, v) can be (c2.1) bidirectional or (c2.2) unidirectional.
For c2.1, a bidirectional link exists between u i and v j , so (u E , v E ) ∈ E(G E ).
For c2.2, u and v are in a cluster.
A path exists in which all links are bidirectional between u and v in G N ; therefore, a path exists between u E and v E in G E by c1 and c2.1.
Lemma 2.
Let hc be a hop counter forwarded and incremented by virtual nodes in G V using ABVCap Uni.
Let hc u i and hc v j be the values of hc updated by virtual nodes u i and v j , respectively, and let u E and v E be the corresponding extended nodes of u i and v j in G E , respectively.
If hc vj is updated by v j due to the receipt of hc from u i , hc ui = hc vj if u E = v E , andhc v j − hc u i = 1 if (u E , v E ) ∈ E(G E ).
Proof: Note that u E = v E if, and only if, u i and v j are in a ring, and (u E , v E ) ∈ E(G E ) if, and only if, there is a bidirectional link between some virtual nodes, x m and y n , not in a ring whose corresponding extended nodes are u E and v E , respectively.
Because v j increases hc by one if the message is forwarded via a bidirectional link not in a ring,hc u i = hc v j if u E = v E and hc v j − hc u i = 1 if (u E , v E ) ∈ E(G E ).
Lemma 3.
Let u i be a virtual node in G V and u E be the corresponding node of u i in G E .
Then, the ring-irrelative coordinates of u i assigned by ABVCap Uni are the same as that of u E assigned by ABVCap.Proof: By Lemma 2, it is easy to verify that anchors X, Y , Z, and Z selected in G V by ABVCap Uni correspond to anchors X, Y , Z and Z selected in G E by ABVCap, respectively, and that the virtual nodes in the parallel of latitude (or i-th meridian) correspond to the extended nodes in the parallel of latitude (or i-th meridian).
Also, virtual nodes are assigned the longitude, latitude, ripple, up, and down coordinates identical to the corresponding extended nodes assigned by ABVCap.
Proof: It suffices to show that each virtual node is assigned at least one 8-tuple virtual coordinate by ABVCap Uni.
First note that each virtual node is assigned exactly one ringrelative coordinate by ABVCap Uni.
Next, if G N is strongly connected, G E is connected by Lemma 1.
Using ABVCap, each extended node in G E is assigned at least one ringirrelative coordinate by Theorem 1 of [10].
This implies that by using ABVCap Uni, each virtual node is assigned at least one ring-irrelative coordinate by Lemma 3.
Lemma 4.
The nodes in G N having the same longitude and latitude coordinates induce a strongly connected subnetwork.Proof: It suffices to show the virtual nodes in G V having the same longitude and latitude coordinates induce a strongly connected subnetwork.
Let u i and v j be two virtual nodes in G V having the same longitude and latitude coordinates, and let u E and v E be the corresponding extended nodes of u i and v j in G E , respectively.
Let NET(u i ) (or NET(v j )) denote the strongly connected subnetwork induced by the virtual nodes in G V having the same longitude and latitude coordinates, including u i (or v j ), respectively.
By Lemma 3, ABVCap assigns u E and v E the same longitude and latitude coordinates.
By Lemma 1 of [10], the extended nodes in G E having the same longitude and latitude coordinates induce a connected subnetwork.
Thus, we must show that v j is inNET(u i ) (c1) if u E = v E or (c2) if (u E , v E ) ∈ E(G E ).
For c1, u i and v j are in a ring; therefore, v j is in NET(u i ).
For c2, a bidirectional link exists between some virtual nodes, x m and y n , whose corresponding extended nodes are u E and v E , respectively.
Because nodes having the same longitude and latitude coordinates induce a strongly connected subnetwork by Lemma 4, proactive routing routes the packet to the destination.By c1, if u i = x m (or v j = y n ), x m (or y n ) is in NET(u i ) (or NET(v j )).
This implies that v j is in NET(u i ).
In our simulation, network behaviors such as packet loss, packet delay, etc., were not taken into consideration.
A network was generated by randomly deploying n nodes in a 1000m × 1000m square region.
A link exists between two nodes with a distance not larger than 100m.
Each link is associated with a random number between 0 and 1.
The link is bidirectional if the associated random number is not larger than pb; otherwise, it is unidirectional.
The networks that are not strongly connected are discarded.
We also generated networks with obstacles, where the obstacles were circles of radius 100m and could be overlapped.
In the simulation, the percentage of bidirectional links, pb, was 0.6, 0.8, or 1.0; the number of obstacles, ob, was 0, 15, or 30; and, the number of nodes, n, was 300, 400, 500, 600, or 700.
To evaluate the performance of routing protocols, we investigated the average delivery rate and the average path length of ABVCap Uni routing, GLDR+VLM routing, and Euclidean routing.
Empirical data were obtained by averaging the data of 500 source-destination pairs from 200 networks.
Parameters r and k in GLDR+VLM routing were set to 10, the same as in reference [7].
The maximum number of allowed local detours per packet, c, was set to 2 in Euclidean routing [8].
To evaluate the communication and memory overhead of ABVCap Uni, we examined the average number of virtual coordinates, the average hop distance from a visible neighbor, and the average number of broadcasts per node.
Empirical data were obtained by averaging the data of 200 networks.
Fig. 4 shows the simulation results for the average delivery rate.
ABVCap Uni routing successfully sets a path for every source-destination pair.
With GLDR+VLM and Euclidean routing, the greater the number of nodes (the higher-density network), the higher the delivery rate.
This observation results because fewer dead-end nodes exist in a higher-density network.
The higher the percentage of bidirectional links, the higher the delivery rate because more paths exist between every source-destination pair.
The number of obstacles appears to have a more significant impact on the delivery rate with Euclidean routing than with GLDR+VLM routing.
With GLDR+VLM routing, the more obstacles exist, the higher is the delivery rate, because more landmarks are selected.
With Euclidean routing, however, the more obstacles exist, the lower is the delivery rate, because more dead-end nodes exist in the network.
The delivery rate is about 69 − 87% with GLDR+VLM routing, and 68 − 99% with Euclidean routing.
Fig .
5 illustrates the simulation results for the average length of routing paths successfully set for source-destination pairs.
The number of obstacles appears to have a more significant impact on the routing path length, as compared to the number of nodes and the percentage of bidirectional links.
With ABVCap Uni and GLDR+VLM, as we expect, the fewer obstacles exist, the shorter is the routing path.
With Euclidean routing, the more obstacles exist, the shorter is the routing path.
The observation results from that as the more obstacles exist in networks, Euclidean routing has a lower probability of setting a path for the source-destination pair having a long distance and thus has the smaller average distance of source-destination pairs.
ABVCap Uni routing path is longer than Euclidean routing path by about 26 − 77% because physical coordinates contain more information about the distance between the source and the destination compared to virtual coordinates.
ABVCap Uni routing path is longer than GLDR+VLM routing path by about 0 − 12% because GLDR+VLM routing has the smaller average distance of source-destination pairs due to the lower probability of setting a path for the source-destination pair having a long distance.
Fig. 6a shows the simulation results for the average number of virtual coordinates assigned to a node using ABVCap Uni.
The greater the number of nodes, the fewer the number of obstacles, or the higher the percentage of bidirectional links, the fewer virtual coordinates are assigned to a node, because fewer axes overlap.
The number of virtual coordinates per node is about 2 − 8.
Fig. 6b shows the simulation results for the average hop distance for node u from a visible neighbor v ∈ u.N OU T .
The more nodes exist or the higher is the percentage of bidirectional links, the smaller is the hop distance from a visible neighbor.
This observation is reasonable.
The more obstacles exist, the smaller is the hop distance from a visible neighbor because of the higher network density.
The number of nodes, the percentage of bidirectional links, and the number of obstacles each have minor effects on the hop distance from a visible neighbor, which is about 2 in all cases.
(b) (c) Fig. 6.
The communication and memory overhead of ABVCap Uni in terms of (a) the number of virtual coordinates, (b) the hop distance from a visible neighbor, and (c) the number of broadcasts.
Cap Uni.
In the simulation, messages are broadcast using the technique on trading time [8], and the COOR SET, UP SET, and DOWN SET messages are broadcast at approximately the same time and each travels at approximately the same speed [6].
A node, u, sends a message to a neighbor, v ∈ u.N IN , using scoped flooding with a limited hop distance, initially set to 2, that is increased by one until v receives the message.
The greater the number of nodes, the fewer the number of obstacles, or the higher the percentage of bidirectional links, fewer broadcasts result because nodes are assigned fewer virtual coordinates.
The number of broadcasts per node is about 10 − 27.
We propose a virtual coordinate assignment protocol, ABVCap Uni, to assign virtual coordinates to nodes that have no geographic information, and a routing protocol based on the ABVCap Uni virtual coordinates in wireless sensor networks with unidirectional links.
The virtual coordinate includes eight entries: longitude, latitude, ripple, up, down, ring-initiator, ring-number, and ring-order.
The longitude and latitude coordinates denote the location of the node, and the other coordinates are used to assist packet delivery.
In ABVCap Uni routing, nodes are not required to compute and memorize global topology features.
ABVCap Uni guarantees packet delivery in the discrete domain, in which case, the routed packet only needs to carry the longitude and latitude coordinates of the destination.Simulations show that the delivery rate is about 69 − 87% and 68 − 99% with GLDR+VLM and Euclidean routing, respectively.
In terms of the path length, ABVCap Uni routing is larger than Euclidean and GLDR+VLM routing by about 26 − 77% and 0 − 12%, respectively.
Simulations also show that the number of virtual coordinates assigned to each node is about 2 − 8 and that the number of broadcasts required for each node in ABVCap Uni is about 10 − 27.
Future research includes study of the manner in which to guarantee packet delivery in a component of the network that becomes disconnected due to switch-off or mobility of sensors.
Additional research includes guaranteeing strong connectivity of the network while minimizing power levels of nodes so that ABVCap Uni can always route the packet to the destination with minimum power consumption.
