Exploiting the increasingly wide use of Light-emitting Diode (LED) lighting, in this paper, we study the problem of using visible LED lights for accurate localization.
The basic idea is to leverage the existing lighting infrastructure and apply trilateration to localize any devices with light sensing capability (e.g., a smartphone), using LED lamps as anchors.
Through the design of Epsilon, we identify and tackle several technique challenges.
In particular, we establish and experimentally verify the optical channel model for localization.
We adopt BFSK and channel hopping to enable reliable location beacon-ing from multiple, uncoordinated light sources over the shared optical medium.
We handle realistic situations towards robust localization, for example, we exploit user involvement to resolve the ambiguity in case of insufficient LED anchors.
We have implemented the Ep-silon system and evaluated it with a small scale hardware testbed as well as moderate-size simulations.
Experimental results confirmed the effectiveness of Epsilon: the 90th percentile accuracies are 0.4m, 0.7m and 0.8m for three typical office environments.
Even in the extreme situation with a single light, the 90th percentile accuracy is 1.1m.
We believe that visible light based localization is promising to significantly improve the positioning accuracy , despite few open problems in practice.
We have been witnessing ever increasing roll-out of location-based services, for which accurate location provisioning is a key.
GPS has largely solved the problem for outdoor scenarios.
However, accurate localization remains a grand challenge for indoor environments.
WiFi-based indoor localization has attracted lots of research attentions, for the advantage of ease-use and low deployment cost by leveraging existing WiFi infrastructure [3,6,23].
However, they usually deliver an accuracy of up to few meters (refer to §8.4), suffering from wireless channel dynamics, fading, interference and environmental noises.In this paper, we propose Epsilon, a novel sub-meter localization system exploiting visible Light-emitting Diode (LED) lighting infrastructure.
Such work is inspired by two observations.
The first is the ever increasingly widespread of LED lighting [14].
LED offers a new and revolutionary lighting technology with the potential for longer lifetime, energy saving, quality improvement, and environment preservation.
The second is its unique dual-paradigm feature, i.e., illumination as well as communication.
It is attributed to the LED's ability of instantaneous on/off, which allows LEDs to be dimmed via Pulse Width Modulation (PWM) and thus to carry digital information in the visible light carrier, i.e., visible light communication (VLC) [9,11,16].
Inspired by these favorable facts, Epsilon is designed to provide high-accuracy positioning in a low(zero)-cost and easy-to-use fashion.
It has three-fold implications.
First, it reuses the existing lighting system for the localization purpose and can be gradually enabled.
Second, Epsilon does not rely on any centralized localization service (e.g., a localization database in the WiFibased solutions).
Ideally, the system would be capable of "plug-and-play".
It facilitates receiver-side localization so that a device (e.g., a smartphone) can infer its position at a minimum interaction (passive listening, here) with the lighting infrastructure.
Last but not least, Epsilon is able to yield high accuracy (sub-meter) localization.
In fact, it is promising to achieve unprecedented accuracy by leveraging two advantages of the lighting system rather than other infrastructure-based systems (e.g., WiFi-based).
(1) The deployment of illumination lights is much (over one order of magnitude) denser than that of WiFi access points (APs).
For example, in our office floor, there are about 21 APs whereas over 300 light sources are deployed to cover the same space.
(2) Light sources, unlike WiFi radio signals, are always visible.
It exposes a unique opportunity to involve the user in loop for some challenging scenarios.We design Epsilon to exploit illumination infrastructure for localization purpose.
The basic idea is trilateration 1 using visible LED light sources as anchors.
In Epsilon (as shown in Figure 1), each bulb, in addition to its major lighting role, also serves as a location landmark.
It broadcasts, via the light carrier, location beacons carrying information, i.e., the position of the bulb and its duty cycle, to facilitate receiver side localization.
A receiver (e.g., a mobile phone) employs a light sensor to retrieve the beacon information, and measures the received signal strengths (RSSs) from multiple bulbs and computes the distances to each bulb through the optical channel model.
Finally, it estimates its location based on the received beacon information and distance measurements from all light sources.
Note that the beacons are transmitted via a certain optical channel which is thus free from interferences from ambient light such as sunlight and fluorescent light (more details in §4.2).
Though the basic idea sounds straightforward, it is non-trivial to realize a fast and highly accurate lightbased localization system, due to the following three technical challenges.
Along with them, we briefly describe the Epsilon solution and our contributions accordingly.
• It is nontrivial to accurately measure the distances between a receiver and surrounding light sources.
Many factors such as irradiation angles, phone orientation and light emission power, affect the measurement accuracy.
To this end, We establish and experimentally verify a precise optical channel model for localization purpose.
We identify all the factors that affect the measurement and their extents, so that we can precisely relate the distance to the RSS ( §4).
• It is challenging to obtain a reliable information of each LED bulb (e.g., ID, location, and optical channel parameters), especially among multiple, uncoordinated light sources via the shared optical medium.
Reliable information transmission over the shared medium, in general, belongs to the VLC paradigm that is yet to come.
Therefore, we must design a scheme that does not depend on the existence of a deployed VL-C network.
Our focus is more on avoiding interferences among a large amount of ad-hoc deployed light sources without any explicit coordination, rather than achieving high throughput.
Specifically, we adopt binary frequency shift keying (BFSK) modulation scheme, and mitigate possible collisions through channelization and hopping ( §5).
• There are practical challenges to provide robust localization in real situations.
In some cases of dense light deployment, given too many observations, how can we precisely localize the receiver by making a full use of all distance measurements which might even interferes or conflicts with each other?
In the contrary situations with sparse light deployment, how can a receiver work with few measurements that are even insufficient to uniquely locate the receiver.
To this end, we develop precise localization through multilateration techniques, as well as handling practical challenges with the help of simple user interactions ( §6).
Though Epsilon is based on existing techniques like BFSK, channel hopping, and intensity modelling, integrating them effectively is non-trivial, and has never been examined before.
We have implemented the Epsilon system.
To preliminarily evaluate the performance of Epsilon, we build a small hardware testbed by designing and assembling five LED bulbs.
We also made a light sensor board that connects to mobile phone through the audio jack.
We evaluated Epsilon in typical office environments, including a conference room, a cubicle area, and a corridor, representing various environmental complexities and light layouts.
The experimental results confirmed that using visible light yields high localization accuracy: the 90th percentile accuracy reaches 0.4m, 0.7m, and 0.8m for the three environments, respectively.
Even in scenarios with a single light source, the 90th percentile accuracy is 1.1m. Although recent work has investigated the idea that exploits LED lighting for indoor localization [13,15,22,24], this is the first piece of work from academia that actually designed, implemented and evaluated a real working system, to the best of our knowledge.
Light Emitting Diode: LED is a simple semiconducting device.
We envision that LED lighting will become the mainstream lighting technology in the near future for its several advantages.
First, LED bulbs are much more energy efficient (2×) in comparison with the conventional compact fluorescent light (CFL) bulbs.
Its lighting efficiency is almost constant (drop by less than 10% after 70,000 working hours [14]) throughout the whole lifes-pan.
Second, the lifetime is also much longer lifespan (6×).
Third, LED bulbs are free of mercury and thus more environmentally friendly.
One drawback of current commodity LED bulbs is its higher production cost, which however is still a win considering the savings on the energy expense.Instantaneous On/Off: As a semiconductor device, LED possesses a feature -instantaneous on and off.
In other words, a LED bulb can be toggled within few microseconds.
Our measurements using an oscilloscope show that the rising and falling edges of an ordinary LED are about 4µs.
Due to such property, Pulse Width Modulation (PWM) is the most widely used approach to dim a LED bulb, i.e., frequently turning on/off the LED.
In PWM, the brightness is determined by the duty cycle.
Figure 2 shows two examples with 60% and 20% duty cycles, respectively.
Visible Light Communication (VLC): The instantaneous On/Off feature turns a LED lamp into an effective transmitter for VLC.
LED bulbs can use various modulation schemes, such as on-off keying (OOK), variable pulse-position modulation (VPPM), and color shift keying (CSK), to embed digital information in its light.
VLC has been studied for years [9,11] and was recently standardized in IEEE 802.15.7 [16].
One special mandatory requirement of VLC is to avoid the flickering problem, which is caused by the periodic changes in the instantaneous brightness.
It is reported that low-frequency (less than 120Hz [17] or 160Hz [9]) flickers make people feel uncomfortable or even sick.
Although there is no widely accepted criterion for the safe flicker frequency, it is generally thought that a frequency higher than 200 Hz is safe.
We present Epsilon -a visible light based localization system.
Figure 3 plots the overall system architecture of Epsilon.
It consists of two parts, one on the LED bulb and the other on the receiving device such as a smartphone.
Each part consists of several functional modules that collaboratively fulfil the three key technical components of Epsilon, as briefly described below.Light Beaconing: Each LED bulb broadcasts location beacons to the receiver.
This is jointly achieved by the modulation module at the LED side and the demodulation module at the receiver side.
We adopt binary frequency shift keying (BFSK) modulation to encode the messages.
In precaution of possible collisions when multiple, uncoordinated light sources co-exist, we channelize the overall usable spectrum and design a distributed channel hopping logic at the LED bulb.
Each beacon is transmitted at a certain optical channel, and thus is interference free from ambient light such as sunlight and fluorescent light.Distance Estimation: We need to estimate the distances from the receiver to observed light sources, in order for trilateration.
The receiver decodes light beacons from multiple light sources, and measure their RSSs, simultaneously.
The RSS as well as the information embedded in the light beacon are used to infer the distance from the receiver to a particular light source.Localization: We design different approaches to localize the receiver, depending on the number of perceived light sources.
If over three light sources are perceived, we locate the receiver via trilateration/multilateration which involves an optimization process that maximally respects all distance constraints.
Otherwise, we involve the user in loop, and design a process to locate the receiver by fusing the measurements of light and IMU sensors (accelerometer, magnetometer, and gyroscope).
These three design components echo the aforementioned challenges, respectively.
Next we will elaborate the details for each of them in the following sections.
We start with distance estimation because it is a critical enabler to accurate localization of Epsilon.
To achieve high accuracy trilateration, we need to precisely measure the distances from the receiver to observed LEDs.
To this end, we establish a model that can precisely relate the received light signal strength to the distance of a light source.
The irradiation angle φ ; the distance between the light source and the sensor d; and the incidence angle θ .
Note that the incidence angle is between the ray and the z axis of the phone coordinate system.
For an optical wireless link, the received energy over one channel can be described asP r = P t · H(d) · G r ,(1)where P t is the transmission power over a certain channel of the light source.
H(d) is the channel gain that is related to the actual sender-receiver distance d. G r is the receiver gain which can be calibrated once for good.
In fact, the channel gain H is not merely a function of the distance, but also depends on the irradiation angle φ and the incidence angle θ , as depicted in Figure 4.
Intuitively, the longer the distance, or the larger the incidence or the irradiation angle, the lower the received energy.The radiant intensity of a LED chip is usually assumed to follow a Lambertian radiation pattern [4].
Then, the channel gain can be generally modelled by Eq.
(2) 2H(0) = A · g(φ ) · 񮽙 m + 1 2π 񮽙 · cos m φ · cos θ d 2 (2)where A is the area of the sensor detector and g(φ ) is called the optical concentrator which is a constant if the incidence angle falls in the field of view (FoV) of the sensor detector [11].
m is called the Lambertian order which equals 0 for an ideal point light source.
For typical LED bulbs with limited illumination range like ±60 • , we have m = 1 [4].
The accuracy of distance inference is directly affected by the way of RSS measurement and the precision of the channel gain model.
We verify them through a sender-receiver pair, where the sender is a LED bulb and the receiver is a light sensor.Incidence angle and irradiation angle: We first examine the received energy versus the incidence angle θ and the irradiation angle φ .
According to the channel model in Eq.
(2), the received energy follows the cosine of θ and φ , which is shown in black solid curve (Theoretical) in Figure 5(a) and 5(b).
We measure the observed chan-nel response for θ ∈ [−60 • , 60 • ] and φ ∈ [−60 • , 60 • ], at 2The parameter '0' in H(0) is an abbreviation, referring to all affecting parameters.
distances of 1m and 5m from a LED bulb, respectively.
The normalized measurement results are also plotted in Figure 5(a) and 5(b) in red dashed and blue dotted curves, respectively.
To quantify the relative error between our model-based estimation and actual measurement, we define the error ratio (denoted as r) asr = |rss measured − rss model | rss model (3)where rss measured and rss model are the RSSs from measurements and model-based derivations.
The error ratios regarding to both angles are shown in Figure 5(c) and 5(d), respectively.
In Figure 5, we can see that the real measurements fit the model very well.
The error ratio is mostly below 5% when the angles (θ and φ ) are within ±60 • .
Once they exceed ±60 • , the error ratio grows significantly, though the absolute error still stays relatively low.
It is caused by the physical limitations in the FoV of ordinary LED chipsets and the light sensor.LED-receiver distance: According to Eq.
(2), the received energy falls off against the the distance d, following an inverse-square law.
We verify this by fixing the incidence and irradiation angles to 0 • and vary the distance from 1m to 5m with the step length of 0.25m.
The measured channel responses are shown with scatters in Figure 6.
We then fit the scatters with function C/d 2 where C accounts for the constant coefficients in Eq.
(2).
From Figure 6, we could see the overall fitting error is very small, with root-mean-square error (RMSE) being 1.85e-4 and C = 0.0018.
Therefore, the inverse square model accurately characterizes the relation between distance and RSS.In our experiments, we found that the constant C will be different when using the same light sensor with differ- ent light sources.
We thus conducted additional experiments using a cross-validation approach, that is, trying different combinations of LEDs and light sensors.
We found the coefficient C can be factored intoC L and C s (i.e., C = C L ·C s ),where C L is per-LED constant and relates only to its maximum power, and C s is a per-sensor constant and related to its receiver gain.
Both C L and C s are constant and can be measured once for good, e.g., preferably by the manufacturer, and stored in the LED and the sensor device.
Since we are exploiting multiple light sources to locate a device, thus for sake of clear presentation, we will leave out C s and use C to indicate C L in formulations throughout the rest of the paper.Putting all insights we gain so far together, with known C, θ and φ , the distance can then be precisely derived with the measured RSS.
We now address how to model the emission power from a LED light source.
The light signal from a LED is a 0-1 pulse wave as shown in Figure 2.
Suppose the period is T with pulse time τ.
The Fourier series expansion for this pulse wave isf (t) = τ T + ∞ ∑ n=1 2 nπ sin 񮽙 πnτ T 񮽙 cos 񮽙 2πn T t 񮽙 (4)The equation above indicates that the emission power of the LED spreads over the baseband (the first AC component) and all the harmonics.
Thus, it is infeasible to measure the overall received energy.
Fortunately, for sake of localization, we only measure the portion of energy over the baseband optical channel which already validates the channel model in Eq.
(2).
The RSS hereafter is thus defined as the magnitude of the baseband frequency component.
Actually, the transmitted energy at the light source is proportional to the coefficient of the first AC component in Eq.
(4), i.e., P t ∝ 2 π sin(πτ/T ).
Note that P t is not affected by the actual baseband frequency, but interestingly, it is a function of duty cycle τ/T of the PWM.
This insight indicates that the light source also needs to convey the duty cycle information in its beacon for the receiver to correctly model the transmission power.
In conclusion, the RSS measured at a receiver is calculated as follows:P r = C · sin( τ T π) · cos θ · cos φ d 2(5)where C and τ/T are the per-LED constant related to its maximum emission power and the current duty cycle of the LED, both included in its beacon.Interference from ambient light: Note that the measured power from a LED is the portion within a certain frequency range.
Most ambient lights are with only DC component (e.g., sunlight) or energy at a fixed frequency (e.g., incandescent and fluorescent bulbs at 100 Hz or 120 Hz).
Therefore, the RSS at a receiver in our system will not be affected by these ambient light sources, by simply avoiding these colliding frequencies.
In § 8, we actually evaluate our system with the co-existence of various kinds of ambient light sources.
The PMW-based dimming mechanism of LED enables communication with visible light.
We now present our design to achieve reliable location beaconing.
Many modulation schemes were proposed in the VL-C field, such as OOK, VPPM, and CSK.
They all can be adopted to carry location beacons in the light carrier.
However, they require either sophisticated decoding logic or special hardware, and also special mechanisms to avoid the flickering problem.
In Epsilon, we use the binary frequency shift keying (BFSK) for its simplicity and the natural prevention of flicker -there is no flicker issue for the carrier frequencies over 200 Hz.In BFSK, symbol 0 and 1 are represented by two frequencies f 0 and f 1 , each frequency lasting for a certain duration (termed symbol length).
The receiver demodulates the incoming BFSK signal by transforming (FFT) the sensed light signals in a decoding window, whose length equals to the symbol length, to the frequency domain, and performing a binary decision on the major frequency component.
The transform is carried out in a sliding fashion: each time the window advances by a fraction of the symbol length.
More details on modulation/demodulation could be found in our previous work [10], which is omitted here due to the space limitation.
The major challenge of reliable beaconing is the collision problem caused by multiple, uncoordinated, and unsynchronized light sources over shared light medium.
It is extremely difficult to coordinate among the light sources.
First, no light lamps are equipped with extra sensors to find their neighbors.
Moreover, the actual deployment of light sources (e.g., usually attached to ceiling) makes it difficult for the light sources to see/sense each other.
This is different from most wireless radios where each transmitter also serves as the receiver.
Consequently, time division multiple access is not feasible in our scenario as they require synchronization or a carrier sensing mechanism among senders.We choose to channelize the whole available spectrum into multiple disjoint and even spaced sub-carriers.
In Epsilon, each LED bulb is configurable, thus it tends to think of manually assign a static channel for each LED.
Unfortunately, this is infeasible due to the unknown coverage of each light source and how multiple sources' coverages may intersect with each other.
Even though we can see the coverage, it is unlikely to adjust the power to avoid interference, as the power control should serve primary lighting function.
Therefore, we adopt random channel hopping to avoid persistent collision among light sources.
The timeline is divided into slots (called a hopping period) with equal length.
Each light source randomly picks one channel in each hopping period, transmits a beacon, and then hops to another channel.
As long as the number of channels is large enough in comparison with the number of contending LEDs, random hopping actually handles the problem of collision effectively.
We formulate and analyse the random channel hopping scheme in the next section.Another unsolved problem is to select the communication band.
Intuitively, the overall usable spectrum is jointly determined by a few factors such as the minimum frequency to prevent flicker and the On/Off speed of the LED bulb.
We will discuss more about spectrum selection in § 7.
Collisions may still occur under random channel hopping.
Note that when a collision happens, the receiver needs to wait for additional hopping periods to correctly receive the beacon.
3 Regarding to good indoor localization user experience, short waiting time is highly desired, which is directly related to the time to correctly receive all beacons from all sources.Suppose one light sensor observes M light sources and the number of channels is N.
The waiting time t w can be formulated ast w (M) = k(M) · τ(6)where k is the number of hopping periods and τ is the length of each hopping period.
Note that both the t w and k are functions of M. Given the fixed overall spectrum, we have τ ∝ N as increasing the number of channels implies narrower channels, hence lower data rates (i.e., τ ↑).
Nonetheless, increasing N reduces the collision probability, and less hopping periods will be waited (i.e., k ↓).
Based on this formulation, we discuss how to obtain the optimal N below.
Note that, without clock synchronization among light sources, the hopping periods of different light sources are likely misaligned.
Thus, one light source may partially collide with another, leading to corrupted beacons from the two colliding sources.
Assume the channel selection during each period is independent and uniformly distributed in [1, N].
The probability that, in k consecutive hopping periods, one light source does not collide with any other light sources for at least one hopping period (which guarantees correct decoding at the receiver) isp = 1 − 񮽙 1 − 񮽙 1 − 1 N 񮽙 2(M−1) 񮽙 k(7)In Eq.
(7), M is a constant which is determined by the environment.
Once N is given, we can derive the minimum k so that p ≥ P 0 , where P 0 is the success rate the system desires:k(M) = arg min k p ≥ P 0(8)Once M and P 0 are given, we can find the optimal N that minimizes the waiting time by combining Eq.
(6), (7), and (8).
For instance, the optimal number of channels for M = 3 is 7, and the corresponding number of hopping periods is 3.
In practice, the density of light sources varies from place to place.
Therefore, it is unable to find a globally optimal N for all situations.
Empirically, we may select the N which minimizes the maximum waiting time for typical settings such that M ∈ M typical , i.e.,N = arg min k max M∈M typical t w (M)(9)where M typical represents typical numbers of light sources that are observed by the receiver.
In our system, P 0 and M typical are set to 90% and [3,10] respectively, where correspondingly N = 30 and k = 3, i.e., the communication band is divided into 30 channels and the receiver waits for 3 hopping periods.
During the waiting time, the receiver obtains multiple beacons from the same light source.
We select the one with the lowest signal strength for further processing, which is less likely corrupted by other beacons.
The actually waiting time depends on the bandwidth of each channel which is further discussed in §7.
The localization core is to use trilateration to calculate the receiver's position from distance measurements to multiple light sources.
We first address the normal cases with sufficient light sources and then the challenging cases with insufficient sources.
Given n light sources, we can apply Eq.
(5) to establish a series of constraints on measured RSSs and distances, as well as the angles.
Those are,           P r1 = C 1 · sin(α 1 π) · cos θ 1 ·cos φ 1 d 2 1 P r2 = C 2 · sin(α 2 π) · cos θ 2 ·cos φ 2 d 2 2...P rn = C n · sin(α n π) · cos θ n ·cos φ n d 2 n ,(10)where α i and C i are obtained from the i th beacon.
Let the 3D coordinates of the receiver and the light source are 񮽙x 0 , y 0 , z 0 񮽙 and 񮽙x, y, z񮽙, respectively.
Their dis-tance is d = 񮽙 (x 0 − x) 2 + (y 0 − y) 2 + (z 0 − z) 2 .
For simplicity, we assume all the light sources facing downward (it is usually the most common case with lights on the ceiling), we further have cos φ = |z − z 0 |/d.
In case that the receiver's light sensor faces squarely upward toward the ceiling, we have θ = φ .
Therefore, only three unknowns remain, namely x 0 , y 0 , z 0 .
Later, we discuss the general case with arbitrary light deployment or phone orientation, which only requires extra calibration, local angle detection, or more distance measurements.With four or more light sources, we may uniquely determine all unknowns.
The localization is an optimization process trying to minimize the linear mean square (LMS) error, which is actually a well-studied topic [18].
Here, we use Newton's Method for the optimization.
The goal is to minimize the sum of absolute error between the left and right side of each equation in Eq.
(10).
In our implementation, we generate the initial values for each unknown randomly and ran the optimization process multiple times to avoid local minima.
Note that if only three light exist, the optimization may end up with two optimums, one of which is actually fake (above the ceiling due to even symmetry property of the cosine function in keep the phone in the horizontal plane and rotate it for an angle of α 1 until pointing to the light source (top view); (b) pitch the phone for an angle of α 2 where α 2 ≥ the incidence/irradiation angle (side view).
the model).
In practice, light sources may deployed at similar height and hence such ambiguous solutions can be filtered out by common sense (e.g., the device is unlikely higher than the ceiling).
As a result, three light sources are typically the minimum required number in our system.In real usage, the receiver (hence the light sensor) may be in arbitrary orientation.
This will complicate the problem.
Intuitively, we can leverage the equipped orientation sensors (e.g., inertial measurement unit (IMU) on the phone) to measure the device's attitude and transform back to the horizontal attitude.
In case not all the light sources face downward, their angles can be pre-obtained via calibration and delivered to the receiver via beacons.
More measurements can help to solve the general localization problem by introducing more constraints.
Even the light source and the receiver is not perfectly facing down or up, slight imperfection actually has little impact to the location accuracy, as their impact to the distance estimation is via a cosine function that changes slowly near 0.
We evaluate this in §8.3.
In real situations, we may end up with insufficient number (e.g., one or two) of light sources that cannot uniquely locate the device.
For instance, there might be only a single lamp in a room; in a long corridor or tunnel, a serial of lamps are usually deployed with a long distance between neighboring lamps, where the device can sense only one (or two) light sources in most of the time.
While using the lamp position (coverage-based method) already fulfils rough position estimation, we discuss the option of involving the user if a higher location accuracy is desired.
Note that this is an advantage of visible light than RF signals (e.g., WiFi, FM, and Geomagnetism) which are not perceptible by human.
Figure 7 illustrates the procedure of the user gestures.
It contains two steps.
The first step is exactly the same as we use compass to find direction.
That is, the user holds the phone horizontally and rotates the phone (around device's Z-axis) as shown in Figure 7(a), until the phone is oriented to one light source.
The second step is to gradually pitch the phone.
In the meantime, a continuous measurement is performed to record the RSSs from the light source at different phone pitch angles (Figure 7(b)).
The procedure above basically uses inertial sensors to measure the irradiation and the incidence angles.
In the first step, it measures the orientation angle, α 1 , between a virtual line connecting the phone and the light source and the North from the compass.
We also record the RSS, as P r1 , at the point when the phone is pointing to the light source.
The user then continues with the second step by pitching the phone from the horizontal attitude to the roughly vertical attitude for an angle of α 2 while keeping the phone screen facing the light source.
Note that α 2 should be larger than the incidence/irradiation angle and it can be easily fulfiled as long as it passes the point at which the phone screen faces squarely towards the light.
The system logs the reading of the light sensor as well as the instantaneous pitching angle (around device's Xaxis) that is captured by the gyroscope.
An instance of the logged light sensor trace is given in Figure 7.
We can see that the sensor readings increase until a peak point and then decrease.
This is caused by the changing incidence angle.
Thus, the peak point is the instant that the device faces squarely to the light.
The corresponding pitched angle from the beginning to the peak point is the desired incidence angle θ when the phone was placed horizontally.After the two steps, we obtain the incidence angle θ , RSS P r1 , and the angle α 1 .
With the model in Eq.
(5), the former two measured parameters ensure all the possible device positions are in a 2-D horizontal circle around the light source.
Then, we can use α 1 to finally determine only one location in the circle.
Hardware Design: Note that Epsilon is still a pioneer work exploiting LED for localization, there is thus no off-the-shelf product that supports programming and VLC.
We designed a small LED lamp, as shown in Fig- ure 8, with a commercial LED (Model: Cree T6) [8] with 10W marked power and peripheral control circuit to adjust the beaconing content.
The modifications to the LED is easily met in practice.
As the commodity LED bulbs already employ PWM for dimming purpose, we only need to add the capability of varying the frequency for BFSK.
For the receiver design, modern mobile phones ship with light sensors.
However, it turns out that the OS restricts the sampling rate (e.g., Motorola XT910 ∼ 5Hz, Samsung Galaxy SIII ∼ 100 Hz).
While we envision that we can modify the driver in the future, we currently design a small light sensor board, that merely consists of a light sensor, an amplifier, and a small battery.
We connect the board to the phone through the audio jack.
The sampling of light sensor is performed using the ADC for microphone.
As will be shown later, the audio ADC imposes certain design constraints regarding to the usable communication band.Configuration and Frame Design: In our system, we embed the coordinates of each light source in its beacon.
Having a back-end service for mapping the ID of each LED to its physic location is an alternative solution, which however relies on the network connection.
Therefore, we insist on making each LED bulb selfcontained.
Another practical issue is that we need to configure the location for each LED.
We rely on the profile (e.g., blueprint map) from building management to configure the position of each bulb.
Each beacon payload consists three parts: preamble, location information, and the duty cycle, as shown in Figure 9.
The preamble consists of 2 bits of zeros to facilitate RSS measurement.
The location information is a 64-bit latitude and longitude tuple.
We use a 8-bit number to represent the duty cycle, which corresponds to ∼ 0.4% dimming adjustment granularity.
We also adopted a 8-bit CRC to check the integrity of the contents.
3.
Constrained by the sampling rate (up to 44.1 kHz)by audio ADC, f h should not exceed 22.05 kHz, according to the Nyquist theorem.With above constraints, we choose to use the band from 10 kHz to 19 kHz in our implementation.
We divide the band into 30 channels, each with 300Hz bandwidth and the corresponding data rate at each channel is 120 bps.
For each beacon, one hopping period is about 0.7s.
The overall waiting time is thus around 2.1s.Frequency Response of Audio ADC: The sensed light signal is affected by the audio ADC circuit of the mobile phone (we disabled the auto gain control).
Figure 11 shows the frequency response we measured using a high end sound card (AVID M-Audio C600 [2]) and a smartphone (Samsung Galaxy S III).
The frequency response of the sound card is perfectly flat from 10 kHz to 20 kHz, so that the receiver gain in Eq.
(1) can be viewed as a constant.
For the phone, there are small fluctuations near 10.5 kHz and 14.5 kHz due to hardware issues.
The fluctuations are all below 1 dB which is thus small enough to tolerate.
We first evaluate Epsilon with a small-scale hardwarebased testbed, and then moderate-scale model-based simulations.
Our hardware-based evaluations focus on the localization accuracy, while the simulations covering other performance aspects such as robustness with respect to light source selection and imperfect incidence angles.
We designed and assembled 5 LED lamps, and evaluated Epsilon under three typical office environments: a conference room, a cubicle area, and a corridor.
The environments and the deployed LEDs are shown in Fig- ure 12.
They represent different environmental complexities and reflection characteristics.
The areas are 5m×8m, 2m×12m, and 3.5m×6.5m, respectively.
For each area, we place the phone at 60 positions and run multiple tests at each position.Methods for Comparison: We compare Epsilon with two intuitive methods in our experiments:• Coverage Method: it locates a receiver to the position of the light source that the receiver sees the highest RSS.
• Weighted Average: it locates a receiver as the weighted average of the locations of the sensed light sources, using their RSSs as weights.It is difficult to compare Epsilon with existing localization algorithms based on other signals (e.g., WiFi) side by side.
We thus empirically elaborate some numeric results from our evaluation as well as those reported by the state-of-art in §8.4.
Figure 13 plots the localization errors in three scenarios where the sensor is put at various locations in the interested area.
It shows that Epsilon yields high accuracy for all the three environments.
The medium error is about 0.3m and the 90th percentile errors are 0.45m, 0.7m, and 0.8m in the conference room, the cubicle area, and the corridor, respectively.
Among the three scenarios, the conference room is the simplest as it is mostly empty; the cubicle environment is actually the most complicated.
However, thanks to the better layout of the LEDs, the performance in the cubicle area is actually better than that in the corridor.
The corridor is also empty, but the LEDs are placed almost in a straight line.
We also examine the localization accuracy for each position in detail.
We find that center area (i.e., the area surrounded by lamps) positions tends to have smaller errors than outer positions.
The reason is that center area positions have a better chance to observe light sources with small incidence angles which are thus more robust to measurement noise.
For the corridor environment, we find those positions with the largest errors are exactly the positions at the two edges of the corridor.
The result suggests that we should evenly deploy the LEDs for better accuracy.
Fortunately, typical deployment of light sources already follows this natural rule to deliver even illumination conditions.
One should note that all the evaluations above are performed with various ambient light sources (e.g., sunlight or fluorescent lamps).
We also run experiments at night with all other lights off and there is no visible difference with or without ambient lights.
Epsilon always outperforms the Weighted Average method and pure Coverage method.
By exploiting the characteristics of optical channels, Epsilon improves the 90th percentile accuracy by 1× (than Weighted Average) or 2× (than Coverage).
Nevertheless, the accuracy of the latter two methods is still high.
The 90th percentile accuracy is always smaller than 2 meters.
Given their simple designs, these results clearly demonstrate the advantage of using visible light.
We evaluate our single LED based localization method using one LED in the corridor case.
Each measurement follows the process described in §6.2.
Note that the key is to measure the angles using the IMU sensors, which are the main error source.
We first examine the sensor errors shown in Figure 14.
All the data is measured in our office building at various locations.
The left figure shows the distribution of compass sensing errors, while the right one shows the distribution of the errors between the measured incidence angles versus the groundtruth.
Figure 14 reveals that both errors distribute normally within a certain range: the compass errors fall in ±26 • while the gyro errors in ±7 • in 95% credible interval.
Figure 15 shows the resulting location error of both Epsilon and Coverage.
We can see that Epsilon significantly outperforms Coverage: the accuracy is improved by 5×.
In most cases (∼ 95%), the errors of Epsilon fall below one meter.
It demonstrates that with simple user involvement, we are able to achieve quite high localization accuracy even with only one light source.The experiment above demonstrates the advantage of using perceptible signals under the user's help for localization.
Note that, in practice, the user often walks under a LED lamp, which naturally imports the user involvement into Epsilon.
We perform model-based simulation for two reasons.
First, our results on the real testbed results have demonstrated that the optical channel model fits our measurements quite well.
Hence, using model based simulation does make sense.
Second, our testbed with only 5 LED lamps limits us to explore robustness and performance of Epsilon under more light sources or with imperfect incidence angles.
In fact, abundant light sources raise an interesting question: does Epsilon perform better as it uses all the measurements from more sources?
If not, how should it smartly use the observed light sources for localization?
To answer these questions, we propose a new scheme called Epsilon-s, which performs a light source selection procedure before localization.
Specifically, we select the top four sources with the highest RSSs among all observed light sources.
The heuristics is that light sources with higher RSSs tend to be closer and with smaller incidence/irradiation angles.Regarding the error of the incidence angle ∆θ , we want to evaluate its impact on the localization accuracy.
In Epsilon, the LED-receiver distance depends on three parameters, namely the RSS, irradiation angle φ of LED, and the incidence angle θ of the light sensor.
The RSS is directly measured by the device, and φ is determined by the relative position of the receiver to the LED.
The only uncertain variable is θ , as we ask the user to hold the phone horizontally, which is error prone due to various reasons.
Therefore, it is necessary to evaluate the impact of imperfect incidence angles to the localization accuracy.The simulation is done in a 20m × 20m × 3m space.
We place light sources uniformly on the ceiling (height = 3m), each at 񮽙4i, 4 j, 3񮽙 where i, j ∈ [1,4], and thus we have a total of 16 light sources.
We put receiver at 񮽙x, y, 0񮽙 where x, y ∈ [0,20].
For each receiver location, we set the error of the incidence angle, denoted as ∆θ , to an angle randomly within ±20 • .
We then measure the localization error under different schemes.
Figure 16 plots the simulation results.
It shows that Epsilon outperforms both the Coverage and Weighted Average.
The Coverage method performs comparably to the Weighted Average.
In contrast, Epsilon-s performs significantly better than the other three.
Recall that the incidence angle θ relates to the distance via a cosine function, which changes slowly at small angles but very quickly at large angles.
Epsilon uses all sensed light sources, which would include faraway ones.
Their θ s (and φ s as well) are usually large.
Thus small ∆θ can make a big impact to the distance estimation, which impairs the localization accuracy.
In contrast, Epsilons uses only high RSSs lights that have small θ s, and is thus more tolerant to ∆θ .
Note that, the tolerance of Epsilon to small ∆θ implies less restriction to the actual use, which allows the user to place their phone more casually.
Current mainstream indoor localization systems are WiFi-based, which basically achieve meter level accuracy.
Recently, ArrayTrack [21] achieves sub-meter accuracy using multi-antenna technique.
However, it relies on multiple APs to work collaboratively to measure the angle of arrival (AoA), which is non-trivial.
In practice, the APs are typically deployed by different parties.
Also, the main purpose of APs is for networking, and thus the number of antennas is less than required (16 antennas for each AP) in [21].
We thus only summarize the basic properties of representative WiFi localization systems.
Note that it is difficult to fairly compare them with Epsilon due to the impact of infrastructure deployment and database density.
We therefore only excerpt their performances from the original paper.
We see that Epsilon yields the best accuracy.
Even with simple Coverage method, visible light based localization is already as good as the best WiFi localization system.
Epsilon is still in its infancy.
In this section, we briefly discuss potential issues and open questions in real usage.Applicability: To leverage the visible light, the device needs to be exposed to the light.
This may limit its applicability, e.g., it is not possible with the phone in pocket.
Thus, Epsilon targets at localization with explicit needs (user awareness), rather than passive tracking scenarios.
The light has to stay on, which might be an issue for the sake of energy efficiency.
Favourably, for most indoor environments (e.g., offices or shopping malls) where localization is desired, lights (at least a small portion) are mostly, if not always on.Device Diversity: Different LEDs and light sensors may have different emission power and receiving sensitivity, which would directly affect the distance measurement.
Fortunately, as solid-state devices, the intrinsic characteristics of LEDs and light sensors are highly stable over time [14].
Therefore, for each LED and each light sensor, one time calibration is enough.
Considering their long lifetime (say 5 years), this cost is still reasonably small.
For practical use, we may reduce calibration efforts, for example by automatically calculating the LED parameters as done for WiFi in [6].
Shadow and Reflection: Similar to the multipath issue in WiFi-based localization, using visible light for localization may suffer from shadowing and reflection of the light.
For instance, when holding a phone in front of body, body reflection, especially in white shirt, will bring noise to localization.
Sometimes, his/her body is a big obstacle, blocking the phone from lighting.
For these issues, Epsilon counts on the user's involvement.
We admit that involving the user's help is burdensome.
However, on the other side, we argue this is also an opportunity.
The light is visible which naturally offers a feedback to the user and makes the case to easily obtain the user's help to improve the localization accuracy, unlike other invisible RF signals.Modeling vs. Fingerprinting: The model-based approach in Epsilon achieves good results only when the LED and the light sensor are within each other's FoV.
This limits the application scope and we may have to fall back to coverage-based coarse-grained localization.
Fingerprinting method will not have such constraints.
However, a fingerprint is highly affected by a variety of factors such as the device attitude, body blocking of light, and etc..
In addition, similar to any fingerprinting-based system, it requires to construct a database, which is a challenging task.
Most existing localization work leverages signals such as WiFi [3,6,20,21,23], FM [5], magnetism [7].
WiFi based approaches [3,23] leveraging existing infrastructure typically achieves meter level accuracy.
Recent work [21] exploiting multi-antenna achieves sub-meter accuracy with non-trivial modifications to the hardware.
Our work is a radical deviation from these efforts.
Here, we only review the closely related work, i.e., those dealing with visible lights.Visible Light based Indoor localization: A few recent works also explore the idea of using visible light for localization [13,15,22,24], all purely based on simulation.
In [15,22], image sensors are used to locate the surrounding light sources based on the ray projection model.
In [24] distances to multiple light sources are estimated by varying the transmitting power, which leads to unstable illumination.
In [13], the authors infer TDOA from the peak-to-peak value of the interference signals from two LED lights.
In contrast, in Epsilon, we build accurate optical channel model applicable to localization with practical considerations like dimming and flickering avoidance, and working with multiple light sources.
Compared with our previous work [10], we address more practical challenges, such as enabling reliable communication and robust localization even with insufficient sources or imperfect orientation.
To our best knowledge, ByteLight [1] is the only existing commercial LED based solution for indoor localization.
However, there is no publicly available information on how their system works.Visible Light Communication: VLC aims to leverage visible lights as communication carriers.
The recent standard IEEE 802.15.7 specifies the hardware, modulation, channel coding, and the MAC protocol for various applications [16].
A number of studies discuss optical channels for VLC such as [9,11,12].
While VLC research mainly focus on wideband high-speed communication, we aim at low system complexity and robust broadcast for localization purpose.
In this paper, we present the design, implementation and evaluation of Epsilon, a visible light based localization system that exploit LED lamps.
The system has no dependency on network access and can be used immediately after proper configuring and calibrating the LED bulbs.
We have identified and overcome key technical challenges for accurate distance measurement using light, reliable location beaconing, and robust localization where the number of light sources can be excessive or insufficient.
Our evaluation in typical office environment confirmed the effectiveness of the system, which achieve sub-meter accuracy.
Our work confirms the potential of visual light for high accuracy indoor localization.
In addition, our work also reveals several insights that deserve further exploration.
We thank all the anonymous reviewers and the shepherd Nikolaos Laoutaris for the valuable constructive comments to help enhancing the quality of this paper.
