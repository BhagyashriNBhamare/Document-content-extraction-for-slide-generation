In bandwidth-sharing networks, users of various classes require service from different subsets of shared resources simultaneously.
These networks have been proposed to analyze the performance of wired and wireless networks.
For general arrival and service processes, we give sufficient conditions in order to compare sample-path wise the workload and the number of users under different policies in a linear bandwidth-sharing network.
This allows us to compare the performance of the system under various policies in terms of stability, the mean overall delay and the weighted mean number of users.
For the important family of weighted α-fair policies, we derive stability results and establish monotonicity of the weighted mean number of users with respect to the fairness parameter α and the relative weights.
In order to broaden the comparison results, we investigate a heavy-traffic regime and perform numerical experiments.
In recent years a lot of attention has been devoted to multi-class stochastic networks where the capacity allocated to the various classes depends on the number of users present in all classes.
Analyzing multi-class stochastic systems tends to be very challenging.
Metrics like the joint (marginal) distribution of the number of users of the various classes, or even the mean number of users of the various classes, can only be determined in some special cases.
To gain insights into the performance of the system, researchers have resorted to deriving qualitative properties of the stochastic processes, among them stability, comparison results and performance bounds.Stability of stochastic systems is a well-founded theory [18,5].
Recently new results have been derived for systems with state-dependent (and time-varying) capacities.
For example, in [13] the stability conditions for utility-based allocation policies in a time-varying scenario are characterized.
In [4] necessary and sufficient stability conditions for parallel-server queues with state-dependent capacities are derived.There is a wide range of literature on the ordering of random processes, see for example [24,20].
In particular, stochastic comparison is often used.
In the seminal paper [16] (see also [15]) necessary and sufficient conditions on the transition rates are given for the existence of a stochastic ordering between two Markov processes defined on ordered state spaces, starting from any two ordered initial states.
It turns out that these conditions are often too strong in a queueing context.
In particular, the conditions are not satisfied in the examples we will study in this paper.
In this paper we will consider a special case of stochastic ordering: We use a sample-path approach to compare two stochastic networks, that is for both networks we consider the same realizations of the arrival processes and service requirements (see [6,14] for more details).
A related research direction is to obtain bounds for the stochastic process of interest.
In a recent paper [3] the authors consider a network of processor sharing queues with independent Poisson arrival processes.
The capacity of the various queues is variable and depends on the number of users present in all the queues.
Stochastic bounds for the number of users present in each queue are obtained for socalled monotone policies (removing a user from any queue increases the capacity allocated to any user).
Our main interest is in stochastic processes that arise in so-called bandwidth-sharing networks introduced in [17] to model the dynamic interaction among competing elastic data flows that traverse several links in the Internet.
An important family of rate allocation policies originally introduced in [19] are the so-called weighted α-fair bandwidthsharing policies, where as a function of the parameter α one obtains popular disciplines such as maximum throughput (α → 0), Proportional Fairness (PF, α = 1) and max-min fairness (α → ∞).
It has been argued that the bandwidth sharing realized by TCP (Transmission Control Protocol) in the Internet can be well approximated by an α-fair policy with parameter α = 2 [9].
In [2] it is shown that any α-fair policy (α > 0) achieves maximum stability, assuming Poisson arrival processes and exponentially distributed flow sizes.
Obtaining closed-form expressions for the performance metrics of α-fair policies has proved to be rather difficult.
Therefore, researchers have studied the performance under certain probabilistic limiting regimes.
For example, in [7,8,10] the authors study the number of users of the various classes under a fluid and a diffusion scaling when at least one node is in heavy traffic, and investigate diffusion approximations for the queue lengths.A simple but important case of bandwidth-sharing networks is the so-called linear network.
A linear network is the canonical model to study the interaction between traffic that traverses multiple links and the cross-traffic it meets on its route.
For α = 1, the joint equilibrium distribution of the number of users in a linear network is known [17].
In [12] approximations are given for the mean number of users under general weighted α-fair policies when one or more of the nodes are in heavy traffic.In this paper we consider a linear bandwidth-sharing network with general arrival and service processes.
The capacity of the various nodes may vary in time.
The main goal of this paper is to give sufficient conditions on two policies in order to compare sample-path wise the workload and the number of users of the various classes.
We obtain weaker sufficient conditions on the transition rates than [16,15], which can be explained from the fact that we only compare the two processes starting in the same initial state, as opposed to starting from any two ordered initial states as in [16,15].
From the performance point of view, starting from the same initial state does not diminish the applicability of the results, since the steady-state behavior does not depend on the initial state.
Furthermore, our result is a pure sample-path comparison, and as a consequence it holds for arbitrary arrival processes, service time processes and rate region variations.We then consider the family of weighted α-fair policies.
From our sample-path result we obtain stability results and, under certain restrictions on the service requirements, we prove monotonicity of the weighted mean number of users with respect to the fairness parameter α and the relative weights.
To completely investigate all service requirement parameters, we consider a two-node linear network in a heavytraffic regime and fully characterize the monotonicity results by making use of a conjecture in [7,8].
The remainder of the paper is organized as follows.
In Section 2 the linear bandwidth-sharing network is introduced and in Section 3 the comparison results are stated.
Then we focus on the family of weighted α-fair policies in Section 4.
We obtain stability results and, under certain restrictions on the service requirements, prove monotonicity of the weighted mean number of users with respect to α and the relative weights.
In Section 5 we consider a heavy-traffic regime and obtain monotonicity results for the weighted mean number of users for all service requirement parameters.
We also present numerical experiments that provide further insight into the performance of the α-fair policies.
The conclusions and future research directions may be found in Section 6.
We consider a linear bandwidth-sharing network with L nodes and L + 1 classes of users, see Figure 1.
Class-i users arrive according to a renewal process with mean inter-arrival time 1/λi, and have service requirements Bi with mean 1/μi,i = 0, . . . , L.
Then ρi = λ i μ irepresents the offered work of class i per time unit.
The inter-arrival times and service requirements are mutually independent random variables.The capacity of node i at time t is equal to Ci(t).
Class-i users require service at node i only, i = 1, . . . , L, while class-0 users require service at all nodes simultaneously.
When Ci(t) = C for all i and all t, we call it a symmetric linear network.
Otherwise the model is called an asymmetric linear network with possibly time-varying capacities.
Example 2.1 (Wired and wireless networks).
As mentioned in the Introduction, linear bandwidth-sharing networks model the dynamic interaction among competing data flows that traverse several links in a wired network.In a wireless network we can think of the following simple example.
Users can be either in cell 0, cell 1 or cell 2, see Figure 2.
Users in cells 1 and 2 can be served in parallel by their own base station.
Because of interference, a user in cell 0 can only be served when exactly one base station is on and transmits the requested file to the user in cell 0.
Hence, class 0 can only be served when both classes 1 and 2 are not served, which can be modeled by a linear network consisting of two nodes.
The results for the linear network which we will obtain later in this paper can be applied to a wireless network if coordination between base stations is possible.
This has recently been proposed in for example [1,28].
For a given policy π, denote by N π i (t) the number of class-i users in the system at time t and let񮽙 N π (t) = (N π 0 (t), N π 1 (t), . . . , N π L (t)).
Define N π (t) := L X i=0 N π i (t)as the total number of users in the system at time t. Let W π i (t) denote the total residual amount of work in class i (i.e. the workload in class i) at time t.
We further define N π i , W π i and N π as random variables with the corresponding steady-state distributions (when they exist).
For a given policy π, denote by s π i (t, 񮽙 N ) the instantaneous service rate received by class i at time t when the system is in state 񮽙 N = (N0, N1, . . . , NL).
Hence the allocation given to class i can only depend on the time and on the number of users present in the system.
The allocation vector N )) has to lie in the rate region񮽙 s π (t, N ) = (s π 0 (t, 񮽙 N ), . . . , s π L (t, 񮽙R(t) = {񮽙 s ∈ R L+1 : s0 + si ≤ Ci(t), ∀i = 1, . . . , L}where Ci(t) may depend on the time t, but not on the state 񮽙 N itself.
In the remainder of the paper we suppress the dependence on t and writes π i ( 񮽙 N ) instead of s π i (t, 񮽙 N ).
Let S π i (t) := t Z u=0 s π i ( 񮽙 N π (u))dube the cumulative amount of service received by class i during the time interval [0, t].
The service discipline within a particular class, the intraclass policy, is the First Come First Served discipline (FCFS).
Remark 2.2.
It is worth observing that the FCFS assumption is not common in bandwidth-sharing networks, where the intra-class policy is typically assumed to be Processor-Sharing (PS).
However, in case the service requirements are exponentially distributed, as is also usually assumed in bandwidth-sharing networks, the stochastic behavior in fact does not depend on the intra-class policy as long as it is non-anticipating.
A policy is called nonanticipating when the discipline is not based on any knowledge of the actual realizations of the service requirements.
This implies that when the service requirements are exponentially distributed, the results we obtain (by assuming FCFS) will also be valid for non-anticipating policies like PS, the Last Come First Served discipline and the Foreground Background discipline.Remark 2.3.
When the service requirements are exponentially distributed, the arrival processes are Poisson and the capacities do not vary in time (Ci(t) = Ci), the process{N π 0 (t), N π 1 (t), . . . , N π L (t)} t≥0is a continuous-time Markov process.
The transition rates are given by:(N0, . . . , Ni, . . . , NL) → (N0, . . . , Ni + 1, . . . , NL)at rate λi and (N0, . . . , Ni, . . . , NL) → (N0, . . . , Ni − 1, . . . , NL) at rate μis π i ( 񮽙 N )1 (N i >0) .
As indicated in Remark 2.2, the transition rates are independent of the non-anticipating intraclass policy used.For any policy π we assume that Ni = 0 forces s π i (N ) = 0, i.e. no capacity is given to a class when there are no users present.
Furthermore, s π i (N ) = Ci(t) − s π 0 (N ) when Ni > 0, i = 1 . . . , L, i.e. the remaining capacity in node i is given fully to class i at time t.
This implies that no capacity is unnecessarily left unused by a policy.
However, this does not ensure that a policy gives a stable system under the necessary stability conditions.
Consider for example a symmetric linear network with unit capacities.
It is clear that the necessary stability conditions are ρ0 + ρi < 1 for all i.
In fact, for the policy that gives preemptive priority to class 0 these conditions are sufficient for stability as well.
However, the policy that gives preemptive priority to classes 1, . . . , L (note that this policy satisfies the conditions on 񮽙 s π as stated in the beginning of this paragraph) is stable if and only if ρ0 < Π L i=1 (1−ρi) which is more stringent than the necessary stability conditions.
The instability can arise here since the latter policy can leave a substantial portion of the capacity unused, regardless of how large the number of class-0 users is.Our goal in this paper is to compare the performance of the network under different policies.
First of all, we will be interested in whether a policy can achieve a stable system.
Another important performance measure we consider is the (weighted) number of users present in the system.
Because of Little's law, a policy that minimizes the total mean number of users present in the system, minimizes the mean overall sojourn time as well.
In this section we consider the behavior of the network under two different policies π and˜πand˜ and˜π for the same realizations of the arrival processes and service requirements.
The following property states conditions that will allow us to compare the two policies π and˜πand˜ and˜π.Property 3.1.
Let π and˜πand˜ and˜π be two policies such thats π 0 ( 񮽙 N π ) ≤ s ˜ π 0 ( 񮽙 N ˜ π ), when N π 0 = N ˜ π 0 and N π i ≥ N ˜ π i , i = 1, . . . , L.In particular, note that Property 3.1 is implied by the following property.
PROPERTY 3.1' Let π and˜πand˜ and˜π be two policies such thats π 0 ( 񮽙 N ) ≤ s ˜ π 0 ( 񮽙 N ), and either s π 0 ( 񮽙 N ) or s ˜ π 0 ( 񮽙 N )is non-increasing with respect to Ni for all i 񮽙 = 0.
These properties basically state that higher priority is given to class 0 under policy˜πpolicy˜ policy˜π compared to π.
In the remainder of this section we will see that under policy˜πpolicy˜ policy˜π the number of class-0 users is less than under policy π (Proposition 3.2 (iii)) and the stability conditions are less strict for policy˜πpolicy˜ policy˜π (Corollary 3.5).
These results arise from the fact that when class 0 is served, it simultaneously uses capacity in all nodes.
Hence, we can prove that giving more preference to class 0 makes better use of the available capacity and makes the workload in each node smaller, i.e.W π 0 (t) + W π i (t) ≥ W ˜ π 0 (t) + W ˜ π i (t), i = 1, . . . , L (Proposi- tion 3.2 (iv)).
The main challenge in the proof of Proposition 3.2 is that the flip side of giving higher priority to class 0 is that classes 1 and 2 will receive lower preference, and therefore contain more users.
Class 0 can then receive less service later on, so that the ultimate impact on the number of class-0 users and the workload in a node is not obvious.We first establish the sample-path comparison result for the number of class-0 users and for the workload in the system.
This result will play a key role in the remainder of the paper.Proposition 3.2.
Let π and˜πand˜ and˜π be two policies that satisfy Property 3.1 and consider the same realizations of the arrival processes and service requirements.
If at time t = 0, we have 񮽙 N π (0) = 񮽙 N ˜ π (0) = 񮽙 N (0) and at time t = 0 the k-th class-i user has the same remaining service requirement under both policies π and˜πand˜ and˜π, for all k and i, then for all t ≥ 0,(i) S π 0 (t) ≤ S ˜ π 0 (t), (ii) S π 0 (t) + S π i (t) ≤ S ˜ π 0 (t) + S ˜ π i (t), and hence(iii) N π 0 (t) ≥ N ˜ π 0 (t), W π 0 (t) ≥ W ˜ π 0 (t), (iv) W π 0 (t) + W π i (t) ≥ W ˜ π 0 (t) + W ˜ π i (t).
Proof.Denote by Bj,n the service requirement of the nth class-j user, j = 0, 1, . . . , L.
When the user was already in the system at time t = 0, Bj,n denotes the remaining service requirement at time t = 0.
Denote by Fj(s) := sup{n :n P m=1Bj,m < s} the number of class-j service completions as function of the amount of service received by class j. ThusD π j (t) = Fj(S π j (t)) represents the number of class-j service completions during the time interval [0, t].
Denote by Qj(t) the number of class-j users arriving during the time interval [0, t].
Denote by Aj(0, t) := P Q j (t) m=1 B j,N j (0)+m the amount of class-j work arriving during the time interval [0, t].
Thus, the total number of class-j users present at time t can be written asN π j (t) = Nj(0) + Qj(t) − D π j (t)(1)and the class-j workload can be written asW π j (t) = Wj(0) + Aj(0, t) − S π j (t).
Note that Nj(0), Wj(0) and the functions Fj(·), Qj(·) and Aj(0, t) are independent of the policy, and the function Fj(·) is non-decreasing.
Hence, inequality (i) implies (iii) and inequality (ii) implies inequality (iv).
It suffices to prove that inequalities (i) and (ii) hold.We will prove (i) and (ii) by contradiction.
Suppose they do not hold sample-path wise.
Let t be the first time epoch at which one of the two inequalities is violated.First assume that inequality (i) is the first one to be violated, that is S π 0 (t) = S ˜ π 0 (t) ands π 0 ( 񮽙 N π (t)) > s ˜ π 0 ( 񮽙 N ˜ π (t)) (with strict inequality), but S π 0 (t) + S π i (t) ≤ S ˜ π 0 (t) + S ˜ π i (t) for all i = 1, . . . , L. Hence from (1) we obtain N π 0 (t) = N ˜ π 0 (t) and N π i (t) ≥ N ˜ π i (t) for all i = 1, . . . , L.Together with Property 3.1 this contradicts the initial assumption.Next, assume that inequality (ii) is the first one to be violated, i.e.,S π 0 (t)+S π i (t) = S ˜ π 0 (t)+S˜π+S˜ +S˜π i (t) and s π 0 ( 񮽙 N π (t))+ s π i ( 񮽙 N π (t)) > s ˜ π 0 ( 񮽙 N ˜ π (t)) + s ˜ π i ( 񮽙 N ˜ π (t)) (with strict inequality), but S π 0 (t) ≤ S ˜ π 0 (t) and S π 0 (t) + S π j (t) ≤ S ˜ π 0 (t) + S ˜ π j (t) for all j 񮽙 = 0, i. By (1) we have N π 0 (t) ≥ N ˜ π 0 (t) and N π i (t) ≤ N ˜ π i (t).
First assume N ˜ π i (t) > 0.
Since we made the assumption that no capacity is unnecessarily left unused (si(񮽙 N ) = Ci(t)−s0( 񮽙 N ) when Ni > 0), it then follows that s π 0 ( 񮽙 N π (t))+ s π i ( 񮽙 N π (t)) ≤ Ci(t) = s ˜ π 0 ( 񮽙 N ˜ π (t)) + s ˜ π i ( 񮽙 N ˜ π (t)) which contra- dicts the initial assumption.If N ˜ π i (t) = 0, then N π i (t) = 0 as well and S π i (t) = S ˜ π i (t).
Hence S π 0 (t) = S ˜ π 0 (t) and S π j (t) ≤ S ˜ π j (t) for all j. By (1) we obtain N π 0 (t) = N ˜ π 0 (t) and N π j (t) ≥ N ˜ π j (t) for all j. By virtue of Property 3.1 this means thats π 0 ( 񮽙 N π (t)) ≤ s ˜ π 0 ( 񮽙 N ˜ π (t)).
Since N ˜ π i (t) = N π i (t) = 0, we also have that s π i ( 񮽙 N π (t)) = s ˜ π i ( 񮽙 N ˜ π (t)) = 0, and hence s π 0 ( 񮽙 N π (t))+s π i ( 񮽙 N π (t)) ≤ s ˜ π 0 ( 񮽙 N ˜ π (t)) + s ˜ π i ( 񮽙 N ˜ π (t)), which contradicts the initial assumption.Remark 3.3.
Proposition 3.2 is a sample-path result and does in fact not require any distributional or independence assumptions with respect to the inter-arrival times and service requirements.Assume for the moment Poisson arrivals, exponentially distributed service requirements and that the capacities do not vary in time, i.e. Ci(t) = Ci.
The process {N0(t), . . . , NL(t)} t≥0 is a continuous-time Markov process, see Remark 2.3.
Hence Proposition 3.2 (iii) then states in fact a sample-path wise pre-ordering on two continuous-time Markov processes { 񮽙 N π (t)} t≥0 and { 񮽙 N ˜ π (t)} t≥0 starting from the same initial state.There is a broad range of literature on the existence of orderings of stochastic processes.
An important ordering is the stochastic ordering ≤st ( [20,24]).
Note that the sample-path ordering is a special case of this.
Let X(t) and Y (t) be two continuous-time processes.
We say that {X(t)} t≥0 ≤st {Y (t)} t≥0 if and only if there exists a cou-pling (X 񮽙 (t), Y 񮽙 (t)), i.e. X(t) d = X 񮽙 (t) and Y (t) d = Y 񮽙 (t), which is order-preserving, i.e. P(X 񮽙 (t) ≤ Y 񮽙 (t), ∀t ≥ 0) = 1 (here ≤ is an ordering on the state space).
So if the processes X and Y are initially ordered, then the order is kept at all times.When X(t) and Y (t) are two continuous-time Markov processes, in [16, Theorem 5.3] and [15, Theorem 2] necessary and sufficient conditions on the transition rates are given in order for an order-preserving coupling to exist ({X(t)} t≥0 ≤st {Y (t)} t≥0 ) for any ordered initial states (X(0) ≤ Y (0)).
Here ≤ denotes a pre-order relation.
In particular, the necessary and sufficient conditions on the policies π and˜πand˜ and˜π to obtain{N π 0 (t)} t≥0 ≥st {N˜π{N˜ {N˜π 0 (t)} t≥0 ,(2)for any two ordered initial statesN π 0 (0) ≥ N ˜ π 0 (0), are s π 0 ( 񮽙 N π ) ≤ s ˜ π 0 ( 񮽙 N ˜ π ) when N π 0 = N ˜ π 0 .
(3)It can immediately be seen that Property 3.1 is a weaker condition than (3).
Interestingly, we will show that for α-fair bandwidth-sharing policies, Property 3.1 is satisfied, but (3) is not satisfied.
Note that the stochastic ordering result in (2) holds for any two initial states that are ordered, whereas in Proposition 3.2 the initial state is the same.
This explains the fact that Property 3.1 can be weaker than (3).
Since we are interested in performance metrics in steady state (stability and mean number of users), the assumption that the processes have the same initial state is not restrictive.
In addition, Proposition 3.2 is not restricted to Markov processes, hence it applies as well for generally distributed arrival processes, service requirements and time-varying rate regions.Property 3.1 and Proposition 3.2 are stated in order to compare two different policies.
However, they also allow us to evaluate the impact of removing a node from the linear network on the performance of class 0.
Corollary 3.4.
Let π be a policy in a linear network with L nodes that satisfies the following property:s π 0 (N0, N1, . . . , NL) ≤ s π 0 (N0, M1, . . . , ML−1, 0) for all Ni ≥ Mi, i = 1, . . . , L − 1.
Consider the linear network where node L is removed (and hence has L − 1 nodes) and apply the same policy π in the following way: s π 0 (N0, . . . , NL−1) := s π 0 (N0, . . . , NL−1, 0).
Then N π,L 0 (t) ≥ N π,L−1 0 (t),and for i = 1, . . . , L − 1 W π,L 0 (t) + W π,L i (t) ≥ W π,L−1 0 (t) + W π,L−1 i (t),with N π,l i (t) and W π,l i (t) the number of class-i users and the class-i workload, respectively, at time t under policy π in a linear network with l nodes.
s π 0 (N0, . . . , NL) ≤ s π 0 (N0, M1, . . . , ML−1, 0) = s π 0 (N0, M1, . . . , ML−1) = s ˜ π 0 (N0, M1, . . . , ML−1, x)for all x and all Ni ≥ Mi, i = 1, . . . , L − 1.
This implies that policies π and˜πand˜ and˜π satisfy Property 3.1 and from Proposition 3.2 the result follows.In the next two sections, Proposition 3.2 will be used to readily derive results for the stability and the weighted mean number of users present in a linear bandwidth-sharing network.
Recall that the stability conditions depend on the policy being used.
We note that the sample-path comparison in Proposition 3.2 does not require the system to be stable.
In particular, Proposition 3.2 (iv) implies the following result.Corollary 3.5.
Assume policies π and˜πand˜ and˜π satisfy Property 3.1.
If the system is stable under policy π, then it is stable under policy˜πpolicy˜ policy˜π as well, in the sense that the system is empty under policy˜πpolicy˜ policy˜π whenever it is empty under policy π.In particular, if the empty state is positive recurrent under policy π in the case of Poisson arrivals, then it is positive recurrent under policy˜πpolicy˜ policy˜π as well.Proof.
The first statement follows by noting that ifP L i=0 W π i (t) = 0, then we obtain from Proposition 3.2 (iv) that P L i=0 W ˜ π i (t) = 0.
The second assertion is a direct implication of the first one.
In case the service requirements are exponentially distributed and P L i=1 ciμi ≤ c0μ0, the sample-path comparison established in Proposition 3.2 will allow us to show that giving more priority to class 0 decreases the weighted mean number of users.
Proposition 3.6.
Assume the service requirements are exponentially distributed.
Let π and˜πand˜ and˜π be two policies that satisfy Property 3.1 and assume policy π gives a stable system.
IfP L i=1 ciμi ≤ c0μ0, then L X i=0 ciE(N π i (t)) ≥ L X i=0 ciE(N ˜ π i (t)), ∀ t ≥ 0.
(4)Proof.
From Proposition 3.2 (iii) we have that N π 0 (t) ≥ N ˜ π 0 (t) for all t ≥ 0.
Taking expectations we getE(N π 0 (t)) ≥ E(N ˜ π 0 (t)).
(5)From Proposition 3.2 (iv) we have thatW π 0 (t) + W π i (t) ≥ W ˜ π 0 (t) + W ˜ π i (t) for all t ≥ 0.
Taking expectation we get E(W π 0 (t)) + E(W π i (t)) ≥ E(W ˜ π 0 (t)) + E(W ˜ π i (t)) for all i = 1, . . . , L.Since the policy is non-anticipating and the service requirements are exponentially distributed, and thus memoryless, we obtain E(W π i (t)) = 1 μ i E(N π i (t)) and hence for all i = 1, . . . , L,1 μ0 E(N π 0 (t)) + 1 μi E(N π i (t)) ≥ 1 μ0 E(N ˜ π 0 (t)) + 1 μi E(N ˜ π i (t)).
(6)Inequalities (5) and (6) together withP L i=1 ciμi ≤ c0μ0 give L X i=0 ciE(N π i (t)) = c0μ0 − P L i=1 ciμi μ0 E(N π 0 (t)) + L X i=1 ciμi " 1 μ0 E(N π 0 (t)) + 1 μi E(N π i (t)) « ≥ c0μ0 − P L i=1 ciμi μ0 E(N ˜ π 0 (t)) + L X i=1 ciμi " 1 μ0 E(N ˜ π 0 (t)) + 1 μi E(N ˜ π i (t)) « = L X i=0 ciE(N ˜ π i (t)).
Note that by Remark 2.2, Proposition 3.6 holds for any nonanticipating intra-class policy, so not only for FCFS.Remark 3.7.
One natural choice for the weights ci in (4) could be to relate them to the number of links each class uses.
For example, take c0 = L and ci = 1, i = 1, . . . , L.
In this case the result of Proposition 3.6 will be valid under the intuitively appealing condition 1L P L i=1μi ≤ μ0, i.e. the departure rate of class 0 is larger than or equal to the average departure rate for classes 1, . . . , L.Remark 3.8.
We only obtain a comparison result in terms of the mean number of users, while we start from a samplepath comparison as stated in Proposition 3.2.
The derivation of stochastic ordering results remains as a challenging topic for further research.Assume 񮽙 N π (t) and 񮽙 N ˜ π (t) are two Markov processes.
The necessary and sufficient conditions in order to obtain N π (t) ≥st N ˜ π (t) for any ordered initial statesN π (0) ≥ N ˜ π (0), are P L i=0 μis π i ( 񮽙 N π ) ≤ P L i=0 μis˜πμis˜ μis˜π i ( 񮽙 N ˜ π ) for all stateswith N π = N ˜ π , [15,16].
(Recall that we denote by N = P L i=0 Ni the total number of users.)
In a queueing context this condition is rather strong.
For example, for the linear network we consider in this paper, we need for states with 񮽙 N π = (0, 1, . . . , 1) and񮽙 N ˜ π = (L, 0, . . . , 0) that P L i=1μi ≤ μ0, but for states with 񮽙 N π = (1, 0, . . . , 0) and 񮽙 N ˜ π = (0, . . . , 0, 1, 0, . . . , 0) we need μ0 ≤ μi, i = 1, . . . , L. Hence, we see that there does not exist any combination of the variables μ0, . . . , μL, for which these conditions are satisfied, and a stochastic ordering relation on the total number of users as in the framework of [15,16] does not hold.A natural objective in queueing networks is to minimize the total/weighted number of users in the system.
Classical results for a single-server system indicate that giving preference to "small" users is beneficial in terms of the total/weighted number of users present in the system [23,25,21,22].
For exponentially distributed service requirements, the cμ-rule, i.e. giving priority to the class with the maximum instantaneous weighted departure rate ciμi, minimizes the weighted mean number of users among all nonanticipating policies [21].
The problem of how to allocate the capacity of the nodes among the various users in a linear network is more complex.
Besides trying to maximize the weighted departure rate, we must take into account that giving more preference to class 0 makes better use of the available capacity.When P L i=1 ciμi > c0μ0, it can be the case that the maximum total instantaneous weighted departure rate is obtained when class 0 is not served.
However, this does not necessarily make full use of the available resources.
Some care has to be taken in allocating the available capacity.
More information on the structure of the optimal policy for this case can be found in [27].
WhenP L i=1 ciμi ≤ c0μ0, there is no conflict between these two objectives.
The maximum total instantaneous weighted departure rate is obtained when class 0 is served at its maximum possible rate, i.e. mini Ci(t), and the other classes obtain what is left.
At the same time, this makes maximum use of the available capacity.
Intuitively it is clear that the policy that gives preference to class 0 minimizes the weighted mean number of users present in the system.
Using Proposition 3.6 it can be proved that this is indeed the case.
Corollary 3.9.
Consider an asymmetric linear network with time-varying capacities.
Assume the service requirements are exponentially distributed.
Let policy π * be the policy that serves class 0 at maximum rate, i.e.s π * 0 ( 񮽙 N ) = mini Ci(t) if N0 > 0 and s π * 0 ( 񮽙 N ) = 0 otherwise.
Classes 1, . . . , L obtain what is left, i.e. s π * i ( 񮽙 N ) = Ci(t) − s π * 0 ( 񮽙 N ) if Ni > 0 and s π * i ( 񮽙 N ) = 0 otherwise.
If P L i=1ciμi ≤ c0μ0, then policy π * minimizes the weighted mean number of users P L i=0 ciE(Ni(t)), for all t ≥ 0, among all non-anticipating policies.Proof.
Note that s π * 0 ( 񮽙 N ) is constant with respect to Ni, i 񮽙 = 0.
In addition, s π * 0 ( 񮽙 N ) ≥ s π 0 ( 񮽙 N ) for any policy π.
Hence, Property 3.1' is satisfied and from Proposition 3.6 we obtainP L i=0 ciE(N π i (t)) ≥ P L i=0 ciE(N π * i (t)) for all t ≥ 0 and any policy π.In [27] it was proved that for a symmetric linear network, policy π * , as defined in Corollary 3.9, is in fact stochastically optimal in terms of the total number of users.
That is, for every t ≥ 0 and for any non-anticipating policy π we haveN π (t) ≥st N π * (t) given that 񮽙 N π (0) = 񮽙 N π * (0).
Weighted α-fair policies are an important family of policies that have received a lot of attention in recent years.
The weighted-α fair allocation is the solution to the following optimization problem:max 񮽙 s∈R(t) P L i=0 wiNi " s i N i " 1−α /(1 − α) if α 񮽙 = 1 max 񮽙 s∈R(t) P L i=0wiNi log si if α = 1.
Denote the weighted α-fair discipline with weights w = (w0, w1, . . . , wL) and parameter α by π α,w and the corresponding allocation vector by 񮽙 s (α,w) ( 񮽙 N ).
The allocated capacity to class i is shared equally among all class-i users, hence the intra-class policy is PS.
Recall that in the model description we assumed that the intra-class policy is FCFS.
Throughout this section we assume exponentially distributed service requirement.
Thus, the results we obtain will also be valid if the intra-class policy is PS, see Remark 2.2.
In order to compare two α-fair policies we only need to check whether Property 3.1' holds.
In [2] it was shown that for a symmetric linear network with unit capacity for all nodes the weighted α-fair allocation is given bys (α,w) 0 ( 񮽙 N ) = (w0N α 0 ) 1/α (w0N α 0 ) 1/α + ( P L i=1 wiN α i ) 1/α(8)and s(α,w) i ( 񮽙 N ) = 1 − s (α,w) 0( 񮽙 N ) for all i with Ni > 0.
Using (8), it can be checked that Property 3.1' is satisfied for a symmetric linear network when comparing policies π β,w and π γ, ˜ w with β ≤ γ and w 0w i ≤ ˜ w 0 ˜ w i , i = 1, .
.
.
, L (see also [12, Proposition 6.1]).
For an asymmetric network we have no expression for the weighted α-fair allocation available.
However, the optimization problem (7) allows us to prove that Property 3.1' is satisfied then as well.
The proof may be found in the technical report [26].
Lemma 4.1.
The following results hold in an asymmetric linear network:(i) s (α,w) 0 ( 񮽙 N ) is non-increasing in Ni, i = 1, ..., L. (ii) If β ≤ γ, then s (β,w) 0 ( 񮽙 N ) ≤ s (γ,w) 0 ( 񮽙 N ) for all 񮽙 N .
(iii) If w 0 w i ≤ ˜ w 0 ˜ w i , i = 1, . . . , L, then s (α,w) 0 ( 񮽙 N ) ≤ s (α, ˜ w) 0 ( 񮽙 N )for all 񮽙 N .
Since Property 3.1' holds for weighted α-fair policies, our framework allows us to gain insights into the performance of such policies in linear networks, see Sections 4.1 and 4.2 below.Note that the stochastic comparison results in [15, Theo- rem 2] and [16, Theorem 5.3] are not applicable here.
As we already saw in Remark 3.8, there is no stochastic ordering possible for any ordered initial states on the total number of users present in the system.
Also, an ordering on the number of class-0 users for any ordered initial states is not possible, since equation (3) α-fair policies.
From (8) we see that if M tends to ∞ then s ˜ π 0 ( 񮽙 N ˜ π ) tends to 0.
Hence (3) cannot hold for any pair of α-fair policies.In [3] the authors obtain stochastic bounds for the number of users present in any queue for policies that satisfy the monotonicity property (removing a user from any queue, increases the capacity allocated to any user).
This property fails to hold for a linear network under α-fair policies.
For example, removing a class-1 user implies that class 1 gets less capacity and class 0 gets more.
This however implies that classes i = 2, . . . , L obtain less capacity as well and hence a class-i user gets less capacity, i = 2, . . . , L.
The only requirement in Property 3.1' is that removing a class-i user, i 񮽙 = 0, increases the capacity allocated to the class-0 users.
As shown in Lemma 4.1, this holds under natural conditions on the parameters of weighted α-fair policies.Remark 4.2.
Note that from Lemma 4.1 and Corollary 3.4 we obtain that under a weighted α-fair policy, the number of class-0 users in a linear network with L nodes is larger than in a linear network with L − 1 nodes.
In [2] it is proved that for Poisson arrivals and exponentially distributed service requirements, any weighted α-fair allocation in a bandwidth-sharing network with fixed capacity, gives a stable system, in the sense that the queue length process is positive-recurrent, under the necessary stability conditions that the load in each node is smaller than the available capacity.
For example, in the case of a linear network the necessary stability conditions are ρ0 + ρi < Ci, i = 1, . . . , L. Corollary 3.5 and Lemma 4.1 allow us to derive stability results for a linear network with time-varying capacities.
, i = 1, . . . , L. Let the service requirements be exponentially distributed.
If policy π β,w gives a stable system, then policy π γ, ˜ w gives a stable system as well.Proof.
Note that α-fair policies have PS as an intra-class policy.
However, since we assume that the service requirements are exponentially distributed, the stochastic behavior of the network does not depend on which non-anticipating intra-class policy is being used.
Therefore, we can take FCFS as intra-class policy.
From Lemma 4.1 we obtain that Property 3.1 is satisfied, hence the result in Corollary 3.5 applies.In [13] the authors consider the stability conditions for systems with a time-varying general rate region under an α-fair policy with unit weights.
They assume that the rate region can be in a finite number of states according to a stationary and ergodic process.
In addition, in every state the rate region is convex.
The authors characterize the stability conditions and show that the stability region is non-increasing in the value of α.
Interestingly, Corollary 4.3 indicates that the stability region is in fact also non-decreasing in the value of α in the setting of a linear network.
We obtain the following result.Corollary 4.4.
Assume Poisson arrivals and exponentially distributed service requirements.
Consider an asymmetric linear network and assume the set of all the possible capacity vectors (C1(t), . . . , CL(t)) can be in a finite number of states and evolves as a stationary and ergodic process.
Let Ci be the average of the process Ci(t).
Then the policy π α,w with wi ≤ w0, i = 1, . . . , L gives a stable system whenever possible.
The stability conditions are given by ρ0 + ρi < Ci, i = 1, . . . , L.Proof.
In [13] it is shown that for α-fair policies with unit weights (wj = 1, j = 0, . . . , L) the necessary stability conditions are given by ρ0 + ρi < Ci, i = 1, . . . , L. Moreover, it is established that these conditions are sufficient as well for the policy π α, 񮽙 1 when α ↓ 0.
On the other hand, Corollary 4.3 states that the stability conditions become less strict when α increases.
This proves that π α, 񮽙 1 is stable under the necessary stability conditions.
From Corollary 4.3 we can then conclude that the same holds for policy π α,w with wi ≤ w0, i = 1, . . . , L.
We are now ready to derive a monotonicity result for the mean number of users for weighted α-fair policies in a time-varying asymmetric linear network.
When P L i=1 ciμi ≤ c0μ0, the instantaneous weighted departure rate of class 0 is relatively large, hence, it will be attractive to give preference to class-0 users, either by increasing the relative weight given to class 0, w0/wi, or by increasing the parameter α, see Lemma 4.1.
At the same time this makes better use of the available capacity of the nodes, see Proposition 3.2 (iv).
In the next corollary we prove that the weighted mean number of users indeed decreases when more preference is given to class 0.
More precisely, the weighted mean number of users is non-increasing in α and in w 0w i , i = 1, . . . , L.Corollary 4.5.
Assume exponentially distributed service requirements withP L i=1 ciμi ≤ c0μ0.
If β ≤ γ and w 0 w i ≤ ˜ w 0 ˜ w i , i = 1, . . . , L, then L X i=0 ciE(N π β,w i (t)) ≥ L X i=0 ciE(N π γ, ˜ w i (t)), ∀ t ≥ 0.
Proof.
From Lemma 4.1 we obtain that π β,w and π γ, ˜ w satisfy Property 3.1'.
The result then follows from Proposition 3.6.
P L i=1 ciμi > c0μ0, a trade-off arises between the above-described effects.
In the next section we will investigate this further.
In the previous section, monotonicity results of the weighted mean number of users were derived for the family of α-fair policies and exponentially distributed service requirements with P L i=1 ciμi ≤ c0μ0.
In this section we will explore the case P L i=1 ciμi > c0μ0 for a two-node linear network (L = 2).
When c1μ1+c2μ2 > c0μ0, it is beneficial to give more preference to classes 1 and 2 (and hence less preference to class 0) since that will maximize the total instantaneous weighted departure rate.
From Lemma 4.1 we see that this can be done by choosing α small.
However, at the same time this uses the available capacity in each node less efficiently, as proved in Proposition 3.2 (iv).
Thus a trade-off arises between the two effects, which makes the analysis difficult.
In Section 5.1 we will consider a heavy-traffic regime and establish (over the whole range of μ0) monotonicity results in α for the weighted mean scaled number of users.
In Section 5.2 we perform numerical experiments for a normally loaded system and observe in particular that when μ1 + μ2 > μ0, the total mean number of users is not necessarily monotone in α when α < 1.
In this section we study the monotonicity in a heavy-traffic scenario for a two-node linear network with fixed capacities C1 and C2.
Throughout this section we consider α-fair policies with unit weights wj = 1, j = 0, . . . , L.We consider the setting of [7,8,10], where a general bandwidth-sharing network under weighted α-fair allocations is considered with Poisson arrivals and exponentially distributed service requirements.
Below we briefly state the results specialized to the two-node linear network under α-fair policies with unit weights, see [7,8] for full details.Assume a heavy-traffic setting ρi + ρ0 = Ci for i = 1, 2.
Define the diffusion scaled processes as follows:ˆ n k,(α) i (t) := N π α,񮽙 1 i (kt) √ k , i = 0, 1, 2, and ˆ v k,(α) i (t) := N π α,񮽙 1 0 (kt)/μ0 + N π α,񮽙 1 i (kt)/μi √ k = ˆ n k,(α) 0 (t)/μ0 + ˆ n k,(α) i (t)/μi, i = 1, 2.
Herê v k,(α) i(t) can be seen as the total workload in node i under the diffusion scaling.
In [8, Conjecture 5.1] it is conjectured that for an arbitrary bandwidth-sharing network, the diffusion scaled workload processˆ񮽙processˆ processˆ񮽙 v k,(α) (t) converges in distribution as k → ∞ to 񮽙ˆv񮽙ˆ 񮽙ˆv (α) (t), where 񮽙ˆv񮽙ˆ 񮽙ˆv (α) (t) is a semimartingale reflecting Brownian motion (with a covariance matrix independent of α) living in a workload cone.
For α equal to 1 this conjecture is proved in [7,8] for an arbitrary bandwidth-sharing network.
In addition, it is mentioned that for the case of a two-node linear network, this result can be extended to α 񮽙 = 1.
The workload cone for a twonode linear network under an α-fair policy with unit weights is given by{񮽙 v : vi = ρ0 μ0 (q1 + q2) 1 α + ρi μi q 1 α i , q1, q2 ≥ 0, i = 1, 2} = {񮽙 v : v1 ≥ 0, v1 ρ0/μ0 (C1 − ρ0)/μ1 + ρ0/μ0 ≤ v2, v2 ≤ v1 (C2 − ρ0)/μ2 + ρ0/μ0 ρ0/μ0 },which is independent of the parameter α.
Hence, the process 񮽙ˆv񮽙ˆ 񮽙ˆv (α) (t) is independent of α as well.
The diffusion scaled number of users, 񮽙ˆn񮽙ˆ 񮽙ˆn k,(α) (t), converges in distribution as k → ∞ to some process 񮽙ˆn񮽙ˆ 񮽙ˆn (α) (t) which does depend on α (this process is specified in [7]).
Since the process of the total workload in a node does not depend on α, we can derive monotonicity results for the weighted mean number of users present in the system over the whole range of the parameter μ0.
We can express the weighted number of users in the system as follows:L X i=0 cî n (α) i (t) = c0μ0 − P 2 i=1 ciμi μ0ˆn μ0ˆ μ0ˆn (α) 0 (t) + 2 X i=1 ciμi · ( 1 μ0ˆn μ0ˆ μ0ˆn (α) 0 (t) + 1 μîμî n (α) i (t)) d = c0μ0 − P 2 i=1 ciμi μ0ˆn μ0ˆ μ0ˆn (α) 0 (t) + 2 X i=1 ciμiˆvciμiˆv (α) i (t).
(9)From Proposition 3.2 we know that N π α 0 (t) is decreasing in α, and hencê n (α) 0 (t) is decreasing in α as well.
Together with the fact thatˆvthatˆ thatˆv (α) i (t) is independent of α and by taking expectations in (9), we have that if c1μ1 + c2μ2 ≤ c0μ0 or c1μ1 +c2μ2 ≥ c0μ0, then E(P 2 i=0 cî n (α) i (t)) is non-increasing or non-decreasing in α respectively.
In fact, when in addition we use the characterization of 񮽙ˆn񮽙ˆ 񮽙ˆn (α) (t), we are able to derive a stronger monotonicity result.
The proof may be found in the technical report [26].
Proposition 5.1.
Assume ρi + ρ0 = Ci, i = 1, 2.
• If c1μ1 + c2μ2 < c0μ0, then E( P 2 i=0ˆni=0ˆ i=0ˆn (α) i (t)) is strictly decreasing in α.
• If c1μ1+c2μ2 = c0μ0, then E(P 2 i=0ˆni=0ˆ i=0ˆn (α) i (t)) is constant in α.
• If c1μ1 + c2μ2 > c0μ0, then E( P 2 i=0ˆni=0ˆ i=0ˆn (α) i (t)) is strictly increasing in α.
In this section we present numerical experiments to provide further insight into the performance of α-fair policies.
We simulate a two-node linear network where both nodes have unit capacity.
We assume Poisson arrivals and exponentially distributed service requirements and fix μ1 = 1, μ2 = 0.5, ρ1 = ρ2 and wj = cj = 1, j = 0, 1, 2.
In Figures 3 a) and b) and Figure 4 a) we let α vary on the horizontal axis and plot the corresponding total mean number of users for various values of μ0.
As expected from Corollary 4.5, we observe that for μ0 ≥ μ1 + μ2 = 1.5 the total mean number of users is decreasing with respect to the value of α.
When μ0 < μ1 + μ2 = 1.5, we observe that the total mean number of users is monotone (either decreasing or increasing) in α as well in the range α ∈ [1, ∞).
However, when α ∈ (0, 1) and μ0 < μ1 + μ2 = 1.5, it is possible that the total mean number of users is not monotone in α.
This fact may be explained as follows.
Since μ0 < μ1+μ2 = 1.5, it is attractive to give more preference to classes 1 and 2 when they are both present (hence less preference to class 0).
This corresponds to a small value for α.
However, an α-fair policy with a small α uses the available capacity less efficiently, see Proposition 3.2 (iv) and Lemma 4.1 (ii).
These two opposite effects might cause that the total mean number of users is not monotone in α.
Note that for the heavy-traffic regime as considered in Section 5.1, the workload in a node is independent of the parameter α.
Hence, there was no trade-off and we were able to prove the monotonicity result for μ0 < μ1 + μ2 as well.In Figure 4 b) we let μ0 vary on the horizontal axis and plot the corresponding total mean number of users for various values of α.
We observe that, with exception of a few points, the total mean number of users is increasing in μ0 when α < 1 and decreasing in μ0 when α > 1, respectively.
Intuitively, the monotonicity can be explained as follows.
Note that if α = 1, the policy reduces to PF.
For PF with unit weights, the mean total number of users is exactly known ( [17]) and equals E(N π 1,񮽙 1 ) = ρ11 − ρ0 − ρ1 + ρ2 1 − ρ0 − ρ2 + ρ0 1 − ρ0 " 1 + ρ1 1 − ρ0 − ρ1 + ρ2 1 − ρ0 − ρ2 " .
This is independent of the parameters μ0, μ1 and μ2 for given values of ρ0, ρ1 and ρ2.
When α > 1, we observe from Lemma 4.1 (ii) that class 0 is treated preferentially over classes 1 and 2 (compared to PF).
Under an α-fair policy that gives preference to class 0, it is likely that the total mean number of users decreases when the class-0 users become smaller, i.e. when μ0 increases (while μ1, μ2, ρ0, ρ1 and ρ2 are kept fixed).
Similarly, when α < 1, classes 1 and 2 are treated preferentially over class 0 (compared to PF).
When μ0 becomes larger (while μ1, μ2, ρ0, ρ1 and ρ2 are kept fixed), class-1 and 2 users become relatively larger.
Under an α-fair policy that gives preference to classes 1 and 2, it is likely that the total mean number of users increases when μ0 increases.
In this paper we studied linear bandwidth-sharing networks and obtained comparison results for the performance under two different policies in terms of both stability and the weighted mean number of users.
The results were obtained by using a natural coupling, namely by choosing the same realization of inter-arrival times and service requirements for both processes.
Sample-path comparisons were obtained for the workload and the number of users in certain classes.We proved monotonicity results for the weighted mean number of users under α-fair policies when c0μ0 ≥ P L i=1 ciμi.
In the numerical section, we demonstrated additional monotonicity properties.
For instance we have strong evidence to believe that the total mean number of users in the system is monotone in α ∈ [1, ∞) when the other parameters are kept fixed.
Another interesting observation from the numerical section is that the total mean number of users is monotone in μ0 for given load ρ0, when the other parameters are kept fixed, see Figure 4 b).
Similar monotonicity results have been discussed for a single-server queue in [3,11], but to the best of our knowledge there does not exist any proof.
There is no hope that this monotonicity property can be proved using sample-path arguments, since this requires the same realizations for the service requirements.
When we compare the two stochastic processes for different values of μ0, this can no longer be done.In future work, it might be interesting to consider different types of networks, like a star or a grid network.
Also a multi-class single-server queue is worth studying.
In the case of two classes, the single-server system is a linear network with one node (L = 1).
For this case, the results developed in this paper can be used to derive that the weighted mean number of users is monotone with respect to the ratio of the weights for both Discriminatory Processor Sharing (DPS) and Generalized Processor Sharing (GPS).
In [26] we extend our sample-path approach to a single-server system with more than two classes.
The authors are grateful to Matthieu Jonckheere (Eindhoven University of Technology, The Netherlands) for helpful discussions on stochastic comparisons.
