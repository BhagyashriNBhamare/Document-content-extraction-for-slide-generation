The variability in performance and power consumption is slated to grow further with continued scaling of process technologies.
While this variability has been studied and modeled before, there is lack of empirical data on its extent, as well as the factors affecting it, especially for modern general purpose microprocessors.
Using detailed power measurements we show that the part to part variability for modern processors utilizing the Nehalem microarchitecture is indeed significant.
We chose six Core i5-540M laptop processors marketed in the same frequency bins-thus presumed to be identical-and characterized their power consumption for a variety of representative single-threaded and multi-threaded application workloads.
Our data shows processor power variation ranging from 7%-17% across different applications and configuration options such as Hyper-Threading and Turbo Boost.
We present our hypotheses on the underlying causes of this observed power variation and discuss its potential implications.
Variability in microelectronic manufacturing leads to variation in the threshold voltages of transistors in a chip, which in turn affects the power consumption and the maximum operating frequency of the resulting chips.
Variability in manufacturing stems not only from the physical processes involved but also secondary factors such as processing temperature, wafer properties, wafer polishing and wafer placement [4].
Variability in microelectronics continues to grow [8].
Process variation has already affected several aspects of processor design, manufacture, testing and also their use.
Transistor models, for example, have to now consider the variations caused by different effects in the underlying device models [5,16].
Researchers and circuit designers have developed test frameworks to measure and characterize the effects of process variation, as well as proposed techniques to reduce the effects of variability [3,7,19].
While these techniques are geared towards reducing the effects of variation, there is little empirical information -especially that is publicly available -about their effectiveness in reducing power variability in modern microprocessors.We make the following contributions in this paper.
First, we present fine-grained power measurements for six instances of a modern Intel Nehalem based Core i5-540M microprocessor, across a wide variety of modern application workloads.
We show that the variability across parts is indeed significant -ranging from 7% to 17% -and is dependent on application characteristics as well as processor configuration options such as HyperThreading and Turbo Boost.
Second, we present our hypotheses for the causes of this underlying variation.
Nassif [14] provides a general overview of the trends in process variation and also identifies reasons why characterization is key for advancement of processor design.
Several studies have performed measurements on custom test chips [1,15,21], while system level characterization of variability has also been done in a few cases [20].
Wanner et al. [20] characterize the power variability across multiple ARM Cortex M3 based microcontrollers, reporting 5x variation in sleep power and <10% variation in active power, which can be leveraged to adaptively duty-cycle sensor nodes.
In our prior work [13], we have identified limitations of power models due to the variability in the processor and memory components.
We proposed finer grained instrumentation in platforms for online characterization of power consumption.Since the focus of this paper is on commercially available Intel processors, we differentiate from the prior work which has also studied similar processors.
Charles et al. [6] investigate the effectiveness of Turbo Boost on numerous SPEC2006 benchmarks running on a Core i7 Nehalem processor by reporting the speedup obtained due to Turbo Boost for both CPU intensive as well as memory intensive benchmarks.
There was, however, no measurement study of the power consumption of the processor.
Le Seur et al. [11] provide a comparison study between executing applications at a lower frequency state but for a longer time period (slowdown) as opposed to a higher frequency state and transitioning to sleep sooner (shutdown).
They also study the performance gains obtained in different P-states (frequency of operation) as well as in Turbo Boost, and compare the power consumption of the processor with different levels of C-states (sleep modes) enabled.
The authors report total system power, and use it to estimate the processor power.In contrast to prior work, this paper examines the part to part power variability in modern laptop class microprocessors and the factors affecting it.
To the best of our knowledge, this is the first attempt at such a detailed variability characterization.
In this section we describe our overall measurement setup and methodology.
Isolating processor power from power consumed by the entire platform is a challenging problem.
In the presence of variations, this is even more challenging and must rise above any measurement errors.Our measurements are based on six identical dualcore Intel Core i5-540M parts that feature both HyperThreading and Turbo Boost technologies.
The processor utilizes the Nehalem architecture (32nm), supports six sleep states (C-states) and ten frequencies (P-states) ranging from 1.33Ghz to 2.53Ghz and has maximum thermal design power (TDP) of 35W.
Our test setup comprises of two identical laptop-class development platforms, called Calpella, from Intel Labs which are highly instrumented with over fifty current sense resistors to isolate subsystem power.
To isolate the CPU power we combine the measurements from three independent supply lines feeding different parts of the processor.
As shown in Figure 1, we collect power measurements and initiate experiments from separate 'Measurement' and 'Harness' machines respectively so as to reduce any experimental errors.
We acquire the voltage and current measurements using a high precision USB 6218 NI-DAQ at 250kSA/s multiplexed across different channels.Our test harness uses Linux userspace CPU governor to control the frequency of the target processor and uses Linux cset to set the core affinity to run our single core experiments on specific cores.
For our Core i5-540M process we use four out of a total ten available frequencies -1.2Ghz (lowest),1.73Ghz, 2.13Ghz and 2.63Ghz (highest) -to reduce experimentation time, with [17] and Parsec [2] benchmarks for our characterization.
We have taken special care to ensure that the variation in values observed does not manifest due to measurement errors.
For example, when we switch processors it is difficult to ensure uniform application of thermal paste on the processor package.
We account for any effects due to differences in thermal dissipation by re-running the experiments for every processor after removing and plugging it back in, a procedure we call processor swap.
Furthermore, despite using multiple CPU sets it is possible that OS scheduling decisions or interaction with other system processes may lead to variation, and hence we performed a system reboot and repeated the experimental runs for each processor.
These additional experimental runs for processor swap and reboots are included in the results and thus are part of the standard deviation.
Finally, to account for any effects due to the platform itself, we performed the experiments on identical Capella platform.
We observed that the results obtained from the two platforms are consistent, with each processor giving very similar power values for each of the benchmarks.
For the purposes of our experiments, we consider the percentage variation for a benchmark as the largest difference between the mean power consumption of each processor execution of that benchmark.
We analyze variation across both single threaded benchmarks as well as more complex multi-threaded workloads.
Turbo Off, C States On: We start by characterizing the processor power variation for the simplest configuration by disabling Hyper-Threading and Turbo Boost modes in the BIOS, while still enabling all sleep states (C-states).
Table 1: P-values for benchmarks with non-zero standard deviation in Figure 2.
We run benchmarks on one core at a time using cset and utilize the userspace governor to fix the operating frequency to 2.53Ghz (highest).
We ran nineteen SPEC CPU 2006 benchmarks on our six test processors.
Figure 2 plots the mean power consumption of each processor for the different benchmarks.
We observe that for the benchmarks with high variations (bzip2, povray, soplex) the standard deviation across runs is also high, and thus, the actual process variation may be lower than the measurements indicate.
Table 1 shows the p-values of the benchmarks which have non-zero standard deviation in Figure 2.
The p-values are calculated by comparing the power measurements for each processor against the average power measurement of all six processors for each benchmark.
We can see that p-values for all benchmarks except bzip2 are low, indicating that the variation we observe is independent of any measurement errors.
Furthermore, we ensured that our observations are indeed caused by process variation since processors perform consistently across benchmarks -e.g. processors P2, P5 and P6 have relatively high power consumption and P3 has a lower than average power consumption.
Figure 3 shows the change in power variation for all the benchmarks in different processor P-states.
Each Variation with Frequency for SPEC line represents a single benchmark with the maximum variation across all the processors plotted for each frequency(P-state).
We observe that all of the benchmarks show a similar trend of increased power variation with increase in frequency.
At 2.53Ghz, the variation is maximum -ranging from 12% to 20% depending on the particular benchmark.
In higher P-states, the supply voltage also increases, which in turn causes the leakage power to grow exponentially while the dynamic power increases quadratically.
It has been shown that leakage power is a more dominant factor than active power consumption as a cause for higher power variabillity [20].
We speculate that the increase in power variation at higher frequencies, and hence, higher voltages is because of this disproportional increase in leakage power.
We hypothesize that the non-intuitive results we observe is because in Turbo Boost mode the processor aggressively switches off other cores to increase the voltage and frequency of a single core in order to maintain the thermal budget of the chip.
As more circuits have been disabled, the leakage power dissipated by these circuits has been eliminated.
Therefore, as the leakage component of power consumption has reduced, the power variation has decreased as well.
To test our hypothesis, we disable sleep states (C-states) in the next set of measurements which should increase the parts of the chip that remain powered on, leading to a significant increase in the leakage power consumed.
The higher leakage power will in turn lead to an increase in power variation.C states Off: In this set of experiments, we keep the settings of the Turbo Boost mode On/Off experiments, except disabling all processor C-states.
As expected, the power consumption increases, with the increment varying from 1% to 17% depending on the benchmark and the processor.
Figure 4 plots the power variation across benchmarks with four CPU configurations -Turbo Boost on/off, C-states on/off.
We observe that there is a noticeable increase in power varition when C-states are disabled when Turbo Boost is On, supporting the hypothesis that the variation is mainly caused due to the leakage power component of the total power consumption.
However, when Turbo Boost is Off, there are a few benchmarks which show exception to the rule.
present power variability results for a suite of twelve parallel benchmarks from the PARSEC suite which are representative of modern multi-threaded workloads.
Figure 5 shows the power variation for the PARSEC suite for three CPU configurations as mentioned below.
Turbo Boost On, Hyper-Threading On: We start with both Turbo Boost (TB) and Hyper-Threading (HT) enabled, which provides a total of four cores and is the highest performance configuration.
Even with thread scheduling uncertainties, the trends seen in power values are consistent with those of the SPEC CPU benchmarks.
We observe an average variation of about 10% between the six tested processors across different benchmarks.
Turbo Boost On, Hyper-Threading Off: We next disable HT and measure power for PARSEC benchmarks.
Surprisingly, the power variation increases with HT disabled as seen in Figure 5.
We believe this is because of the drop in frequency of operation due to HT; however this hypothesis remains to be validated by measuring the processor frequencies during benchmark runs.Turbo Boost Off, Hyper-Threading Off: With Turbo boost mode disabled, we again observe the expected decrease in power.
Power variation increases to 14% -17%, consistent with the results we see with the serial benchmark experiments.
Figure 5 summarizes the variation seen from the three sets of experiments.
We have measured processor power variation of 7-17% depending on configuration and application between identical processors at the same frequency of operation.
Moreover, the variation we have observed is likely to get worse with future technology processors [8].
Based on our measurements on laptop processors, it is likely that such power variability will exist for server processors using the same process technologies.
If that is the case, variation aware job scheduling, especially in multi-socket servers could lead to improvements in energy efficiency.
For battery powered devices such as lap-tops, application adaptations that account for CPU power variation could lead to better battery lifetimes as has been previously proposed for small sensor nodes [20].
Prior work has explored mechanisms to exploit variation using system level simulators [9,18].
These efforts utilize models to characterize the underlying process variations [16].
Given the inherent lack of accuracy in such models due to variation, experimental measurements are essential to understanding variation and variation induced architectural innovations.In particular, awareness of variation effects can be used at multiple levels to improve energy efficiency.
Optimizations based on application knowledge have been shown to be effective in previous work [10,12].
Using our data, researchers can get insights into how applications perform in various processor configuration modes, and the information can be leveraged to build more optimized power management techniques.
The dataset for this paper is available at: http://mesl.ucsd.edu/ site/pubs/HotPower12_dataset.tgz.
We have presented a characterization of the variation in power consumption of Intel Nehalem class processors, in different configurations, for various representative benchmarks.
Our data analysis reveals several surprising results.
First, we show that multiple instances of parts binned into the same frequency bin exhibit power variations of 12% to 17%, for the base configuration depending on the characteristics of the benchmark.
Second, we observe that changing P-states as well as enabling or disabling architectural features such as Turbo Boost, Hyper-Threading and C-states affect power variation differently.
Specifically, we observe higher variation at higher P-states, ranging from 5% at the lowest to 17% at the highest frequency.
Disabling Turbo Boost and Cstates also cause the power variation to increase significantly.
Since process variation is expected to increase, detecting its extent and harnessing it using adaptive operating systems and applications will become essential to improve system performance and energy efficiency.
We wish to thank Jaideep Chandrashekhar for providing access to the instrumented Intel platforms.
This work is supported in part by NSF grants SHF-1018632 and CCF-1029783, a Calit2 grant and a grant from Intel Research.
