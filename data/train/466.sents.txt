This paper builds a generic modeling framework for analyzing the edge-creation process in dynamic random graphs in which nodes continuously alternate between active and inactive states, which represent churn behavior of modern distributed systems.
We prove that despite heterogeneity of node lifetimes, different initial out-degree, non-Poisson arrival/failure dynamics, and complex spatial and temporal dependency among creation of both initial and replacement edges, a superposition of edge-arrival processes to a live node under uniform selection converges to a Poisson process when system size becomes sufficiently large.
Due to the convoluted dependency and non-renewal nature of various point processes, this result significantly advances classical Poisson convergence analysis and offers a simple analytical platform for future modeling of networks under churn in a wide range of degree-regular and-irregular graphs with arbitrary node lifetime distributions.
Many contemporary distributed systems (e.g., P2P [7], [23] and wireless ad-hoc networks [25], [26]) and large data-centric applications (e.g., Google MapReduce [5], Amazon EC 2 [6]) can be modeled as decentralized graphs in which nodes rely on communication services and computational power of other hosts in the system.
An important characteristic of these networks is their robustness to node churn, which includes topology randomization, operation under failure, and dynamic link rewiring to accommodate arriving/departing entities.Previous research has analyzed multiple avenues for understanding and improving such networks, which includes ensuring connectivity [11], balancing load [27], reducing graph diameter [17], improving resilience [14], [31], mitigating channel interference [1], understanding routing mobility [25] and flooding [26], and optimizing capacity [4], [9], [19].
While relying on a separate model for each study is acceptable in certain cases, the field of dynamic distributed systems has reached sufficient maturity that calls for a unifying foundation that can explain the limiting behavior of the aggregate edge process of the system and pave the way for rigorous analysis of diverse application-specific metrics.This paper considers a system of n nodes, each of which alternates between dead/alive (i.e., ON/OFF) states that represent the online/offline behavior of the corresponding user or host.
Upon joining the network, each node i creates a routing table consisting of k i ≥ 1 initial out-degree neighbors * Supported by NSF grant CNS-1017766.
selected from the pool of available participants.
Upon failure of neighbors, each node replaces them with other live users in order to keep its routing table up-to-date, where all selections are made uniformly randomly.The first half of this paper focuses on the edge-creation process {W i (n, t)} t≥0 of each user i, which is the number of edges injected from i into the system in [0, t], including those in response to failure of neighbors.
Note that it is important to differentiate between the initial edges created when i arrives in the system and replacement edges generated when i repairs failed links.
The latter type creates complicated dependencies between the nodes and poses the main challenges we address later in the paper.In the second half of this paper, we deal with edge arrival from n − 1 users to a given live node v.
We prove that despite user heterogeneity, non-Poisson arrival dynamics, irregular initial out-degree, and two types of dependent edge-creation processes (i.e., initial and replacement), the aggregate edgearrival process from the system to each live node v converges in distribution as n → ∞ to a Poisson process with fixed rateγ = k + θ l ,(1)where k is the average initial out-degree across all users, θ is the mean number of replacement neighbors that an existing user obtains during its ON duration, and l is the average uptime across all nodes.
The first classical area that deals with dynamic graphs falls under the umbrella of mobile ad-hoc networks.
Some of the recent work [3], [25] deals with routing under the uniform speed-limited mobility model, which allows these systems to be modeled in the framework of uniform neighbor selection studied in this paper.
Additional results [26] explicitly rely on the Poisson assumption on edge arrival to each user, but do not formally establish the basis for it.The second classical area of dynamic graphs studies the behavior of P2P networks under churn [2], [4], [8], [10], [12], [13], [16], [18], [22], [23], where measurement studies [28] have shown that P2P users are highly volatile (i.e., join and depart frequently).
Traditional analytical work in P2P [13], [16], [23], [24] relies on a single homogeneous Poisson process that describes the arrival of all users.
With the exception of [24], these studies additionally require that user lifetimes be exponentially distributed, which clearly does not hold in practice [28].
Other P2P modeling studies [14], [15], [30], [31] focus on local neighbor failure/replacement processes to understand how they affect user isolation and ultimately resilience of the system to partitioning.Prior work has led to interesting insight into performance of random graphs under dynamic edge behavior; however, the question of whether these conclusions hold under more complex node activities remains open.
It is our belief that the existing analysis would greatly benefit from the rigorous explanation of how random graphs under churn develop Poissonian dynamics and the specific closed-form expressions for the arrival rate established below.
We start by formalizing the user join/departure model and the out-link model of dynamic networks.
We use notation "node" and "user" interchangeably throughout the paper.
Each node becomes active when arriving in the system or inactive when departing from the system.
Define Z i := {Z i (t)} to be an ON/OFF right-continuous process on time interval [0, ∞), indicating online/offline states of user i:Z i (t) := { 1 user i is ON at time t 0 otherwise (OFF) , t ≥ 0,(2)where i = 1, 2, . . . , n, and n is the number of participating nodes.
Define random variables L i,m > 0, D i,m > 0 to be the m-th durations of user i's ON and OFF periods, respectively.
Denote by {τ i,m } ∞ m=1 the arrival times of user i, as illustrated in Fig. 1, and by {M i (t)} the point process that counts the number of times i joins the system in the interval [0, t]:M i (t) := ∞ ∑ m=1 1 τi,m∈[0,t] ,(3)whereτ i,m+1 = τ i,m + L i,m + D i,m , for m ≥ 1.
Whenever arriving in the network, each user i creates k i out-links to other nodes, which it continuously monitors and repairs as its neighbors become dead.
Denote by Y c i := {Y c i (n, t)} the alternating process representing the states of i's out-link c: for c = 1, . . . , k i and t ≥ 0, where ALIVE means that the neighbor adjacent to this link is currently online and DEAD means that the neighbor has become failed and a replacement is being sought.
If node i is offline at t, all of its links are considered DEAD.Y c i (n, t) := { 1 out-link c of user i is ALIVE at t 0 otherwise (DEAD) , (4) τ i,m τ i,m+1 offline Y i c (n,t) t online online = neighbor failureAs depicted in Fig. 2, user i's link c becomes ALIVE at arrival times {τ i,m } m≥1 and then alternates between DEAD and ALIVE states during i's ON periods.
Note that DEAD durations are search delays 1 for finding replacement neighbors and ALIVE durations of Y c i are residual lifetimes of selected neighbors with the exception of the very last ALIVE cycle before i leaves, which is terminated by i's departure rather than neighbor failure.Whenever Y c i transitions from DEAD to ALIVE, user i creates an edge (i.e., performs one selection).
Define initial edges to be those added when users arrive in the system (i.e., whenever Z i transitions from OFF to ON) and replacement edges to be those added in response to neighbor failures.
The collection of processes {Y c i } i,c contains elements with rather complex inter-dependency since multiple nodes may concurrently connect to the same neighbor and a given user i may select the same node v multiple times during different ON durations of i (see the introduction for more discussion).
Define {U c i (n, t)} to be a right-continuous process that counts the number of transitions DEAD→ALIVE of Y c i within the current ON/OFF cycle of i up to time t, which is shown in Fig. 3.
We assume U c i (n, τ i,m ) = 1, use notation t − to represent the instant just prior to t, and denote byU c i (n, τ − i,m+1 ) = sup τi,m≤t<τi,m+1 U c i (n, t)(5)the number of selections for link c in the m-th ON cycle of user i.Finally, the number of selections that i performs for link c across all of its ON durations in [0, t] is given byW c i (n, t) := U c i (n, t) − U c i (n, 0) + Mi(t) ∑ m=1 U c i (n, τ − i,m ),(6)where M i (t) is the number of arrivals of i in [0, t].
Then, define the edge-creation process W i (n, t) of user i as the superposition of k i processes W c i , i.e., W i (n, t) :=∑ ki c=1 W c i (n, t).
Observe that ∑ n i=1 W i (n, t)is the number of out-degree edges generated by n users in [0, t], which is the same as the number of in-degree edges received by live users in [0, t].
We first split the system into K unique user types to model the heterogeneous nature (i.e., diversity) of user behavior (e.g., K = 1 reduces the system to a network of homogeneous users) and mandate that all average online/offline durations be both positive and finite.Assumption 1: There exists a fixed set F of K ≥ 1 distinct user types, which are specified by pairs of continuous CDFs (F (j) (x), G (j) (x)) that define non-negative random variables whose meansl (j) := ∫ ∞ 0 (1 − F (j) (x))dx (7) d (j) := ∫ ∞ 0 (1 − G (j) (x))dx (8) satisfy 0 < l (j) , d (j) < ∞ for all j = 1, . . . , K. Furthermore, F (j) (x) > 0 and G (j) (x) > 0 for all x > 0, all j = 1, . . . , K.We next allow for bias in the selection process and let certain user types be more popular than others.
Assumption 2: Each Z i is associated with a pair of CDFs (F i (x), G i (x)) that is independently drawn from set F, where type j is selected with probability p j ≥ 0 and ∑ K j=1 p j = 1; We finally ensure that once users have chosen their types (i.e., ON/OFF duration CDFs), {Z i (t)} n i=1 evolve as independent stationary renewal processes.Assumption 3: Defining S to be set of selections made by each user and conditioning on S, set {Z i (t)} n i=1 consists of mutually independent, stationary alternating renewal processes, where ON durations {L i,m } ∞ m=1 are independently identically distributed (i.i.d.) with CDF F i (x) and OFF durations {D i,m } ∞ m=1 are i.i.d. with distribution G i (x).
We next regulate the initial out-degree of each user, ensuring that all k i are uniformly bounded as n → ∞ and there is no dependency between Z i and k i .
Assumption 4: The initial out-degree k i of each user i is independently drawn from some distribution K(x) with mean k whose probability space is upper-bounded by a constant independent of n. Furthermore, given that users have set their k i , the number of out-degree neighbors each user i connects to at arrival times τ i,m is k i for all m ≥ 1.
For simplicity of notation, conditioning on user type, define l i := E[L i,λ i := (l i + d i ) −1(9)be the arrival rate of user i into the system.
To ensure stationarity, the first arrival time τ i,1 is defined asτ i,1 := { L e i + D i with probability (w.p.) a i D e i w.p. 1 − a i ,(10)where L e i has the equilibrium distribution ofF i (x) (i.e., P (L e i < x) = (l i ) −1 ∫ x 0 (1 − F i (u))du, x ≥ 0), D e i has the equilibrium distribution of G i (x), and a i := l i /(l i + d i ) is user i's availability.
In this subsection, we focus our attention on the properties of aggregate user lifetimes and residual lifetimes of selected neighbors, upon which we compute the rate of edge-creation from each user in the next section.For each instance of user i being present in the system during interval [0, t], place its ON duration L i,m into set S i (t) and define S(t) = ∪ n i=1 S i (t).
Then let F (n, t, x) be the CDF of values collected in set S(t) (i.e., the probability that the obtained lifetimes are less than or equal to x).
Given n participating users, define F (n, x) := lim t→∞ F (n, t, x) to be the aggregate lifetime distribution of the system and l(n) to be its mean.
By [30, Theorem 1], the aggregate lifetime CDF F (n, x) and its mean l(n) for any finite n ≥ 1, are respectively given byF (n, x) = n ∑ i=1 b i F i (x), l(n) = n ∑ i=1 b i l i ,(11)where b i := λ i / ∑ n j=1 λ j and λ i is defined in (9).
The asymptotic results on F (n, x) and l(n) are given below.Lemma 1: Under Assumptions 1-3, the following sequences converge almost surely (a.s.) as n → ∞:F (n, x) a.s. − − → F (x) := ∑ K j=1 p j λ (j) F (j) (x) λ ,(12)l(n) a.s. − − → l := a λ ,(13)whereλ (j) := 1/(l (j) + d (j) ) is the arrival rate of type j, λ := ∑ K j=1 p j λ (j)is the average arrival rate across all user types,a := ∑ K j=1 p j a (j) , and a (j) := l (j) /(l (j) +d (j) ).
Further, F (x)is a proper CDF function and 0 < l < ∞.
Now, suppose node v picks a random currently-alive user i as a potential neighbor.
Denote by R i (t) the remainder of the current ON cycle of user i, as illustrated in Fig. 4, and by H i (x) its CDF:H i (x) := P (R i (t) ≤ x|Z i (t) = 1),(14)which is invariant in t due to stationarity of Z i .
It is known from [29] that for x ≥ 0:H i (x) = (l i ) −1 ∫ x 0 (1 − F i (u))du.Next, define R(n, t) to be the residual lifetime of the user uniformly randomly selected from among peers that are alive at time t. Let N (n, t) := ∑ n i=1 Z i (t) be the system population at that time and denote by H(n, x) the distribution of R(n, t) conditioned on at least one user being alive:H(n, x) := P (R(n, t) ≤ x|N (n, t) ≥ 1).
(15)The next lemma shows that under uniform selection, the residual CDF H(n, x) can be reduced to a simple function of the aggregate lifetime CDF F (x).
Lemma 2: Given Assumptions 1-3 and uniform selection, H(n, x) defined in (15) converges a.s. toH(n, x) a.s. − − → H(x) := 1 l ∫ x 0 (1 − F (u)) du,(16)as n → ∞, where F (x) and l are given in (12)-(13).
Recalling that ALIVE durations of Y c i are residual lifetimes of selected users and applying (16), we next study edgecreation processes {W i (n, t)} n i=1 .
Denote by δ i,z the z-th time at which user i makes a selection, across all links of i, and by I j i,z the indicator that user i selects peer j for its z-th connection.
Note that the zth selection time δ i,z of user i is determined by the ON/OFF process Z i and residual lifetimes of i's all previous selections z ′ < z.
This indicates that the history observed by i up to time δ i,z helps i predict whether the previously selected peers are alive at δ i,z .
The model for the number of users available for selection at time δ i,z is rather intricate due to the dependence on i's past selections.In the following, we first deal in Lemma 3 with uniform integrability (UI) of set {(W i (n, t)) r } n≥1 , where W i (n, t) is the number of edges created by i in interval [0, t], and then prove in Lemma 4 that residuals R(n, δ i,z ) of selected neighbors at random times δ i,z ≤ t are asymptotically independent.
These two critical results make the distribution of R(n, δ i,z ) tractable and lay the foundation for studying the edge-creation process in Theorem 1.
We start by addressing UI of set {(W i (n, t)) r } n≥1 .
Lemma 3: With Assumptions 1-4 and uniform selection, for each user i and all t ≥ 0, collections {(W i (n, t)) r } n≥1 are uniformly integrable in n, for any r > 0.
Lemma 3 is needed to show that E[(W i (n, t)) r ] converge as n → ∞, for all r > 0, and that the intensity measure E[W i (n, t)] of each edge-creation process is finite.Lemma 4: Under the same assumptions as in Lemma 3, residuals {R(n, δ i,z )} z≥1 of selected neighbors at random times δ i,z are asymptotically independent and converge in distribution as n → ∞ to i.i.d. r.v.'s with CDF H(x) in (16).
The rationale behind Lemma 4 can be explained as follows.
Intuitively, as the pool of users available for selections becomes larger, the probability that user i selects any other peer more than once in interval [0, t] diminishes.
In other words, for sufficiently large n, it is more likely that the set of neighbors that i connects to in [0, t] contains distinct peers.
Therefore, given the assumption that each user's arrival/departure times are independent of any other nodes', the CDF of residuals selected at δ i,z approaches that of residual R(n, t) of a randomly selected user in (16).
For simplicity of notation, denote by {U (t)} t≥0 a pure renewal process (with a point at time 0) whose cycle lengths follow H(x) in (16).
The expected number of renewals (i.e., points) in interval [0, x] is given by [21] E[U (x)] = 1 + ∞ ∑ r=1 H * r (x),(17)whereH * r (x) is the r-fold convolution of H(x).
Using the regenerative property of process {U c i (n, t)} defined in (5), we next show that E[W i (n, t)] can be reduced to a function of E[U (t)] in (17).
Theorem 1: Assuming the same as in Lemma 3, the mean number of edges that user i generates in [0, t] converges as n → ∞ to E[W i (n, t) | i's type, k i ] → k i λ i t ∫ ∞ 0 E[U (x)] dF i (x), (18)where k i is i's initial out-degree, λ i is its arrival rate, F i (x) is its lifetime CDF, and E[U (x)] is given in (17).
Unconditionally,lim n→∞ E[W i (n, t)] = (k + θ)λ t,(19)where λ is the arrival rate shown in (13), k is the mean initial out-degree,θ := k ∑ ∞ r=1 ∫ ∞ 0 H * r (x)dF (x)is the mean number of replacement neighbors that i selects in its lifetime, and F (x) is the aggregate lifetime distribution in (12).
To understand (18), recall that the mean number of arrivals of user i in interval [0, t] is simply λ i t due to stationarity of renewal process {Z i (t)}.
During each ON duration L i , i generates E[U (L i )] edges on average for out-link c, for c = 1, . . . , k i .
The total number of edges created in [0, t] is thus k i λ i tE[U (L i )], which leads to (18) upon expanding E[U (L i )].
Averaging (18) over user types and initial outdegree, we reach (19).
We are now ready to examine the process of incoming edge arrival to a given live user in the system.
We set aside a given user v (so the values of Z v (·) are given) and examine edge arrival to this user from n − 1 other peers under uniform selection.
NWe introduced a generic framework for modeling user join/departure and edge arrival in distributed systems under churn, which allows tractable analysis of system dynamics as n → ∞.
Using this framework, we developed theoretical results on the edge-arrival process to each user and paved the way for future analytical work in this area that tackles load balancing, dynamic topology adaptation, routing distances, and other important issues.
We introduced a generic framework for modeling user join/departure and edge arrival in distributed systems under churn, which allows tractable analysis of system dynamics as n → ∞.
Using this framework, we developed theoretical results on the edge-arrival process to each user and paved the way for future analytical work in this area that tackles load balancing, dynamic topology adaptation, routing distances, and other important issues.
