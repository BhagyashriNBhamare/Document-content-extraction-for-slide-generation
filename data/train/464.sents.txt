In this paper, we take the sample-path approach in analyzing the asymptotic behavior of single-hop bandwidth estimation under bursty cross-traffic and show that these results are provably different from those observed under fluid models of prior work.
This difference, which we call the probing bias, is one of the previously unknown factors that can cause measurement inaccuracies in available bandwidth estimation.
We present an analytical formulation of "packet probing," based on which we derive several major properties of the probing bias.
We then experimentally observe the probing bias and investigate its quantitative relationship to several deciding factors such as probing packet size, probing train length, and cross-traffic burstiness.
Both our analytical and experimental results show that the probing bias vanishes as the packet-train length or packet size increases.
The vanishing rate is decided by the burstiness of cross-traffic.
Available bandwidth of a network path has long been the interest of measurement studies because of its importance to many Internet applications such as adaptive streaming, overlay routing, congestion control, and network diagnosis.However, available bandwidth is generally considered difficult to measure due to its dynamics, especially in the Internet environment where the end-to-end approach is advocated and often is the only choice available.
Thus, until recently, most of the research efforts went into the measurement of the bottleneck capacity [2] [3] [9] [18].
The recent surge of available bandwidth estimation proposals stems from the rationales developed in bottleneck capacity estimation research.
Among the recent proposals, TOPP [12], SLoPS [7], PathChirp [20], IGI/PTR [5] and Spruce [21] are the major representatives.
Most of them are based on packet-pair or packet-train probing, where bursts of equally spaced packets of uniform size are injected into the path of interest, and the available bandwidth information is inferred based on the relationship between the input interpacket gaps and those of the output.According to recently established notions, the available bandwidth of a network hop is its residual capacity after transmitting cross-traffic.
Since at any time instance, the hop is either idle or transmitting packets at its capacity speed C, the utilization of the hop can be viewed as an onoff function over time.
The definition of the available bandwidth ought to look at the average unutilized bandwidth over some time interval δ, i.e.,B δ (t) = C 1 − 1 δ t+δ t U (x)dx ,(1)where B δ (t) is the available bandwidth in time interval [t, t+ δ], U (x) ∈ {0, 1} is the link utilization on-off function determined by the packet-arrival pattern of cross-traffic, and C is the hop capacity.
The available bandwidth along a network path is the minimum available bandwidth of all traversed hops.
The hop carrying the minimum available bandwidth is called the tight hop.
Note that B δ (t) varies over time t as well as over a wide range of observation intervals δ.
This dynamics make it an elusive target to measure.
To combat this difficulty, most measurement proposals use a fluid cross-traffic model to justify the design of their estimation techniques.
Under such fluid cross-traffic, B δ (t) becomes a constant for all t and all δ and its relationship to probing input and output becomes easy to identify.
Measurement techniques designed using this model are then empirically extended to general bursty cross-traffic conditions.Although the experimental performance of recent proposals as documented is encouraging, the rationales they are anchoring upon are not fully justified in general crosstraffic conditions.
In this paper, we contribute analytical insight into the asymptotic behavior of single-hop, packettrain bandwidth estimation under bursty cross-traffic conditions.
This question has two aspects.
First, given a crosstraffic arrival process and fixed probing train parameters (i.e., packet size and train length), we analyze how the probing output relates to the probing input.
We investigate the output rate and gap for individual packet trains as well as their asymptotic average as the number of probings approaches infinity.
We examine the functional relation between the probing input and the asymptotic average of the probing output in the entire input range.
We call this relation the probing response curve and show the difficulties in extracting the available bandwidth information from the curve.Second, we investigate how the response curve evolves with respect to the changes in packet train parameters and cross-traffic burstiness.
Both questions are of fundamental importance for the design of available-bandwidth estimation methods.
The answer to the first question provides a theoretical foundation that extends previous rationales based on fluid cross-traffic models.
The answer to the second question offers an insight into parameter tuning strategies in the measurement design.
Published research has produced a great deal of intuition and empirical findings related to these questions; however, neither their analytical foundation, nor a mathematically precise explanation was available until now.Although our eventual goal is to understand the behavior of packet-train probing in multi-hop network paths, the insight obtained in the analysis of a single hop is indispensable in reaching this goal.
Moreover, the single-hop case on its own is an interesting and complex problem calling for an elaborate discussion, which is the focus of this paper.Under two theoretically and practically mild assumptions, we derive several important properties of the gap (and rate) response curve.
Our results show that the rate response curve in constant-rate fluid cross-traffic is the tight upper bound of that in bursty cross-traffic with the same average intensity.
We show that there is a probing input range where the real curve negatively deviates from its fluid-based prediction.
We call this deviation the probing bias.
Most existing measurement techniques make use of the curve in that range without being aware of the actual bias, which sometimes makes them subject to significant measurement inaccuracy.Our analysis also discovers the source of the probing bias and arrives to its closed-form expression for arbitrary probing constructions.
We show that the amplitude of the probing bias is exclusively decided by the probing construction and the available bandwidth distribution.
We also present an experimental approach to compute the probing bias in given traffic traces.
This allows us to empirically validate our theoretical results, qualitatively observe the relationship between the probing bias and probing train constructions in certain cross-traffic conditions, and evaluate the asymptotic performance of various available-bandwidth estimators.The rest of the paper is organized as follows.
In section 2, we survey the current measurement proposals and show that they are all related to one rationale, which we later inspect under general cross-traffic conditions.
In section 3, we identify the measurement targets and present the analytical foundation of packet-train probing.
In section 4, we analyze the major properties of the response curves and probing bias.
In section 5, we propose two experimental methods, period testing and trace driven testing, to observe the probing bias and examine its relationship to several deciding factors.
We explain the implications of our findings on some of the current proposals in section 6.
Finally, we present the concluding remarks in section 7.
IP-layer bandwidth estimation and the idea of using packetpairs to infer link capacity dates at least as far back as 1988 when Jacobson [6] designed the packet conservation principle of TCP to allow senders to indirectly infer the bottleneck/available bandwidth based on the spacing between the ACK packets.
Keshav's packet-pair flow control followed in 1991 [8] and relied on fair queuing in all network routers.Several years later, Carter et al. (1996) developed a tool called cprobe [1] to measure the available bandwidth.
Cprobe bounced a short train of ICMP echo packets off the target server and recorded the spacing between the first and last returning packet.
The rate of the arriving echo stream was used as an estimate of the available bandwidth.
As pointed out later by Dovrolis [2], cprobe actually measured a metric called the asymptotic dispersion rate (ADR), which does not generally equal the available bandwidth.
Paxon (1999) defined and measured a relative available bandwidth metric β [18], which approached 1 when the path was void of crosstraffic and 0 when the path was close to 100% utilization.
studied the relationship between the input and output rates rI and rO of probing trains in a single-hop path and presented the following FIFO fluid model [13]:rO =    r I r I < C − λ C rI r I + λ r I ≥ C − λ ,(2)where C and λ are the hop capacity and cross-traffic intensity (or rate) respectively.
Applying math induction to the subsequent hops along the path, we get the main model of measuring the available bandwidth A P of an arbitrary multi-hop path P :rO =    r I r I < A P C rI r I + λ b ≥ r I ≥ A P ,(3)where b is the second minimum residual link bandwidth along path P and C is the capacity of the tight hop.
Based on (2) and (3), Melander et al. proposed a measurement technique called TOPP (Trains of Packet Pairs) [14].
TOPP first collects the output rates of probing packet pairs for a series of equally spaced input rates in some interval [r min I , r max I ].
In the subsequent analysis phase, instead of using (3), TOPP uses the piece-wise linear relationship between r I /r O and r I :r I rO =    1 r I < A P r I C + λ C b ≥ rI ≥ AP .
(4)TOPP identifies the second segment in the curve using several empirical methods and applies linear regression to calculate the capacity C and cross traffic intensity λ of the tight link.
Hence, A P = C − λ is obtained.Another recent proposal is SLoPS (Self Loading Periodic Streams) by Jain et al. (2002) [7].
SLoPS is implemented in a tool called pathload and is based on the observation that one-way delays of packets in a probing train show an increasing trend when the input rate of the probe traffic is higher than the available bandwidth of the path.
This rationale is clearly true if cross-traffic is modeled as a fluid and generally can be written as a variation of (4):rI rO = 1 rI ≤ AP > 1 r I > A P .
(5)To measure available bandwidth in bursty cross-traffic, pathload adapts its input probing rate in a way similar to a binary search to locate the region where the one-way delay of the probing packets is just about to show an increasing trend or the two statistical tests used can neither detect an increasing trend, nor detect a non-increasing trend with sufficient confidence.
That region is then taken as the range of the available bandwidth of the path.PathChirp [20] is a proposal to improve pathload's measurement speed.
PathChirp uses probing trains with exponentially decreasing inter-packet spacing and calculates available bandwidth from the queuing delay signature of the arriving chirp.Hu et al.[5] (2003) analyzed the interaction between probing pairs and CBR cross-traffic using a single-hop path.
They proposed the following gap formula under the condition that the packets in each probing pair share the same hop busy period:gO = s C + λg I C ,(6)where g O is the output gap, g I is the input gap between the packet pair, s is the packet size of probe traffic.
The paper [5] also proposed a packet-train based estimator called IGI that measures the cross-traffic intensity, which can be viewed as an empirical extension of (6).
As an alternative to IGI, [5] suggested to use a method called PTR (Packet Transmission Rate), in which the output rate of the probing train is used as an estimator of AP .
The authors [5] showed that both IGI and PTR produce accurate results at the turning point where the input gap g I starts to become the same as the output gap g O .
Notice that IGI/PTR is also related to model (2), which shows that the turning point is where both rI and rO are equal to the available bandwidth C − λ.
Equation (6) is the "gap" version of the second part of (2).
Spruce [21] is another measurement proposal that uses packet-pairs.
Like IGI, spruce assumes a single bottleneck link whose capacity C can be estimated beforehand.
Spruce sends probing pairs with intra-pair gap gI set to the bottleneck link transmission delay of the packet and inter-pair delay set to an exponentially distributed random variable so as to maintain the average probing rate below 0.05C. Each probing pair generates an available bandwidth estimate Ai computed by:A i = C 1 − g O − g I g I .
(7)Spruce averages the last 100 samples of A i to arrive at an estimation of AP .
Observe that spruce anchors its rationale on (6) with gI = s/C, where s is the probing packet size.There are other measurement proposals such as Delphi [19] and the work in [4].
These proposals assume specific router of capacity C input probe traffic input crosstraffic output crosstraffic output probe traffic Figure 1: Single-hop probing model.
cross-traffic processes, which allows them to either directly estimate cross-traffic intensity or reconstruct its parameters on a larger timescale based on the sampled traffic in small time intervals.
The packet probing part however is similar to that of spruce and is related to (6).
In summary, most of the recent proposals anchor their rationales directly on (2) or a model closely related to it.
However, (2) is only fully justified based on a fluid cross-traffic model, in which the arrival rate of cross-traffic is constant at all times t and equals λ.
For general bursty cross-traffic, it is important to understand whether (2) is the asymptotic behavior of packet train probing or not.
A positive answer to this question would lay a solid ground for the design of available bandwidth measurement methods and provide them with an assurance of asymptotic accuracy.
On the other hand, a negative answer would shed new light on the fundamental limits and tradeoffs in probing-based measurements, giving rise to new insights in parameter tuning under certain application requirements.
We next present the necessary analytical foundation to tackle this question.
Due to limited space, all proofs in this paper are omitted, and we refer interested readers to [10] for more details.
In this section, we present an analytical formulation of packet probing, identify measurement targets, and derive closed-form relation between probing input and output for individual packet trains.
Our analysis focuses on the singlehop probing model in Figure 1.
We use the quadruple a1, gI , s, n to denote a probing train of n packets p1, p2, . . . , pn, where a1 is the arrival time of the first packet p1 to the hop, g I is the inter-packet spacing, s is the probe packet size, and n is the train length.
The arrival time at the hop of the probing packets are denoted by a i = a 1 +(i−1)g I , i = 1, 2, . . . , n.
The departure time of probing packets from the hop are denoted by di, i = 1, 2, . . . , n.
We define the output gap of a packet train as the average spacing between adjacent packets in the train :gO= dn − d1 n − 1 .
(8)In terms of rate, the corresponding average input and output rates are given by:rI = s gI , rO = s gO = (n − 1)s dn − d1 .
(9)We start from the gap version of (2), namely, we first investigate the validity of the following model:E[g O ] =    g I g I > s C − λ s C + gI λ C g I ≤ s C − λ (10)in a single hop path and then come back to its rate version.
Since we are now dealing with bursty cross-traffic, neither cross-traffic intensity nor probing output gap is a constant.
Meanwhile, λ and E[g O ] can be viewed as the time averages of traffic intensity and output gaps.
Detailed connotations about these two terms are clarified at later proper times.
Throughout the paper, we assume infinite buffer capacity, FIFO queuing, and a work-conserving discipline for the forwarding hop.
For the composition of cross-traffic and probing traffic, we assume simple traffic arrival, i.e., at most one packet arrives at any time instance.
Definition 1.
Cross traffic is driven by the packet counting process N (t) and the packet-size process S n .
The cumulative traffic arrival V (t) is a random process counting the total volume of data received by the router up to time instance t:V (t) = N (t) n=1 Sn.
(11)Note that V (t) and N (t) are right continuous, meaning that the packet arriving at t is counted in V (t).
Unlike conventional traffic modeling, we make no assumption on N (t) or Sn.
Instead, our assumption is made for V (t).
Assumption 1.
Cross traffic exhibits "intensity stability," which means that lim t→∞ V (t)/t exists and is less than the hop capacity C.This higher level assumption can accommodate a broad range of traffic types and, at the same time, detach the model from the underlying details of traffic arrival.We define cross-traffic intensity λ in (10) as the limit of V (t)/t as t → ∞.
This definition reveals a mathematical essence of one's intuitive notion of average traffic intensity.
Further, as we next show, the time average of cross-traffic intensity metrics in arbitrary fixed observation interval is the same as this limit.Definition 2.
We define Y δ (t) as the average cross-traffic arrival rate in the interval (t, t+δ] and call it the "δ-interval cross-traffic intensity" process:Y δ (t) = V (t + δ) − V (t) δ .
(12)Given this definition, we have the following result.Lemma 1.
The limiting time average E[Y δ (t)] of any δ-interval cross-traffic intensity sample-path is equal to λ:E[Y δ (t)] = lim t→∞ 1 t t 0 Y δ (u)du = λ, ∀δ > 0.
(13)Throughout this paper, we use the notation of probability expectation as a shorthand representation for sample-path limiting time average 1 .
Lemma 1 reveals that to measure λ, instead of conducting one observation in a very large time interval (which is often not practical), we can conduct observations in arbitrarily small time intervals and use their average to approach it.
This has significant implication on probing based measurement as we show later.A look back at assumption 1 further confirms its mildness.
Since λ is one of our measurement targets, the intensity stability assumption basically says that the measurement target needs to exist.Our next assumption is related to the forwarding hop.
Note that W (t) is also right continuous.
Two examples of hop workload sample-path are shown in Figure 2.
Assumption 2.
The forwarding hop exhibits workload stability.
That is, limt→∞ W (t)/t = 0.
Workload stability means that W (t) = o(t).
Note that given Assumption 1, workload stability is satisfied in most practical situations and that Assumption 2 is formally stated only for convenience of presentation.We next define a process especially useful in characterizing how cross-traffic changes the gaps of probing packet pairs.Definition 4.
A δ-interval workload-difference process D δ (t)is the difference between the hop workload at time t and t+δ:D δ (t) = W (t + δ) − W (t).
(14)One important implication of workload stability relevant to probing based measurements is the zero-mean nature of D δ (t).
It is formally stated as follows.Lemma 2.
Assuming W (t) = o(t), the limiting time av- erage E[D δ (t)] of any δ-interval workload-difference sample- path is zero: E[D δ (t)] = lim t→∞ 1 t t 0 D δ (u)du = 0, ∀δ > 0.
(15)With these two assumptions, we next present a formulation of "available bandwidth" and show how it is related to cross traffic and hop workload both in finite and asymptotically infinite time intervals.Definition 5.
Hop utilization process U (t) is an on-off process associated with W (t):U (t) = 1 W (t) > 0 0 W (t) = 0 (16)and δ-interval hop idle processI(t, t + δ) = I δ (t) = δ − t+δ t U (x)dx (17)is a process indicating the total amount of idle time of the forwarding hop in [t, t + δ].
We further call time interval [t, t + δ] a "hop busy period" if I δ (t) = 0 and a "hop idle period" if I δ (t) = δ.Definition 6.
A δ-interval available bandwidth process B δ (t) is a process indicating the residual bandwidth in the time interval [t, t + δ]:B δ (t) = C 1 − 1 δ t+δ t U (x)dx = I δ (t)C δ .
(18)In our next lemma, we present the relationship among cross-traffic intensity, hop workload, and available bandwidth in arbitrary finite time intervals.Lemma 3.
For all t ≥ 0 and δ > 0, the following holds:δ = B δ (t)δ C − D δ (t) + Y δ (t)δ C .
(19)Note that the term D δ (t) escaped the formulation efforts of prior work.
Although it is a zero-mean term, it is not unconditionally insignificant.
For example, when the distribution of available bandwidth is of interest, this term must be taken into consideration.The next two theorems present the asymptotic relationship between cross-traffic intensity and available bandwidth.
They explain when and why available bandwidth can be estimated by measuring cross-traffic intensity λ.
Theorem 1.
Under the assumptions of this paper, δ-interval available bandwidth converges to C −λ as the observation interval becomes large:lim δ→∞ B δ (t) = C − λ, ∀t > 0.
(20)Theorem 1 shows that given the two stability assumptions we made, available bandwidth also exhibits stability and, in large time intervals, can be approximated by C − λ.Note, however, that in cases when we are interested in the available bandwidth in a small δ-interval 2 , Lemma 3 suggests that B δ (t) cannot be correctly estimated based on the measurement of Y δ (t) alone.
However, the following theorem says that the limiting time average of available bandwidth metrics in arbitrary δ-interval can be estimated by measuring cross-traffic.
Theorem 2.
The limiting time average E[B δ (t)] of any δ-interval available bandwidth process is C − λ.
That is, E[B δ (t)] = lim t→∞ 1 t t 0 B δ (u)du = C − λ, ∀δ > 0.
(21)To summarize, our results show that available bandwidth in a large timescale or the first-order statistics of available bandwidth in arbitrary fixed time scale can be estimated based on the measurement of cross traffic, while small timescale metrics and their higher-order statistics cannot be correctly estimated solely based cross-traffic measurements.Note that measuring cross-traffic intensity λ is not the only way to estimate available bandwidth A. Metric A = C − λ can be directly estimated without knowing the values of C or λ, as is the case of SLoPS [7] and PTR [5].
Our discussion of probing response curve in Section 4 will cover the theoretical aspects of both approaches.Despite the perplexing dynamics, we identified two measurement targets, λ and A = C − λ, under mild traffic assumptions.
These two targets are fairly stable in the sense that they are independent of any particular observation time instance t and observation interval δ.
Although other metrics such as the variance and distribution of available bandwidth might also be interesting, they are less stable because of their dependence on δ.
Measurement of those targets is beyond the scope of this paper.We are now ready to derive the probing response curve and show how these two targets, λ and A, are embedded in the curve.
Before that, however, we must understand the interaction between the probing traffic and the cross-traffic.
Traffic interaction includes two parts: the way the probing train changes the original hop workload and the way the cross-traffic changes the inter-packet gaps in the probing train.
The latter is our interest, but its analysis relies on understanding the former.
We use˜Wuse˜ use˜W (t) and˜Iand˜ and˜I δ (t) to respectively denote the workload sample-path and the hop idle sample-path associated with the superposition of cross-traffic and probing traffic.
Note that traffic composition only increases hop workload.
That is, for all t, ˜ W (t) ≥ W (t).
We next define useful notation that will help us examine this intrusion behavior of packet train probing.Definition 7.
The intrusive range of the probing traffic into W (t), is the set {t : ˜ probing packet arrivals.
Figure 3 illustrates this behavior, where (t 1 , t 2 ) and (t 3 , t 5 ) are two busy periods in W (t), and (t 2 , t 3 ) and (t 5 , t 7 ) are two idle periods in W (t).
Times t 1 , t 4 and t 6 are the instants of probing packet arrivals.
Time t7 is the end point of the intrusive range.
Based on the above observations of W d (t), we have the following lemma:W (t) > W (t)}.
The intrusion residual function is W d (t) = ˜ W (t) − W (t).
Lemma 4.
When W (t)is probed by a single packet p of size s arriving into the hop at time t 0 ,W d (t) = 0 t < t 0 max 0, s C − I(t0, t) t ≥ t0 .
(22)When W (t) is probed by a packet train a 1 , g I , s, n, we are often interested in computingR i (a 1 ) = W − d (a i ) = W − d (a 1 + (i − 1)g I )(23)for i = 1, 2, . . . , n, where f − (a) denotes the left-sided limit lim x→a− f (x).
Metric R i (a 1 ) 3 is the intrusion residual caused by the first i − 1 packets in the probing train a 1 , g I , s, n and experienced by packet p i .
In other words, the queuing delay of pi in the hop is given by:˜ W − (a i ) = W (a i ) + W − d (a i ) = W (ai) + Ri(a1).
(24)The total sojourn time of p i at the hop is the sum of its service time and its queuing delay:d i − a i = W (a i ) + R i (a 1 ) + s C(25)As a direct result of Lemma 4, Ri can be recursively computed as follows:Ri = 0 i = 1 max 0, s C + R i−1 − I(a i−1 , a i ) i > 1 .
(26)Denoting s/C − I(ai−1, ai) by yi, the second part of equation (26) can be expanded to the following non-recursive form:Ri = max 0, yi−1, i−1 k=i−2 y k , . . . , i−1 k=1 y k .
(27)We next discuss the second part of traffic interaction.3 When a 1 is irrelevant, we often write R i (a 1 ) as R i .
Our next lemma describes the relationship between probing input and output for an individual packet train.
It is the corner stone of our probing analysis.
Previous work only revealed this result under certain conditions [5], [16].
The full picture, although simple and important, has remained undocumented.Lemma 5.
Assuming δ = (n − 1)g I and W (t) is probed by a packet train a1, gI , s, n, the output gap gO can be expressed as:g O = Y δ (a 1 )g I C + s C + ˜ I(a 1 , a n ) n − 1 = g I + D δ (a1) n − 1 + Rn(a1) n − 1 .
(28)Lemma 5 shows that the output gap carries the information about Y δ (a1), which is potentially useful in cross-traffic measurements.
However, the output gap is also contaminated by the noise information of D δ (a 1 ), ˜ I(a 1 , a n ), and R n (a 1 ).
The last two terms can have positive mean in bursty cross-traffic.
This is exactly where the probing bias comes from, as we show later.
Meanwhile, we examine several useful bounds for these two terms.From (26), noticing that I(a i−1 , a i ) is no less than zero and applying mathematical induction to i, we get 0 ≤ Rn ≤ (n − 1)s/C.
Combining with Lemma 5, we have: Corollary 1.
Again assuming δ = gI (n − 1), the following inequalities hold:D δ (a 1 ) n − 1 + gI ≤ gO ≤ D δ (a 1 ) n − 1 + gI + s C .
(29)The second inequality is tight iff I(a 1 , a n ) = 0.
Our next lemma leads to a bound for˜Ifor˜ for˜I(a 1 , a n ).
Lemma 6.
For k = 1, 2, . . . , n − 1, we have:   0 ≤ ˜ I(a k , a k+1 ) ≤ g I − s C g I > s C ˜ I(a k , a k+1 ) = 0 g I ≤ s C .
(30)Since the term˜Iterm˜ term˜I(a1, an) can be expressed as a sum:˜ I(a 1 , a n ) = n−1 k=1˜I k=1˜ k=1˜I(a k , a k + 1),(31)we get the following bounds on the noise term˜Iterm˜ term˜I(a 1 , a n )/(n− 1) after combining (30) with (31):       0 ≤ ˜ I(a 1 , a n ) n − 1 ≤ g I − s C g I > s C ˜ I(a1, an) n − 1 = 0 g I ≤ s C .
(32)Collecting Lemma 5 and (32), we get the following result.Corollary 2.
When W (t) is probed by a1, gI , s, n,     gO = Y δ (a 1 )g I C + s C gI ≤ s C Y δ (a1)gI C + s C ≤ g O ≤ Y δ (a1)gI C + g I g I > s C .
(33)We call (g O C − s)/g I the intensity sampling estimator (ISE).
Corollary 2 implies that when ISE is used to estimate Y δ (a1), it is ensured to be correct only when gI ≤ s/C.
When gI > s/C, ISE's correctness is not guaranteed and it tends to overestimate Y δ (a 1 ).
The amount of overestimation, however, will not be more than C − s/g I , as can be easily derived from the inequality in Corollary 2.
Finally, by subtracting the two expressions of gO in (28) and combining Lemma 3, we get an important relationship between R n (a 1 ) and˜Iand˜ and˜I(a 1 , a n ):˜ I(a1, an) = Rn(a1) + I(a1, an) − (n − 1)s C .
(34)With the understanding of individual packet train probing, we are now in a position to derive the probing response curve.
The probing response curve depends on a number of factors such as probing construction, the inter-packet pattern, and cross-traffic characteristics.
We assume a Poisson interprobing pattern, because the asymptotic average of Poisson samples converges to the limiting time average of the sample-path being sampled.
This property is known as PASTA (Poisson Arrivals See Time Averages) [22].
The average rate of Poisson sampling is assumed to be small enough so that the interference between adjacent trains can be neglected.
We use {Tm}, gI , s, n to denote a probing train series driven by a Poisson arrival process Λ(t) = max{m ≥ 0 :Tm ≤ t}.
We use g (k)O to denote the output gap of the k th probing train T k , g I , s, n in the series, i.e., g (10) (k) O = (d (k) n −d (k) 1 )/(n−1).
The term E[g O ] in We now obtain upper and lower bounds on the gap response curve.Theorem 3.
When W (t) is probed by a Poisson packettrain series {Tm}, gI ≤ s/C, s, n, the following equality holds:E[gO] = g I λ C + s C .
(36)Rearranging the result of Theorem 3, we get:λ = E[g O ]C − s g I = E g O C − s g I ,(37)which explains when and why ISE can form an unbiased estimator for traffic intensity and thus for the available bandwidth.Theorem 4.
When W (t) is probed by Poisson packettrain series {T m }, g I > s/C, s, n, the following holds:max g I λ + s C , gI ≤ E[gO] ≤ min gI (1 + λ C ), gI + s C .
Theorem 4 provides both a lower bound and an upper bound for E[g O ] when g I > s/C.
Combining the case when g I ≤ s/C as is stated in Theorem 3, we get the lower bound on E[g O ] for the entire probing range 0 < g I < ∞ as follows 4 :L(E[gO]) =      max gI λ + s C , g I g I > s C s + g I λ C g I ≤ s C =      g I g I > s C − λ s + gI λ C gI ≤ s C − λ .
(38)That is exactly model (10) U (E[g O ]) =      min gI (1 + λ C ), gI + s C gI > s C s + gI λ C g I ≤ s C =              s C + g I λ C gI ≤ s C g I + gI λ C s C ≤ g I ≤ s λ g I + s C g I ≥ s λ .
(39)The real gap response curve is contained between these two bounds.
We define the probing bias β(g I , s, n) as the difference between the real gap response curve and the lower bound given by (38).
It can be expressed as following due to Theorem 4, Lemma 5, and PASTA:β(g I , s, n) =        E[ ˜ I(t, t + (n − 1)g I )] n − 1 gI ≤ s C − λ 1 n − 1 E[Rn(t)] gI ≥ s C − λ .
(40)We next give a closed-form expression for the probing bias and thus for the probing response curves.
Assuming δ = gI , note that both Rn(t) and˜Iand˜ and˜I(t, t + (n − 1)δ) can be expressed as deterministic functions of an (n−1)-dimensional vectorB (n−1) δ (t) =     B δ (t) B δ (t + δ) ... B δ (t + (n − 2)δ)     .
(41)The exact functional expressions, on the other hand, are not very important at this point.
Therefore, we can introduce the following notation:˜ I(t, t + (n − 1)δ) = ϕ( B (n−1) δ (t)),(42)Rn(t) = ψ( B (n−1) δ (t)),(43)where ϕ(.)
and ψ(.)
are some vector functions.
It then becomes apparent that the probing bias depends on the sample-path limiting frequency distribution 5 of B (n−1) δ (t).
Denoting by P (n−1) δ ( x) this distribution function, the probing bias can be expressed by the following vector integrals:β(gI , s, n) =        1 n − 1 Ω ϕ( x)dP (n−1) δ ( x) gI < s C − λ 1 n − 1 Ω ψ( x)dP (n−1) δ ( x) gI ≥ s C − λ ,where Ω is an (n − 1)-dimensional cube [0, C] n−1 .
To better understand these results, we now consider a degenerated case where n = 2, i.e., the packet-pair probing case.
Note that both ϕ( x) and ψ( x) become scalar functions and have simple expressions with respect to B δ (t):˜ I δ (t) = ϕ(B δ (t)) = max 0, B δ (t)δ − s C ,(44)R 2 (t) = ψ(B δ (t)) = max 0, s − B δ (t)δ C .
(45)Therefore, we have the following results for the packetpair probing response curve.Theorem 5.
Assuming that W (t) is probed by Poisson packet-pair series {T m }, g I , s, 2, observation interval δ = g I , and the δ-interval available bandwidth sample-path B δ (t) has frequency distribution function P δ (x), the following holds:E[g O ] = gI λ + s C + C s/δ xδ − s C dP δ (x) = gI + s/δ 0 s − xδ C dP δ (x).
(46)It immediately follows that the packet-pair probing bias is as following (where g I = δ):β(g I , s, 2) =          C s/δ xδ − s C dP δ (x) g I < s C − λ s/δ 0 s − xδ C dP δ (x) gI ≥ s C − λ .
(47)The probing bias is one of the previously unknown factors causing measurement errors in available bandwidth estimation techniques based on (10).
Our closed-from expressions show that the probing bias is exclusively decided by the packet-train parameters and the available bandwidth sample-path distribution.
Next, we show the full picture of the response curves for both the gap version and the rate version.
We now investigate the relationship between the probing bias given in (40) and the input gap gI while keeping all other parameters fixed.
We first present the results for the case of packet-pair probing.Theorem 6.
When W (t) is probed by Poisson packet pair series {T m }, g I , s, 2, the probing bias β(g I , s, 2) equals zero when input gap g I ∈ (0, s/C]; it is a monotonically increasing function of gI in the input gap range (s/C, s/(C − λ)]; and it is a monotonically decreasing function of gI in the input gap range (s/(C − λ), ∞).
Furthermore, bias β(g I , s, 2) monotonically converges to 0 as g I approaches infinity.
Finally, in the whole input gap range (0, ∞), the probing bias is a continuous function of gI .
Packet-pair probing bias has very nice functional properties in terms of continuity and monotonicity.
The probing bias β(gI , s, 2) is a hill-shaped function with respect to gI as shown in Figure 4(a), where it reaches its maximum when g I = s/(C − λ).
Our next theorem presents an inequality that links the packet-train and packet-pair probing biases.Theorem 7.
For any n ≥ 2, the following holds:1 n − 1 β((n − 1)g I , (n − 1)s, 2) ≤ β(g I , s, n) ≤ β(g I , s, 2).
This result tells us that the packet-train probing bias β(gI , s, n) has similar hill-shaped evolving trend with respect to g I since it is both lower-bounded and upper-bounded by hill-shaped functions.
We conjecture that it is also continuous and has similar monotonicity properties described in Theorem 6.
In summary, the probing bias is significant only in the middle part of the whole probing range.
We call that range the biased probing range.
The full picture of the gap response curve is illustrated in Figure 4 Practically, a sufficiently small bias is taken as none.
The probing point s/(C − λ), associated with available bandwidth, is the point where the probing bias is maximized and is not the same as the turning point α.
Further note that the upper bound of gap response curve as given in (39) is actually not a tight bound.It is often more informative to look at the rate version of the response curve rather than the gap version, because it has a direct association with our measurement interests: traffic intensity and available bandwidth.
Transforming (10) into the corresponding rate version, we get the rate upper bound:U s E[gO] =    rI 0 < rI ≤ C − λ C r I rI + λ rI > C − λ .
(48)Although (48) As illustrated in Figure 4(c), along the vertical direction, the rate response curve appears between the two bounds given above.
Along the horizontal direction, the curve shows one negatively biased probing region sandwiched by two unbiased probing regions.L s E[gO] =                r I C r I + C 0 < r I ≤ λ rI C λ + C λ < r I ≤ C r I C r I + λ C < r I .
(49 First, we consider the rate response curve of packet-pair probing and examine the impact of probing packet size on probing bias.
At any fixed input rate point r < C − λ, let s → ∞.
This causes the sampling interval δ = s/r approach to infinity proportionally.
Recall (47), we have:β s r , s, 2 = r 0 s − xδ C dP δ (x) = δ C r 0 P δ (x)dx.
(50)Hence, a sufficient and necessary condition for packet-pair probing bias at input rate r < A to vanish when s → ∞ is:lim δ→∞ δ r 0 P δ (x)dx = 0.
(51)Similarly, for any input rate r ∈ (A, C), a sufficient and necessary condition for packet-pair probing bias to vanish is:lim δ→∞ δ(C − r − C r P δ (x)dx) = 0.
(52)These conditions require the cross-traffic not only exhibit decaying variance when the observation interval δ becomes large, but also show sufficient decaying speed.
Our expriments show that cross-traffic often satisfies these properties.
Hence, larger probing packet size usually implies less probing bias.
The same conclusion also holds for packet train probing due to the following theorem.
then for packet train of any length n, we have:lim s→∞ β s r , s, n = 0.
(54)As to the impact of packet train length, (27) shows that R n depends on a partial sum of series of random variables y i , i = 1, 2, . . . , n − 1 summed in the reverse order.
This is a classic form in random walk theory [23], which deals with partial sums of i.i.d random variables.
Although it is unlikely for y i = s/C − I(a i , a i+1 ) to be i.i.d, we make this assumption to keep the derivations tractable and apply random walk theory to conceptually understand the impact of train length on probing bias.
Using the probing bias expression in (40), random walk theory says that if E[y i ] < 0, which is the case when g I > s/(C − λ), R n converges in distribution to a finite-mean random variable as n → ∞:lim n→∞ E[R n ] < ∞.
(55)Consequently,lim n→∞ E[R n ] n − 1 = 0.
(56)On the other hand, when E[y i ] ≥ 0, as is the case when g I ≤ s/(C − λ), R n goes unbounded with probability 1 as n → ∞.
Note the following relationship between R n and˜I and˜ and˜I(an, an+1):˜ I(a n , a n+1 ) = max 0, I(a n , a n+1 ) − s C − R n .
(57)Thus, there is a random point n0 such that˜Ithat˜ that˜I(an, an+1) becomes 0 if n > n0.
And this n0 converges in distribution to a finite-mean random variable as n → ∞, Thus we havelim n→∞ E[ ˜ I(a1, an)] < ∞,(58)lim n→∞ 1 n − 1 E[ ˜ I(a 1 , a n )] = 0.
(59)This explains why the probing bias can be overcome by long packet trains.
Even when y i are not i.i.d random variables and the above argument does not fully apply, it at least tells us why the probing bias can be mitigated, which is quite non-intuitive.
We now briefly mention how sensitive our results are with respect to the assumptions made in this paper.
First, notice that the simple traffic-arrival assumption is made solely to avoid getting into unnecessary technical details.
Even when batch arrivals are allowed, simple arrivals occur almost everywhere along the time axis, and all the results in this paper remain valid.
This paper also assumed infinite buffer space in the hop.
Hence, our results are valid when buffer space is sufficiently large and packet loss can be neglected.
In the case of otherwise, the equality A = C − λ becomes invalid.
The analysis of the impact of buffer size on bandwidth estimation requires future work.We further assumed a Poisson inter-probing pattern.
This can be relaxed to more general ASTA [11] sampling and as long as the sampling pattern has decent ASTA properties, all of our conclusions hold.
In the case of non-negligible ASTA bias, most measurement techniques would fail and nothing interesting is left for discussion.
ASTA bias is another source of measurement error that has never been studied or evaluated before.
We consider it beyond the scope of this paper.Finally, we made two sample-path assumptions on crosstraffic and tried to avoid assuming cross-traffic stationarity, which was an assumption commonly agreed upon in prior work.
Our results are applicable to but not limited to stationary cross-traffic.
For more detail of this issue, we refer the reader to [10].
Next, we present our experimental methodology to compute the probing response curve and observe the probing bias quantitatively.
To characterize the probing bias, we need to obtain the limiting averages of the probing output.
In this section, we propose two experimental procedures to compute the probing response curves with supervised precision.
The first procedure is period testing, applicable to periodic traffic such as CBR.
The second procedure is trace-driven testing, applicable to aperiodic traffic.
We first apply the former to CBR traffic to verify our analytical results.
We then apply the latter to several additional traffic traces to examine the relationship between probing bias and probing constructions.
The CBR (Constant Bit Rate) traffic we consider here is the one with a fixed packet size, fixed inter-packet delay, and periodical triangle-wave workload sample-path showed in Figure 2(b).
CBR cross-traffic is arguably the simplest type of bursty 6 traffic; however, it is also very important since we believe that any available bandwidth estimation technique must be shown accurate in CBR cross-traffic before being tested in more complex environments.It is clear that CBR traffic satisfies both stability assumptions we made.
Period testing on CBR traffic operates as follows.
Assume a scenario with CBR cross-traffic packet size sc, inter-packet delay T , hop capacity C, and sc/C < T .
Without loss of generality, we let the first packet arrive to the router at time instance 0.
We divide the time interval [0, T ] into m equal-size sub-intervals.
For all k = 0, 1, 2...m − 1, we compute the output gap g O /m of the output gaps is used as an approximation of E [gO].
The departure time of the last packet in the probing train is calculated using (25), where W (an) can be easily computed due to the periodicity of the CBR workload sample-path.
Also note that R n (a 1 ) can be recursively computed using (26).
Thus, period testing can be conducted 6 In this paper, a traffic is called bursty if its cumulative arrival sample-path V (t) is not a linear function of t. Hence, all but constant-rate fluid traffic is bursty.
(b) relative rate bias Figure 5: Packet pair probing in CBR cross-traffic: (a) Rate response curves, (b) relative rate probing biases.
C=10mb/ps, λ=2.5mb/ps.
using deterministic computation without the use of ns2.The validity of period testing is due to the following theorem:Theorem 9.
Let E[g O ]be the asymptotic average of output gaps when the hop is probed by Poisson packet train series {T m }, g I , s, n. Let g O (t) be the output gap when the hop is probed by a single packet train t, gI , s, n. Assuming the workload sample-path W (t) associated with cross-traffic is a periodic function in the time interval (0, ∞) and T is period duration, the following holds:E[g O ] = 1 T T 0 g O (u)du.
(60)Period testing essentially approximates the right-side item in (60) using m−1 k=0 g O (T (2k + 1)/2m)/m.
This approximation can be made arbitrarily precise by choosing sufficiently large m. Next, we introduce two supervision strategies to help decide the number of samples m. Both are also applicable to trace-driven testing.In the first method called self supervision, we iteratively double the number of samples and stop when there is little or no difference between the results produced in consecutive iterations.
In the second method called region supervision, we make sure that m is large enough so that the results of period testing are in agreement with those predicted by (10) or (48) in the unbiased probing range.In our experiment, we choose sc = 1, 500 bytes, C = 10 mb/s, and λ = 2.5 mb/s.
Thus, the inter-packet spacing of CBR cross-traffic is 4.8 ms. Using our supervision strategies, we find that 500 samples can provide very good precision and the results do not significantly differ from those obtained using 1, 000 or more samples.
Figure 5(a) shows the rate response curves when the hop is probed by packet pairs.
The legends are sorted in the same order as their corresponding curves appear vertically in the figure, and we do this whenever possible for all figures to make them easier to read.
Figure 5(b) shows the relative rate probing bias, defined as:min rI , r I C λ + rI − s E[gO] C − λ − (C − λ)C λ + C ,(61)where the numerator is the absolute rate probing bias and the denominator is the difference between the rate upper bound and the rate lower bound when the input probing rate equals to the available bandwidth C −λ.
This difference is an upper bound of absolute rate probing bias.
Hence, the relative bias metric takes values in [0,1].
As shown in Figure 5, the probing bias is clearly noticeable for all three cases.
The biased regions are around (5 mb/s, 10 mb/s) for s = 1500 bytes, (3.5 mb/s, 10 mb/s) for s = 750 bytes, and (1.7 mb/s, 10 mb/s) for s = 250 bytes.
The relative bias (61) also exhibits high amplitude up to 0.5-0.8, meaning that, at certain probing ranges, the rate response curves are much closer to the lower bound than to the upper bound.
Also note that as probing packet size s increases, both the bias range and bias amplitude shrink.
Further, the strongest probing bias appears at the available bandwidth point for all three cases, which is 7.5 mb/s in our case.
Finally, the biases appear monotonic at both sides of the available bandwidth probing point.
These observations are in agreement with our theoretical findings.
Figure 6 shows gap and rate response curves when the hop is probed by packet trains.
The probing packet size is 50 bytes.
The reason why we use small probing packet size is to show that long trains can compensate for the bias introduced by the small probing packet size.
The figure shows the response curves for train lengths 16, 64, and 256 packets.
From Figure 6, we see that the probing bias is clear, but diminishes as train length increases.
In this section, we compare probing biases using four different cross-traffic types: CBR traffic, Poisson traffic with constant packet size (PCS), Poisson traffic with packet sizes (in bytes) uniformly distributed in [1,1500] (PUS), and Pareto on/off traffic (POF).
Hop capacity C is fixed at 10 mb/s.
The cross-traffic packet size is 750 bytes for CBR, PCS, and the on period of POF.
The average sending rate is 500 packets per second for CBR, PCS, and PUS.
The mean duration of POF on/off periods is 10 and 5 ms, respectively.
The Pareto shape parameter α for the duration of both on/off periods is set to 1.9 so that their variance is infinite.
In POF on periods, the source sends CBR traffic at 750 packets per second.
Given these settings, all four cross-traffic types have an average traffic intensity equal to 3 mb/s.
Since all but CBR traffic have aperiodic hop workload sample-path, we cannot apply period testing to obtain their response curves.
Instead, we employ trace-driven testing to compute the response curves for the other three traffic types.
We use RNGs (random number generators) to produce four packet-arrival traces, one for each traffic type.
These traces record the time instances of all packet arrivals and their sizes within a period of 100 seconds.
Before we explain how trace-driven testing works, we first show that these traffic traces satisfy the two cross-traffic stability assumptions we made.In Figure 7(a), we plot function I(t) = V (t)/t for the four traffic traces.
As shown in the figure, all traffic types exhibit intensity stability despite the big differences in their convergence delays.
Figure 7(b) shows the intensity convergence error defined as:R(t) = |I(t) − 3 mb/s| 3 mb/s .
(62)As demonstrated in Figure 7, CBR shows the fastest convergence speed.
In about 10 seconds, CBR converges to the 0.2%-neighborhood of the limiting value, i.e., R(10) ≤ 0.002.
PCS and PUS also converge relatively fast, but much slower than CBR.
In 10 seconds, both PCS and PUS converge to the 1%-neighborhood of the desired 3 mb/s.
PCS converges a little faster than PUS but the difference is small.
POF shows the slowest convergence speed.
It reaches the 1.5%-neighborhood in about 60 seconds.The four traffic traces also exhibit workload stability when they are injected in a hop of capacity C = 10 mb/s.
This is theoretically provable.
Using queueing theory, we can directly compute the limiting time average of the workload process for these four traffic types.
The existence of workload limiting time average implies workload stability [10].
Trace-driven testing is supported by the following corollary:Corollary 3.
Let E[g O ]be the asymptotic average of output gaps when the hop is probed by Poisson packet train series {Tm}, gI , s, n. Let gO(t) be the output gap when the hop is probed by a single packet train t, g I , s, n.
Then the following holds due to PASTA:E[gO] = lim τ →∞ 1 τ τ 0 gO(u)du.
(63)Trace-driven testing essentially approximates the rightside item in (63) made arbitrarily accurate when sufficiently large t 0 is used.
We choose t0 based on the convergence error function R(t) of the traffic traces, since a small value of R(t0) is a good indication that the traffic statistics in [0, t 0 ] has sufficiently converged to its equilibrium statistics.Once t (25) and (26), where the workload W (t) at any time instance can be computed based on cross-traffic trace and hop capacity.In our experiment, we choose t 0 = 20 seconds for PCS and PUS, which leads to R(t) ≤ 0.01, and t0 = 60 seconds for POF, which ensures R(t) ≤ 0.015.
For CBR, we still use period testing.
In what follows, we first compute the response curves for several fixed probing constructions.
We then study the impact of probing constructions on probing bias.
This required 500 samples for CBR, 1,000 samples for PCS and PUS, and 2,000 samples for POF.
As showed in Figure 8(a), the rate response curve of POF is virtually indistinguishable from that of CBR.
The PCS and PUS curves are also very close to each other.
However, it is interesting to note that the curve for POF is closer to rate upper bound than the curves for PUS and PCS, meaning that it suffers less probing bias.
This indicates that, for fixed packet train parameters, cross-traffic of more burstiness does not necessarily imply larger probing bias.
We explain the reasons in a short while.
This shows that, as the probing train length increases, the probing bias diminishes.
For cross-traffic of different burstiness, the diminishing rate is different.
The probing bias for POF vanishes at a rate lower than those of the other three.Since we constantly observe that the response curves suffer the largest probing bias at the available bandwidth point, we define a metric called NBR (Normalized Bias Ratio) to characterize the amount of bias in a rate response curve.
Assuming r is the output rate s/E[g O ] when the input rate is A = C − λ, we define:NBR = A − r r − AC C + λ ,(64)which is the distance of the actual curve to its upper bound divided by the distance to its lower bound, given that the input probing rate is equal to the available bandwidth A.
The NBR metric takes values in [0, ∞), where larger NBR values indicate more probing bias in the response curve.
We next investigate the relationship between NBR and packettrain parameters.
For all four traces, we computed NBR using probing packet sizes between 50 and 1500 bytes with 50-byte increasing step and probing train lengths between 2 and 512 packets with 2-packet increasing step.
Thus, in total, we have 256 × 30 = 7, 680 different probing constructions for each of the four traces.
For each probing construction, we calculate the output rate r in (64) using trace-driven testing with 2,000 samples.
Figure 9(a) shows NBR for the four traces using s = 750 bytes.
In all four traces, NBR decreases as the probing train length increases and this relationship appears to be a power-law function as is confirmed by our log-log scale plotting.
Figure 9(b) shows NBR when train length is fixed at 16 packets and the probing packet size varies from 50 bytes to 1500 bytes in log-log scale.
We again observe a power-law decrease of NBR with respect to the increase in the probing packet size.
Conjecturing that the relationship between NBR, probing size s, and train length l can be modeled using function NBR = k/(s α 1 l α 2 ), we get: log(NBR) = log(k) − α1 log(s) − α2 log(l),To obtain further insight into this formula, we plot 3D α 1 α 2 log(k) CBR 1.103 ± 0.017 0.993 ± 0.008 10.53 ± 0.175 PCS 0.562 ± 0.006 0.534 ± 0.003 6.300 ± 0.058 PUS 0.524 ± 0.008 0.539 ± 0.004 6.111 ± 0.077 POF 0.413 ± 0.007 0.338 ± 0.003 4.000 ± 0.074 charts of NBR(s, l) on a log-log scale for all four traces and indeed observed four flat planes.
Figure 10 shows two of them, the NBR planes for PCS and POF.We use 3D-fitting to find the parameters of the four planes.
All least-square fitting errors are less than 2%, indicating that the power-law function (65) is a reasonable model for NBR.
Curve-fitting results are given in Table 1, which shows that traffic with more burstiness has smaller values of α 1 and α 2 .
This explains why the probing bias in POF is harder to overcome than those in the other three cross-traffic traces.The experimental results we obtained in trace-driven testing agree with our analytical findings very well.
Furthermore, our results show that with fixed probing constructions, more cross-traffic burstiness does not necessarily implies more probing bias.
This probing bias, however, is more difficult to overcome by increasing the probing packet size or probing train length.To understand this phenomenon, recall that traffic burstiness relates to how fast the traffic becomes "smooth" with respect to the increase of observation intervals rather than how "smooth" the traffic appears given a fixed observation interval.
Hence, it is usual that for a given observation interval, POF has smaller second order statistics than Poisson traffic and appears "smoother", leading to less probing bias when packet trains are constructed to sample the traffic in such an observation interval.
As the train length or packet size increases, the observation interval increases, Poisson traffic becomes smooth quicker than POF.
Therefore, the probing bias is also overcome quicker.Even though we do not offer a precise interpretation for the power-law relation between NBR metric and probing constructions, we believe that it is related to the evolving trend of available bandwidth frequency distribution with respect to the increase of observation interval.
This view is supported by the closed-form expression of probing bias, which shows that there is no other factor that can decide the NBR metric.
Among the five representative proposals TOPP, IGI/PTR, Spruce, pahtload, and PathChird, the first three directly fall under the umbrella of our work.
The last two techniques have quite a few tunable parameters and their behavior is complex.
We will consider them in our future work.
Figure 11 shows the rate response curves for the four traces when the hop is probed using 1, 500-byte packet pairs (as suggested in [14]).
The curves are transformed using formula (4) so that TOPP can apply segmented linear regression to obtain the hop capacity and available bandwidth information.
In the order of closeness to TOPP's expected piece-wise linear curve appear the response curves of CBR, POF, PCS and PUS.
TOPP uses the second segment, assuming that it is the one with the hop information.
However, the biased probing range usually appears as the second segment unless it is very small and undetectable.
In Figure 11, all the biased ranges are very clear and will be incorrectly acted upon by TOPP.
Table 2 shows the results of a linear regression applied to the biased response curves according to the basic algorithm in TOPP.
As the table shows, the available bandwidth is significantly underestimated, especially for PUS and PCS.
Both the hop capacity and cross traffic intensity are significantly overestimated.
To assure asymptotic accuracy, TOPP has to apply additional techniques to bypass these segments in the biased probing range.
PTR uses the probing output rate, s/E[gO], at the turning point to estimate the available bandwidth.
As we established, the turning point usually is not the available bandwidth point.
It can be associated with a rate much smaller than available bandwidth.
Thus, theoretically-speaking, PTR is a negatively biased available bandwidth estimator in all single-hop paths.As an estimator of cross-traffic intensity, the IGI formula is negatively biased when g I ≤ s/C.
This is clear when comparing (66) with the ISE equation (37), which has the same numerator but smaller denominator than those of IGI.λ = E 1≤i<n,d i+1 −d i >g I C(d i+1 − d i − s C ) d n − d 1(66)Recall that in [5], the IGI estimator is applied at the turning point where a n − a 1 = E[d n − d 1 ].
In that case, IGI has the same denominator, but a smaller numerator compared to ISE.
According to Theorem 4, ISE is a positively-biased intensity estimator at the turning point, which suggests that IGI can be viewed as an estimator with a heuristical compensator for this bias.
We use trace-driven testing to examine the performance of IGI's bias compensation.
We use probing packet size 750 bytes and train length 64 packet as suggested in [5].
For comparison purposes, we also examine the ISE estimator and the PTR available bandwidth estimator.
Figure 12 shows these results for PCS cross-traffic.
The results for the other three traffic traces are similar.
The figure clearly shows that IGI provides a good estimate of crosstraffic intensity λ at the available bandwidth point A = 7 mb/s, while not at the turning point T ≈ 6 mb/s.
When the input probing rate is small, IGI formula is not a converging estimator and the results are unstable.
Spruce uses ISE with input probing rate C to estimate cross-traffic intensity.
Thus, it is unbiased according to The- orem 3.
Although this approach is more susceptible to crosstraffic interference from non-tight hops, our paper focus on single-hop analysis and we skip this issue.
This paper focused on developing a theoretical understanding of single-hop bandwidth estimation in non-fluid cross-traffic conditions.
Our main contributions include a rigorous formulation of all relevant factors in probing-based bandwidth estimation, an analytical methodology featuring intrusion residual analysis, and a thorough discussion of single-hop probing response curves.While we identified the probing bias as one potential contributing source of measurement errors, there are certainly other important issues related to the performance of measurement techniques such as multi-hop effects, timing errors, and layer-2 effects [17].
Our future work involves extending this analysis to multihop paths and understanding the behavior of current measurement techniques in arbitrary network paths.
